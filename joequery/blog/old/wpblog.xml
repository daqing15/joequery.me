<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.3.1" created="2012-07-03 18:44" -->
<rss version="2.0"
  xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
  <item>
    <title>6 Steps to Developing Web Applications</title>
    <link>http://www.vertstudios.com/blog/6-steps-developing-web-applications/</link>
    <pubdate>Sat, 06 Feb 2010 07:41:48 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=50</guid>
    <description></description>
    <content><![CDATA[The main purpose of my blog is to convince you that web programming should follow the structure of any other type of programming. This obviously involves taking the time to learn the syntax of the language and the semantics of the language. (<a href="http://www.jguru.com/faq/view.jsp?EID=81">Syntax vs Semantics</a>) The larger issue, however, is the way we approach our design and programming. Do we really approach our HTML, CSS, and PHP as a programmer would?

The Software Development Method(SDM) as described by Frank L. Friedman, author of the frequently used Computer Science text book <a href="http://www.amazon.com/Problem-Solving-Abstraction-Design-Using/dp/0201612771">Problem Solving, Abstraction, and Design Using C++</a> has six major parts. The Software Development Method is to be completed in a word processor or even with pen and paper. The point is to design the structure of the application instead of just burrowing headfirst into the work without a proper plan. The six major parts are:
<ol>
  <li>Specify the Problem Requirements</li>
  <li>Analyze the problem.</li>
  <li>Design the algorithm to solve the problem.</li>
  <li>Implement the algorithm.</li>
  <li>Test and verify the completed program.</li>
  <li>Maintain and Update the Program.</li>
</ol>
Let's examine these parts individually.
<h2>1. Specify the Problem Requirements</h2>
Most web designers and programmers have already lost the battle at this point. There is a tendency to sit down in front of your computer and start coding without putting any thought into the specifics of what you are doing. Specifying the problem requirements means you must clearly state the problem. If you can not clearly state the problem, how can you measure whether your project is a solution to that problem? Most web programmers make their projects and then spend time finding out what problems it can solve. That is completely inefficient. It is much better to zero in on the root problem and create a solution. We should strive for <strong>purpose driven</strong> programming.

You should treat your problem statement like you would treat a thesis statement for an English paper. Your problem statement gives your application direction, and lets you know what resources you may need. <em>The stronger and more concise your problem statement,  the more efficient your code will be. </em>

Let's up ourselves in the position of a web programmer. We have received a call from GameTraders, a company that buys and sells games in retail stores distributed around the country. They tell us that they have no computer systems for storing employee information. They tell us that they would like us to make an information system accessible by managers on the company website. They also say they would like to be able to determine what information about an employee they wish to have at anytime  so they won't need to call us every time they need an adjustment.

From this conversation, we can now formulate a problem statement.
<strong>Problem Statement:</strong>
"GameTraders has all employee records only on paper and now wishes to have them available on their company website for managers to view. Create an application on the website that allows managers to specify what information they wish to store for each employee and a form that  generates automatically based on their specifications. Only managers should have access to this information."

With a solid problem statement created, we are able to tell exactly what our finished product should be able to do. With this information in hand, we can now move on to Problem Analysis, where we discuss how the problem should be approached from a logic and coding standpoint.
<h2>2. Analyze the Problem</h2>
Analyzing the problem has four main parts:
<ol>
  <li>Identify Inputs (What data you have to work with)</li>
  <li>Identify Outputs and Output Format (What you will display and how it will look)</li>
  <li>Additional Requirements or Constraints (Any limitations on Data)</li>
  <li>Identify Relevant Formulas</li>
</ol>
If steps 1 and 2 are not done correctly, you will solve the wrong problem! You can only solve the problem utilizing only the inputs available. Going beyond the bounds of available inputs will mean you are not creating a solution that will cater to the needs of your client.

Let's go ahead and follow the Problem Analysis steps for GameTraders.

<strong>Problem Inputs</strong>
For problem inputs, you want to define your constants and your variables. When defining these, it is very important that you have relevant variable names and stick to consistent variable naming conventions. Naming conventions are pattens you apply to certain data types to improve the readability of the code. For instance, a common convention for constants is to have them capitalized. There are numerous naming conventions, but here are the two I like to use:
<ol>
  <li><a href="http://msdn.microsoft.com/en-us/library/aa240858(VS.60).aspx">Microsoft's Development Conventions</a></li>
  <li><a href="http://www.tizag.com/phpT/variable.php">Tizag's PHP Conventions</a></li>
</ol>
Relevant variable names are extremely important for readability. Here is where I make a very important claim:
<strong>Code that works in and of itself is NOT good code!
</strong>
Good code has these characteristics:
<ol>
  <li>Readability - You can tell the processes that are occurring based on meaningful variable and function names.</li>
  <li>Logic - The code is presented so that the steps to arrive to a solution have thought progressions that are easy too follow.</li>
  <li>Easily Alterable - Good code can be changed very easily and very quickly.</li>
</ol>
As an example, if we wanted to add the number of fighting games in stock worth $30 each with the number of shooting games worth $40 each to get a value of current Inventory, we could do this:
<pre class="prettyprint">
$a = 30;                  // Fighting Games Price
$b = 40;                  // Shooting Game Price
$c = 5;                   // Number of Fighting Games in stock
$d = 10;                  // Number of Shooting Games in stock
$e = ($a*$c) + ($b*$d);   // Total value of inventory. Price times Quantity.
echo $e;                  // Display value of inventory </pre>

The code displays the value of inventory perfectly, so what's so wrong with it? Well after the programming has left your short term memory, when you come back to the code it will make no sense. If these values are called later in the program, you'll have to keep on scrolling up to see the comments explaining what it means, or you will have to comment every single time the variable is called, which would lead to very cluttered code.

The code would be more readable, more logical, and much more easy to update if the variables were named in this fashion

<pre class="prettyprint">
$fightingPrice = 30;
$shootingPrice = 40;
$fightingInventory = 5;
$shootingInventory = 10;
$inventoryValue =($fightingPrice*$fightingInventory)+($shootingPrice*$shootingInventory);   // Total value of inventory. Price times Quantity.
echo $inventoryValue; </pre>

It is much easier to follow the logic of the code with relevant names used.

Now that we've discussed how to name and work with inputs, let's apply it to GameTraders. GameTraders problem inputs are unique in that they are dynamic: GameTraders wants to be able to change what information they have stored about an employee at any time. It would be counterproductive for us to list inputs such as "Name", "Social Security","Insurance", etc because our client has asked to be able to define the inputs. The best way to accommodate is to have their input of employee information be an <a href="http://www.tizag.com/phpT/arrays.php">Array</a>. Additionally, GameTraders requested this data be exclusive to the managers. How do we make data exclusive? Logins. So we will be receiving input of a login username and a password. So now we type the following into our word processor:

<strong>Problem Inputs:</strong>
<pre class="prettyprint">
$arrEmployeeInfoCategories //Decides what information categories concerning an employee are stored.</pre>

<pre class="prettyprint"> $username                  //Login username
$password                  //Login password
</pre>
Our variables make sense and are easy to read. If we see $arrEmployeeInfoCategories later in the code, we will know it's an array due to the naming convention I used for arrays, which is the "arr" prefix. Feel free to make your own naming conventions, just be <strong>CONSISTENT</strong>.

We have good inputs defined and established. It's time to move on to the next step of Problem Analysis: Outputs.

<strong>Problem Outputs</strong>

Problem Outputs are what will be displayed for the user to see. So let's consider what GameTraders want to see. They want to see information about their employee. Although we could probably reason that "John" is a first name, "Smith" is a last name, and "999-92-9999" is a Social Security number, why make the user have to work any harder than necessary? It would be easier to have the Category name displayed too. Another thing that could help the user is the ability to see if it is his account that is actually logged in. The easiest way to let someone know if they are logged in to the correct account is to see their login name somewhere on the page.

We've established we need to display the category of information, the actual information, and the user's login name on the page. Now all that's left to do is list them out in our word processor.

<strong>Problem Outputs:</strong>
<pre class="prettyprint">
$arrEmployeeInfoCategories //Decides what information categories concerning an employee are stored.
$arrEmployeeInfoValues     //Employee information corresponding to a category
$username                  //Login username
</pre>

Now that outputs are clearly defined and taken care of, let's move on to
<strong>Additional Requirements or Constraints on Data. </strong>
In this section, we will declare the expected data entry. What does this mean? This means when a user is prompted for their first name, we expect them to enter letters, possibly some apostrophes for foreign names. We do not want them to enter symbols such as #,@,!. In order to avoid invalid data being stored, we use <a href="http://php.net/manual/en/function.preg-match.php">Regular Expressions</a>. I won't go into detail on the syntax of Regular Expressions here, but I will go through the logic of filtering through bad input data.

So let's refer back to our inputs.

<pre class="prettyprint">
$arrEmployeeInfoCategories
$username
$password</pre>

Common limitations on usernames and passwords are:
<ul>
  <li>Minimum width of around 5-6 characters</li>
  <li>Must include at least one non-alphabetical character such as a number or symbol.</li>
</ul>
Since the storage of data in this application merits use of a database, The limitation on the employee category array would be the same limitations on the field values of a table for the database you are using. So for <a href="http://www.mysql.com/">MySQL</a>, you could say the constraints are Alphanumeric Characters and Underscores.

Now that we have data constraints defined, all we have to do is list them out in our word processor.
<strong>Data Constraints:</strong>
<pre class="prettyprint">
$arrEmployeeInfoCategories //Only alphanumeric characters and underscores
$username     //At least six characters long, must contain one non alphabetical character.
$password     //At least six characters long, must contain one non alphabetical character.
</pre>

This example requires no relevant formulas, so we can skip step four of Problem Analysis. This is where you would list conversions or math formulas used in your application.

We've wrapped up Problem Analysis. Next step:
<h2>3. Design the Algorithm</h2>
Algorithm is just a fancy word for "a series of steps used to solve the problem". There are many ways to design an algorithm, but I choose to use <a href="http://en.wikipedia.org/wiki/Pseudocode">Pseudo-Code</a>, which is a representation of the code meant for human reading instead of machine syntax interpretation. Our Algorithm for GameTraders would resemble this:
<pre class="prettyprint">
Read in(get from user) username
Read in password
Validate username and password combination.</pre>

<pre class="prettyprint"> </pre>

<pre class="prettyprint">
If validation unsuccessful,
Display &quot;Username and password do not match&quot;
Else
Read in $arrEmployeeInfoCategories
Validate $arrEmployeeInfoCategories
If validation unsuccessful
Display &quot;Category _____ does not exist&quot;
Else
Retrieve corresponding category data and store into $arrEmployeeInfoValues
Display $arrEmployeeInfoCategories
Display $arrEmployeeInfoValues
</pre>

That's all the algorithm is: Spelling out exactly what you want to program.

Step 4 of Developing Web Applications, implementing the Algorithm, is simply taking the Pseudo-Code made in step three and actually programming it. Step 5, Testing the Data, is making sure the data lines up correctly and returns consistently correct results. Testing the Data also involves making sure the  application executes properly <strong>REGARDLESS OF USER INPUT</strong>. Step 6, Maintaining and Updating the program, is keeping the application current with government standards and user needs. Step 6 is nearly impossible to do if the initial code is illogical, unreadable, and inefficient.

There is a LOT more to web application programming and even web design than just putting yourself in front of your computer and typing away. Without taking the time to establish and analyze the problem, there's no way you will provide the best solution possible to your client. Designing your program with these steps will help eliminate short term frustrations and long term time losses.]]></content>
    <excerpt><![CDATA[Specifying the problem requirements means you must clearly state the problem. If you can not clearly state the problem, how can you measure whether your project is a solution to that problem? Most web programmers make their projects and then spend time finding out what problems it can solve. That is completely inefficient. It is much better to zero in on the root problem and create a solution. We should strive for purpose driven programming.]]></excerpt>
  </item>
  <item>
    <title>C++ Capitalize Each Word (Proper Case)</title>
    <link>http://www.vertstudios.com/blog/c-capitalize-word-proper-case/</link>
    <pubdate>Thu, 04 Mar 2010 06:08:07 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=200</guid>
    <description></description>
    <content><![CDATA[Greetings Canadian students. You should do your own homework!

Just kidding...eh...heh. 

This Post Will Show You How To Capitalize Each Word In C++, Similar To The Way I Am Typing Right Now. This Is Also Known As Proper Case. First I Will Show You The Code, And Then Offer An Explanation.
<h2>The Code</h2>
<pre class="prettyprint">

//Joseph McCullough
//Program: capEachWord.cpp
//Description: Takes a string and capitalizes each word of the string.
//Visit www.mcculloughdesigns.com/blog for more C++ Goods!

#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;

void lowerCase(string&amp;);
void capEachWord(string&amp;);

const string SENTINEL = &quot;0&quot;;//When entered as strToConvert,
              //terminates program.

int main()
{
  string strToConvert;  //The string that will be converted.

  cout &lt;&lt; &quot;***********************************&quot; &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;CapEachWord.exe&quot;                     &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;Capitalizes every word in a string.&quot; &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;Provided By McCullough Designs&quot;      &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;***********************************&quot;;

  //Read in strToConvert
  cout &lt;&lt; &quot;\n\nEnter a String or enter 0 to exit: &quot;;
  getline(cin, strToConvert);

  while (strToConvert != SENTINEL)
  {
    capEachWord(strToConvert);
    cout &lt;&lt; &quot;\nNew String: &quot; &lt;&lt; strToConvert;

    //Read in strToConvert
    cout &lt;&lt; &quot;\n\nEnter a String or enter 0 to exit: &quot;;
    getline(cin, strToConvert);

  }
  return 0;
}


/****** function capEachWord *****
Description: converts the first letter of a word to a capital letter

PARAMETERS
  strToConvert: the string being manipulated

Precondition:
  strToConvert: undefined

  HEADERS
  #include &lt;string&gt;

Postcondition:
  Returns the string with the first letter of every word capitalized.  */

void capEachWord(string&amp; strToConvert)
{
  //Identifies if the current word has been capitalized.
  //Set to false by default.
  bool thisWordCapped = false;
  //Turn all letters lowercase
  lowerCase(strToConvert);

  for (unsigned int i=0; i&lt;strToConvert.length();i++)
  {
     //At a space or punctuation mark, the current word has ended.
     //We are now on a new word that has not yet been capitalized,
     //so thisWordCapped is set to false.
    if ((ispunct(strToConvert[i])) || (isspace(strToConvert[i])))
      thisWordCapped = false;

     //If current word has not been capitalized AND the current character
     //is a letter, uppercase the letter. The word is now capitalized, so
     //thisWordCapped is set to true, and will not be set to false until
     //a space or punctuation is found.
    if ((thisWordCapped==false) &amp;&amp; (isalpha(strToConvert[i])))
    {
      strToConvert[i]=toupper(strToConvert[i]);
      thisWordCapped = true;
    }

  }

}
/****** function lowerCase *****
Description: makes all the characters of a string lowercase

PARAMETERS
  strToConvert: the string being manipulated

Precondition:
  strToConvert: undefined

  HEADERS
  #include &lt;string&gt;

Postcondition:
  Returns the string all lowercase */

void lowerCase(string&amp; strToConvert)
{
   for(unsigned int i=0;i&lt;strToConvert.length();i++)
   {
      strToConvert[i] = tolower(strToConvert[i]);
   }
}


</pre>

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/CapEachWord.cpp">Download the Source Code</a>

<h2>The Explanation</h2>
Here is a visual representation to help you understand the logic of the code.

We create a local boolean value called thisWordCapped. Like the name implies, the value is set to true when the current word of the string being processed has been capitalized. It is set to false by default, because we must account for the possibility of a letter being the first character of the string. If thisWordCapped was defaulted to true and the first character of a string was a letter, the letter would not be uppercased.

We define a word as a series of characters following a blank space or punctuation mark.

If thisWordCapped is true, no code in the loop body will execute,the counter will increment, moving us on to the next character. If thisWordCapped is false, that means the current word we are working on has not yet been capitalized. If thisWordCapped is false and the current character is a letter, we uppercase the letter and set thisWordCapped to true because we have just capitalized the word. thisWordCapped will remain true and the loop will continue to not execute anything and only increment <strong>UNTIL</strong> we reach a space or punctuation.

Here is the logic laid out for you.

Here is our example. The string "hi. You-are nice." We have 4 words here: hi, you, are, nice. So the string should read when we're finished "Hi. You-Are Nice."
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword1.jpg" alt="step1" />

We start by lowercasing all characters using the lowerCase function.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword2.jpg" alt="step2" />

Since thisWordCapped was false and the current character is a letter, we uppercase the  letter and set thisWordCapped to true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword4.jpg" alt="step4" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword5.jpg" alt="step5" />

The current character is a punctuation mark, so thisWordCapped is set to false again.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword6.jpg" alt="step6" />

The current character is a blank space, so thisWordCapped is set to false again.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword7.jpg" alt="step7" />

Since thisWordCapped was false and the current character is a letter, we uppercase the  letter and set thisWordCapped to true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword8.jpg" alt="step8" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword9.jpg" alt="step9" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword10.jpg" alt="step10" />

The current character is a punctuation mark, so thisWordCapped is set to false again.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword11.jpg" alt="step11" />

Since thisWordCapped was false and the current character is a letter, we uppercase the  letter and set thisWordCapped to true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword12.jpg" alt="step12" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword13.jpg" alt="step13" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword14.jpg" alt="step14" />

The current character is a blank space, so thisWordCapped is set to false again.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword15.jpg" alt="step15" />

Since thisWordCapped was false and the current character is a letter, we uppercase the  letter and set thisWordCapped to true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword16.jpg" alt="step16" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword17.jpg" alt="step17" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword18.jpg" alt="step18" />

thisWordCapped is true, so we do nothing and move on to the next character.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword19.jpg" alt="step19" />

The current character is a punctuation mark, so thisWordCapped is set to false again.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword20.jpg" alt="step20" />

We've reached the end of the string, and this is the final result.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/capeachword21.jpg" alt="step21" />

I hope the visual put things in perspective. If you are looking for how to use sentence case in C++, <a href="http://www.mcculloughdesigns.com/blog/c-sentence-case-capitalize-word/345/">visit this post</a>.

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/capeachword/CapEachWord.cpp">Download the Source Code</a>]]></content>
    <excerpt><![CDATA[This Post Will Show You How To Capitalize Each Word In C++, Similar To The Way I Am Typing Right Now. This Is Also Known As Proper Case.]]></excerpt>
  </item>
  <item>
    <title>SEO LOL - Sprinkles Cupcakes</title>
    <link>http://www.vertstudios.com/blog/sprinkles-cupcakes-seo-lol/</link>
    <pubdate>Fri, 05 Mar 2010 05:02:21 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=222</guid>
    <description></description>
    <content><![CDATA[I must start off saying that I freaking love <a rel="nofollow" href="http://www.sprinkles.com/">Sprinkes Cupcakes</a>.

But come on, this is a bit silly. 

&lt;meta name="Keywords" content="www.sprinkles.com,Original cupcake bakery,Sprinkles cupcakes,Sprinkles cucpcakes,Sprinkles,
Sprinklescupcakes,Sprinklz,Sprinkels,Sprinklez,Sprnkles,sprinkls,sprinkles cakes,sprinkles bakery,sprinkles cupacakes,I love sprinkles,
I love cupcakes,Cupcake addict,Cupcake obsessed,Obsessed with cupcakes,Eat cupcakes,Cupcake cake,Cupacake,cupcake love,
Sex in the city,New york city cupcakes,Gourmet treat,Modern dot,Dot decoration,Sugar decoration,Real sprinkles,Chocolate sprinkles,
Vanilla sprinkles,Gourmet,Natural,Delicious,Scrumptious,tasty,tasty treats,Fresh,Fresh baked,Freshly baked,Scratch baked,Baked from scratch,
Sophisticated,Yummy,Cupcake,Cupcakes,Small cakes,Treat,Baked goods,Moist,sweet,Best bakery,Tantalizing,Worlds best bakery,
World famous bakery,Rodeo Drive bakery,Hollywood bakery,Famous bakery,Bakery,Bake,Los angeles bakery,Unique,Tiny,
Beverly hills bakery,Upscale,Celebrity,fancy cupcakes,cupcake boutique,designer cupcakes,Hollywood,Movie star,
movie star cupcakes,hollywood cupcakes,entertainment cupcakes,Cupcake wars,Eat cake,eat cupcake,Eat cupcakes,
Eat sprinkles,eat sprinkles cupcakes,Home baked,Homebaked,Magnolia bakery,Yummy cupcakes,Ledas bakeshop,Buttercake bakery,
Buttercup bakeshop,Crumbs,Crumbs bakery,Frosted cupcakery,Karas cupcakes,Sibbys cupcakery,Celebrity bakery,
Frosted cupcakery,Cupcakery,Swirlz cupcakes,Swirls cupcakes,Oprah's favorite cupcakes,Oprahs favorite things,
Oprah's favorite cupcakes,Oprah cupcake,Oprah cake,Oprah red velvet,Barbra streisand cupcake,Barbara streisand cupcake,
Barbra streisand sprinkles,Barbra oprah cupcake,Barbra oprah sprinkles cupcakes,billys bakery,city bakery,my little cupcake"&gt;]]></content>
    <excerpt><![CDATA[I must start off saying that I freaking love <a rel="nofollow" href="http://www.sprinkles.com/">Sprinkes Cupcakes</a>.
But come on, this is a bit silly. ]]></excerpt>
  </item>
  <item>
    <title>IE6 and the Starving Artist</title>
    <link>http://www.vertstudios.com/blog/ie6-starving-artist/</link>
    <pubdate>Tue, 09 Mar 2010 23:37:41 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=228</guid>
    <description></description>
    <content><![CDATA[<img src="http://www.vertstudios.com/blog/images/mc-blog/opinion/starvingartist/starvingartists.jpg" alt="The Starving Artist" />

According to my former Art History professor <a href="http://www.christopher-stewart.com/">Christopher Stewart</a>, there are two reasons why an artist can starve:
<ol>
  <li>His lack of skill</li>
  <li>His integrity</li>
</ol>
The first one makes complete sense. A person who can't draw a straight line shouldn't be paid to be an artist. But why would an artist with skill and integrity starve? Simple:
<h2>The Audience Controls The Art</h2>
Wait a second: How does the audience control the art when it's the artist that creates it in the first place?

The artist creates, but <strong>the audience signs the paycheck</strong>.

Mr. Stewart and I were on a car ride to Dallas to hang out with his son, my best friend, who was in town visiting from Texas Tech University. At that time in the Art History class, Mr. Stewart was discussing the Middle Ages(also known as the Dark Ages). The Middle Ages are notorious for the lack of scientific innovation and the devolution of art.

Centuries  before the middle ages, we had the Greeks, who got really good at casting in bronze.

<img src="http://www.artlex.com/ArtLex/g/images/greek_zeusartem.1.lg.JPG" alt="Zeus casted in Bronze" />

Artists were becoming famous for the first time, and people wanted these sculptures in their households, so replication production was a huge industry.

However, following the <a href="http://en.wikipedia.org/wiki/Peloponnesian_War">Peloponnesian War </a> and <a href="http://en.wikipedia.org/wiki/Decline_of_the_Roman_Empire">fall of the Roman Empire</a>, people no longer wanted and could no longer afford the beautiful sculptures.

With the rise of Christianity, Christian art became the mainstream. Since Christianity is opposed to idol worshipping, artists ensured their depiction of Jesus and the saints was distorted to the point to where it would not be worshipped.

<img src="http://www.historyforkids.org/learn/medieval/art/pictures/calvaryivory.jpg" alt="Medieval Art" />

This is what the people wanted: Too accurate or beautiful a presentation of biblical figures would be a sin, so artists did not use detail in their work. In the image above, you can see disfigured proportions, and the perspectives are extremely off. But it's what the people wanted. Consequently, the artists simply forgot how to create in proportion and create with proper perspective.

Additionally, all the Christians destroyed the Greek sculptures.

"<em>Christianity defeated and wiped out the old faith of the pagans. Then with great fervour and diligence it strove to cast out and utterly destroy every last possible occasion of sin; and in doing so it ruined or demolished all the marvelous statues, besides the other sculptures, the pictures, mosaics and ornaments representing the false pagan gods; and as well as this it destroyed countless memorials and inscriptions left in honor of illustrious persons who had been commemorated by the genius of the ancient world in statues and other public monuments…their tremendous zeal was responsible for inflicting severe damage on the practice of the arts, which then fell into total confusion. </em>"
-Giorgio Vasari (1511-1574), <a href="http://www.amazon.com/Lives-Artists-Oxford-Worlds-Classics/dp/0199537194/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1268178238&amp;sr=8-1">Lives of the Artists</a>.

It was up to the Italians to rescue art: They still had preserved Roman work to treat as a template. This was the mechanism by which <a href="http://en.wikipedia.org/wiki/Renaissance">the Renaissance</a> sprouted.

The same principle applies to music.

Take the audience at a DCI marching competition. They want to see awesome marching fundamentals, good forms and solid stick heights from the percussion. They want to hear good intonation, blend, and dynamic contrast from the brass.
<a href="http://www.youtube.com/watch?v=hQKZLc5VcDw">2002 Cavaliers Frameworks</a>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="350" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.youtube.com/v/hQKZLc5VcDw" /></object>

The audience of Dallas Carter  High School just want to have something to dance to.

<a href="http://www.youtube.com/watch?v=UlXo61paMM8">Dallas Carter "Marching Band"</a>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="350" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="src" value="http://www.youtube.com/v/UlXo61paMM8" /></object>

Both shows meet audience expectations favorably, but it's completely obvious which performance has more intellectual integrity. If an audience for perfect band performances didn't exist, perfect bands wouldn't exist. If an audience for crappy bands didn't exist, crappy bands wouldn't exist.
<h2>Relation to Web Design</h2>
We spend hours debugging IE6 to make our clients happy. But by doing so, we create disgusting CSS Hacks. How do we expect exceptional progress while we place
<pre class="prettyprint">
  div.thingy {
  height: 100px;
  width: 100px;
  position: relative;
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/girl_small.png', sizingMethod='scale');
}

* &gt; .thingy {
  background-image: url(images/girl_small.png);
}<!--formatted--></pre></pre>
To <a href="http://snipplr.com/view/2680/transparent-png-css-for-ie6/">make a transparent PNG work in IE6</a>.

We've also seen the decline of good coding practices. Some developers will see a problem in IE and automatically make an &lt;if IE6&gt; conditional statement without considering the possibility that their code is flawed, simply because IE6 is so prone to mess things up.

Go validate a random website and look at how trashy the code is. Why are people getting paid to create such garbage?

Because the clients do not want good code: They want thrilling web applications and designs that work on all browsers. Due to IE6's terrible CSS rendering, it is nearly impossible to have both good code and innovative IE6 design exist at the same time. The clients give us the money to feed our families, so who are we to say "No, I refuse to develop for IE6."

Microsoft has already declared that them <a href="http://arstechnica.com/microsoft/news/2009/08/microsoft-dropping-support-for-ie6-is-not-an-option.ars">dropping support for IE6 is not an option</a>.

So it's up to us. Pressure from larger companies will help the process. For example, <a href="http://arstechnica.com/microsoft/news/2010/02/youtube-to-kill-ie6-support-on-march-13.ars">Youtube will be cutting off IE6 Support</a>. But even so, the designers who make the code will determine if IE6 stays or IE6 goes.

As past technology and present technology drift further apart, we will experience more pain as we stretch ourselves out trying to hold on to both. Eventually we will take the bold step into the future, or we will watch our web standards crumble as we try to accommodate antiquated technology. It's either R.I.P Progress or <a href="http://ripie6.com/">R.I.P IE6</a>

Personally, I'm with <a href="http://www.webdesignerwall.com/general/trash-all-ie-hacks/">Web Designer Wall: Trash IE6 Hacks!!!</a>.]]></content>
    <excerpt><![CDATA[<img src="http://www.vertstudios.com/blog/images/mc-blog/opinion/starvingartist/starvingartists.jpg" alt="The Starving Artist" />

According to my former Art History professor <a href="http://www.christopher-stewart.com/">Christopher Stewart</a>, there are two reasons why an artist can starve:
<ol>
  <li>His lack of skill</li>
  <li>His integrity</li>
</ol>
The first one makes complete sense. A person who can't draw a straight line shouldn't be paid to be an artist. But why would an artist with skill and integrity starve?]]></excerpt>
  </item>
  <item>
    <title>Blogging: Escaping the Mediocrity</title>
    <link>http://www.vertstudios.com/blog/blogging-escaping-mediocrity/</link>
    <pubdate>Sat, 13 Mar 2010 01:33:25 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=261</guid>
    <description></description>
    <content><![CDATA[Tasks that are relatively simple to do are relatively difficult to master. This includes:

<h3>Card house building.</h3>

<img  style="text-align: center; margin: 0px auto; display:block;" src="http://farm4.static.flickr.com/3170/2288268493_00c66d58a3.jpg" alt="Tiny Card House" />
<p style="text-align: center;">(vs)</p>
<img  style="text-align: center; margin: 0px auto; display:block;"  src="http://cardstacker.com/images/about_capitol.jpg" alt="Huge Card House" />

<h3>Sand castle building</h3>

<img style="text-align: center; margin: 0px auto; display:block;"  src="http://world.std.com/~eva/florida/sand_castle.jpg" alt="Kid's Sand Castle" />
<p style="text-align: center;">(vs)</p>
<img style="text-align: center; margin: 0px auto; display:block;"  src="http://pictureschat.com/wp-content/uploads/2009/04/sand-castle.jpg" alt="Huge Sand Castle" />

And Blogging.

Blogging is extremely easy to do. You just type away at what's pounding at your heart, right?

No, that's wrong. It's about typing what's on your heart <em>and</em> commenting other people who are typing what's on <em>their</em> heart, right?

<img src="http://www.vertstudios.com/blog/images/mc-blog/blogging/mediocreblog/lifesucks.jpg" alt="Woman crying at computer" />

This is how most people view blogging. If that's the case, the question arises:
<strong>How are you different than most people?</strong>

Chris Roane of <a href="http://www.montanaprogrammer.com/">montanaprogrammer.com</a> has summarized <a href="http://www.montanaprogrammer.com/work-smarter/blogging-is-like-sex/">the issue of mediocre blogging</a> with this simple (and quite memorable) analogy:

<cite>
It seems everyone is blogging these days. In fact, the word “blog” has a different meaning depending on who you ask. It is just as easy to create a blog as it is to have sex (at least in “completing the transaction”). But having the ability doesn’t immediately make you into a master. Becoming a master takes effort, dedication and experience.
</cite>

So are you the Italian Stallion of Blogging?

<img src="http://www.vertstudios.com/blog/images/mc-blog/blogging/mediocreblog/italian.jpg" alt="The Italian Stallion gets more than you" />

There are a lot of blogs. How many? <a href="http://www.blogherald.com/2008/02/11/how-many-blogs-are-there-is-someone-still-counting/">Technorati currently states</a> it is tracking over 112.8 million blogs written in english.

If you want your blog to be successful, you must differentiate. We all have the same tools on our blogs, so it is how we use those tools that determine our success. Since our blog is our product, we can treat ideas that relate to product differentiation to our blog.

<h2>Blog Differentiation</h2>
According to economicswebinstitute.org's article on <a href="http://www.economicswebinstitute.org/glossary/product.htm">product differentiation</a>, the significance of product differentiation is described as

<cite>Offered under different brands by competing firms, products fulfilling the same need typically do not have identical features. The differentiation of goods along key features and minor details is an important strategy for firms to defend their price from levelling down to the bottom part of the price spectrum.</cite>

The thing you are blogging about has already been blogged about before. If you believed that not one of the 112.8 million blogs have posted an article concerning what you blogged about, you'd be delusional. The sooner you acknowledge the fact that you have competition, the better. You aren't bringing anything new to the table, but you are bringing <strong>a new perspective</strong>.

How can you go about successfully presenting your perspective? Here are 5 steps to get you headed in the right direction.

<h3>1) Know your audience</h3>
My blog caters to people who wish to know about the fundamentals of web programming and programming in general. These people are beginners to coding and need articles that cover basics. I know these people exist, because as long as web developers exist, they will have to start somewhere. With the opinion section of my blog, I cater to people who have at least some experience with web development, and I open up discussion on some controversial issues. I know who I'm writing to.

<strong>If you don't know your audience, your entire blog is just a journal</strong>.

Take time to analyze who your audience is. If you don't know, you've approached blogging with a backwards mentality. You blog <em>to your audience</em>, you do not blog <em>and then</em> try to find an audience that the post will fit.

<h3>2) Give your audience what they want</h3>
This is generally a pretty simple thing to do as long as you know who your audience is. Blogging is mostly about authority, having something useful to impart to someone who most likely does not share the same knowledge as you. If you know your audience, then you know their wants and needs. You can occasionally write some things for yourself (irrelevant posts on a subject outside of the blogs topic area that you find interesting), but don't get too comfortable with it to the extent that you neglect the needs of your followers.

<h3>3) Be Consistent</h3>
Contrary to popular belief, consistent does <strong>NOT</strong> mean daily, or even weekly. How often you  wish to blog depends entirely on you. Quality will always beat quantity, (although putting the two together can yield incredible results). Stick yourself to consistent intervals between posts. Knowing your audience also helps here. Are the members of your audience subscribed to 100 RSS feeds? Most web design bloggers have a lot of subscriptions. If that's the case, you don't want to overload them.

<h3>4) Be yourself</h3>
Being genuine is so important in every aspect of business. I'm just discovering this myself, so I actually plan on redesigning my company website to better reflect my personality. When you are genuine, you are more creative, you are more readable, and most importantly, you are <em>much</em> more linkable.

<h3>5) If you're struggling, reach out to people who are also struggling</h3>
Commenting on blogs of people who have thousands of subscribers may provide a decent little back link, but having your link in an article or post is so much more meaningful. Find blogs by people who are also struggling, and you can quickly build a mutually beneficial relationship with that person after leaving comments on 2-3 of their posts. If you two click, you can start referencing the other in your posts, providing links for both parties.

(Read Article: <a href="http://www.mcculloughdesigns.com/blog/relationships-struggling-blog/298/">Using Relationships to Help Your Blog</a>)

<h2>You're different than everyone else. </h2>

Let your blog reflect that. You don't have to be a guru to present a different perspective on things already discussed by someone else: You just have to be yourself, be creative, be smart, and be social.]]></content>
    <excerpt><![CDATA[If you want your blog to be successful, you must differentiate. We all have the same tools on our blogs, so it is how we use those tools that determine our success. Since our blog is our product, we can treat ideas that relate to product differentiation to our blog.]]></excerpt>
  </item>
  <item>
    <title>Using Relationships to Help Your Blog</title>
    <link>http://www.vertstudios.com/blog/relationships-struggling-blog/</link>
    <pubdate>Sat, 13 Mar 2010 01:33:21 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=298</guid>
    <description></description>
    <content><![CDATA[Although I'm new to blogging myself, I believe I have found a different perspective that will be changing up how I comment other blogs, and I expect to see great results from it.

If you're like me, you've spent a lot of time making posts and commenting posts, yet you don't have many (if any) subscribers. The problem isn't that you're not posting or commenting enough: You might simply be commenting <strong>the wrong blogs</strong>.

<img src="http://www.vertstudios.com/blog/images/mc-blog/blogging/commenting/asleep_at_computer.jpg" alt="Asleep at Computer" />
<h2>Find Blogs in a Similar Situation</h2>
I used to try to leave as many comments on the major blogs as possible in order to get more back links. Then I got to thinking:

"There's no way I'm the <em>only</em> struggling blogger doing this."

At that moment I realized the other people who were commenting on those big-shot blog posts could easily be in the same situation I'm in: needing more exposure and needing more back links. So I began to visit the blogs of the people who commented on the same posts, and boy what a treat it was! I have come across some great blogs that deserve more of an audience. These are the types of blogs you should give special attention to if you are struggling with attracting an audience. They are in the same boat as you.

<img src="http://www.vertstudios.com/blog/images/mc-blog/blogging/commenting/potentialrelationships.jpg" alt="Potential Relationships" />

Those of you who are struggling with getting your blog exposed know how exciting it is to finally get a (non spammy) comment or pingback. So excited that you might visit the page of the person who left the comment and take the time reciprocate the favor.

So visit a major blog, find an article with a lot of comments, and check out the links of the people who commented. If they have content relevant to your blog, and you like their articles, leave comments on 2-3 of their posts. This will help establish a mutually beneficial relationship that is more likely to create more back links than just leaving a comment on a top 10 blog.]]></content>
    <excerpt><![CDATA[<img src="http://www.vertstudios.com/blog/images/mc-blog/blogging/commenting/asleep_at_computer.jpg" alt="Asleep at Computer" />

If you're like me, you've spent a lot of time making posts and commenting posts, yet you don't have many (if any) subscribers. The problem isn't that you're not posting or commenting enough: You might simply be commenting <strong>the wrong blogs</strong>.]]></excerpt>
  </item>
  <item>
    <title>C++ Sentence Case (Capitalize First Word)</title>
    <link>http://www.vertstudios.com/blog/c-sentence-case-capitalize-word/</link>
    <pubdate>Sun, 21 Mar 2010 22:25:24 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=345</guid>
    <description></description>
    <content><![CDATA[when typing up important documents, it is important to use sentence case to invoke a sense of formality. imagine writing an email or heck, an entire blog post, not using a capital letter. it would really hurt your professional decorum.

So this post will show you how to convert a string to sentence  case using C++. Sentence case is having the first letter of the first word in a sentence capitalized.

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase.cpp">Download the Source Code</a>
<h2>The Code</h2>
<pre class="prettyprint">
//Joseph McCullough
//Program: sentencecase.cpp
//Description: Converts a string to sentence case.
//Visit http://www.mcculloughdesigns.com for more C++ Goods

#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;

void sentenceCase(string&amp;);
void lowerCase(string&amp;);
bool isSentencePunc(char);

const string SENTINEL = &quot;0&quot;;//When entered as strToConvert,
              //terminates program.

int main()
{
  string strToConvert;    //The string that will be converted

  cout &lt;&lt; &quot;***************************************************&quot; &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;SentenceCase.exe&quot;                     &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;Converts Strings to Sentence Case&quot; &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;Provided By McCullough Designs&quot;      &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;***************************************************&quot;;

  //Read in strToConvert
  cout &lt;&lt; &quot;\n\nEnter a String or enter 0 to exit: &quot;;
  getline(cin, strToConvert);

  while (strToConvert != SENTINEL)
  {
    sentenceCase(strToConvert);
    cout &lt;&lt; &quot;New String: &quot; &lt;&lt; strToConvert;

    //Read in strToConvert
    cout &lt;&lt; &quot;\n\nEnter a String or enter 0 to exit: &quot;;
    getline(cin, strToConvert);

  }
  return 0;
}

/****** function sentenceCase *****
Description: Converts a string so that the first letter of the first word
of a sentence is capitalized.

PARAMETERS
  strToConvert: the string being manipulated

Precondition:
  strToConvert: undefined

  HEADERS
  #include &lt;string&gt;

Postcondition:
  Returns the manipulated string by reference */

void sentenceCase(string&amp; strToConvert)
{
  //Identifies if the sentence has been capitalized. Set to false by default.
  bool thisSentenceCapped = false;
  lowerCase(strToConvert);  //Lowercase the string before processing.

  for (unsigned int i=0; i&lt;strToConvert.length();i++)
  {
    //At a punctuation mark, the next sentence has not been manipulated
    //yet to have its first letter capitalized, so thisSentenceCapped is false.
    if (isSentencePunc(strToConvert[i]))
      thisSentenceCapped = false;

    if ((thisSentenceCapped==false) &amp;&amp; (isalpha(strToConvert[i])))
    {
      strToConvert[i]=toupper(strToConvert[i]);
      thisSentenceCapped = true;
    }

  }
}

/****** function lowerCase *****
Description: makes all the characters of a string lowercase

PARAMETERS
  strToConvert: the string being manipulated

Precondition:
  strToConvert: undefined

  HEADERS
  #include &lt;string&gt;

Postcondition:
  Returns the string all lowercase */

void lowerCase(string&amp; strToConvert)
{
   for(unsigned int i=0;i&lt;strToConvert.length();i++)
   {
      strToConvert[i] = tolower(strToConvert[i]);
   }
}

/****** function isSentencePunc *****
Description: Checks to see if a character is a punctuation mark used to denote
the end of a sentence. (! . ?)

PARAMETERS
  character: The character being tested

Precondition:
  character: defined

Postcondition:
  Returns boolean value of true if the character is ! . or ? */

bool isSentencePunc(char character)
{
  switch(character)
  {
    case '!':
    case '.':
    case '?':
      return true;
    default:
      return false;
  }
}
</pre>
<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase.cpp">Download the Source Code</a>
<h2>The Explanation</h2>
You'll notice the logic for the sentenceCase function is very similar to the logic of the <a href="http://www.mcculloughdesigns.com/blog/c-capitalize-word-proper-case/200/">capEachWord (proper case) function</a>.

To understand sentence case, we must first understand a sentence.

So what is a sentence?

In English, a sentence is a series of alphanumeric characters, punctuation marks, and blank spaces followed by a period, exclamation point, or question mark.  Once we have come across one of these three characters, we know the
current sentence has ended and the next sentence is about to begin.

C++ has a standard function for evaluating if a character is a punctuation mark via ispunct(). However, this function includes every punctuation mark: Colons, commas, hyphens, things that usually do not denote the end of a sentence. For this reason, we have to make our own function.
<pre class="prettyprint">
bool isSentencePunc(char character)
{
  switch(character)
  {
    case '!':
    case '&amp;':
    case '?':
      return true;
    default:
      return false;
  }
}
</pre>
The function takes in a character by value, and returns true if the character is an exclamation point, period, or question mark. The function returns false if otherwise.

The sentenceCase function starts out by <a href="http://www.mcculloughdesigns.com/blog/string-lowercase-uppercase-c/133/">lowercasing the string</a>. We do this so random capital letters within words will be accounted for.
<pre class="prettyprint">This IS Not sentence Case.</pre>
<pre class="prettyprint">This iS not  sentence case.</pre>
However, this brings up a problem: What about proper nouns? The following sentence <em>is</em> sentence case.
<pre class="prettyprint">My name is Joseph.</pre>
In order to accommodate for proper nouns, we would have to have a library or database with all the proper nouns known. For simplicities sake, we'll omit that process.

Now on to the sentenceCase function itself.

thisSentenceCapped is a boolean variable set to false by default. As the name implies, this keeps track of whether the current sentence being processed has been capitalized. thisSentenceCapped is set to false by default so that if the first character of a string happens to be a letter, it will be capitalized.

When thisSentenceCapped is false and the current character being processed in the forloop is a letter, the letter is uppercased using the standard character toupper() function.

At that point, thisSentenceCapped is set to true, and the loop moves on to the next character. The loop will not uppercase any letters until thisSentenceCapped is set to false. thisSentenceCapped will not be set to false until a period, exclamation point, or question mark is found (in other words, when isSentencePunct() evaluates to TRUE).

Here is a visualization using the sentence:
<pre class="prettyprint">&quot;dude, Where’s my Car? i don’t Know man.</pre>
With proper sentence case applied, the sentence should read
<pre class="prettyprint">&quot;Dude, where's my car? I don't know man.&quot;</pre>
So here we are, starting off: thisSentenceCapped is set to false.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase1.png" alt="C++ Sentence Case Step 1" />

Now we lowercase all the letters before processing.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase2.png" alt="C++ Sentence Case Step 2" />

We begin to process the first character. Since thisSentenceCapped is false and the current character is a letter, we uppercase the  letter and set thisSentenceCapped to true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase3.png" alt="C++ Sentence Case Step 3" />

thisSentenceCapped is true, we will move through each character until we come across a sentence punctuation mark (. ? !)
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase4.png" alt="C++ Sentence Case Step 4" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase5.png" alt="C++ Sentence Case Step 5" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase6.png" alt="C++ Sentence Case Step 6" />

Although the comma is a punctuation mark, it is not a sentence punctuation of a period, question mark, or exclamation point, so isSentencePunc still evaluates to false, and thisSentenceCapped is still true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase7.png" alt="C++ Sentence Case Step 7" />

Blank spaces do not denote the end of a sentence, so thisSentenceCapped is still true
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase8.png" alt="C++ Sentence Case Step 8" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase9.png" alt="C++ Sentence Case Step 9" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase10.png" alt="C++ Sentence Case Step 10" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase11.png" alt="C++ Sentence Case Step 11" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase12.png" alt="C++ Sentence Case Step 12" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase13.png" alt="C++ Sentence Case Step 13" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase14.png" alt="C++ Sentence Case Step 14" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase15.png" alt="C++ Sentence Case Step 15" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase16.png" alt="C++ Sentence Case Step 16" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase17.png" alt="C++ Sentence Case Step 17" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase18.png" alt="C++ Sentence Case Step 18" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase19.png" alt="C++ Sentence Case Step 19" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase20.png" alt="C++ Sentence Case Step 20" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase21.png" alt="C++ Sentence Case Step 21" />
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase22.png" alt="C++ Sentence Case Step 22" />

We come across a question mark, which makes  isSentencePunc evaluate to true. This causes thisSentenceCapped to become false.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase23.png" alt="C++ Sentence Case Step 23" />

Although thisSentenceCapped is false, the function calls for the character to be alphabetical (via isalpha()), so the blankspace is not uppercased and thisSentenceCapped remains false.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase24.png" alt="C++ Sentence Case Step 24" />

Since thisSentenceCapped is false, and the current character is alphabetical, we uppercase the letter and set thisSentenceCapped to true.
<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase25.png" alt="C++ Sentence Case Step 25" />

After this point, there  will be no visible changes since this is the last sentence being processed in the string. The loop will continue to process  the string, but no changes will occur until the period, in which thisSentenceCapped is set to false and the loop terminates.

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/sentencecase/sentencecase.cpp">Download the Source Code</a>

This concludes how to manipulate a string to sentence case in C++.]]></content>
    <excerpt><![CDATA[when typing up important documents, it is important to use sentence case to invoke a sense of formality. imagine writing an email or heck, an entire blog post, not using a capital letter. it would really hurt your professional decorum.

So this post will show you how to convert a string to sentence  case using C++. Sentence case is having the first letter of the first word in a sentence capitalized.]]></excerpt>
  </item>
  <item>
    <title>Removing punctuation and spaces from a String in C++</title>
    <link>http://www.vertstudios.com/blog/removing-punctuation-spaces-string-c/</link>
    <pubdate>Sat, 20 Mar 2010 10:01:06 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=353</guid>
    <description></description>
    <content><![CDATA[There may be times in which you need to do character processing that only deals with the Alphanumeric characters of a string, not the punctuations or blank spaces.

Here is a program that will remove the punctuations and spaces from a string.

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/alphanum/alphanumonly.zip">Download the EXE and Source Code</a>

<h2>The  Code</h2>

<pre class="prettyprint">

//Joseph McCullough
//Program: alphanumonly.cpp
//Description: Takes a string and creates another string that contains only the
//letters and numbers of the first string.
//Visit www.mcculloughdesigns.com/blog for more C++ Goods!

#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;

string alphaNumOnly(string);

const string SENTINEL = &quot;0&quot;;//When entered as strToConvert,
              //terminates program.

int main()
{
  string strToConvert;  //The string that will be converted to.
  string strConverted;  //strToConverted with only letters and numbers.

  cout &lt;&lt; &quot;***************************************************&quot; &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;AlphaNumOnly.exe&quot;                     &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;Removes blank spaces and punctuations from a string&quot; &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;Provided By McCullough Designs&quot;      &lt;&lt; &quot;\n&quot;
     &lt;&lt; &quot;***************************************************&quot;;

  //Read in strToConvert
  cout &lt;&lt; &quot;\n\nEnter a String or enter 0 to exit: &quot;;
  getline(cin, strToConvert);

  while (strToConvert != SENTINEL)
  {

    strConverted = alphaNumOnly(strToConvert);
    cout &lt;&lt; &quot;\nNew String: &quot; &lt;&lt; strConverted;

    //Read in strToConvert
    cout &lt;&lt; &quot;\n\nEnter a String or enter 0 to exit: &quot;;
    getline(cin, strToConvert);

  }
  return 0;
}

/************ function alphaNumOnly *********************************\
Description: Used to isolate the alphanumeric characters of a string

Precondition: strToConvert is defined

Postcondition: Returns a string
/********************************************************************/

string alphaNumOnly(string strToConvert)
{
  string strConverted; //strToConvert with only alpha-numeric characters.

  for (unsigned int i=0; i&lt;strToConvert.length();i++)
  {
    if (isalnum(strToConvert[i])) //If current character is alpha-numeric
     strConverted += strToConvert[i]; //Add the character to strConverted

  }

  return strConverted;

}
</pre>

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/alphanum/alphanumonly.zip">Download the EXE and Source Code</a>


<h2>The Explanation</h2>

The main() component  of this function is just a sentinel controlled loop. The alphaNumOnly function is what's important.

We create a local string variable
<pre class="prettyprint">string strConverted</pre>
To store all the letters and numbers from the original string. This string is returned at the end of the function.

Let's examine the for loop
<pre class="prettyprint">
for (unsigned int i=0; i&lt;strToConvert.length();i++)
  {
    if (isalnum(strToConvert[i])) //If current character is alpha-numeric
     strConverted += strToConvert[i]; //Add the character to strConverted

  }
</pre>

We begin by setting a counter i to 0. We use unsigned int because string lengths will always be positive. We then tell the loop to keep going until we reach the end of the string being processed.

The body of the for loop is where the magic happens.

The logic  is as follows:
Instead of removing the spaces and punctuation from the string being processed, it would be much easier to create a new string that contains only the alphanumeric characters. Each time an alphanumeric character is found (<strong>if(isalnum(string)</strong> evaluates to true), it is appended to the end of strToConvert (as indicated by the += operator. A+=b is short for A= A+b)

So after you do this for the entire string, strToConvert will appear to be the original string but with only alpha numeric characters.

<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/alphanum/alphanumonly.zip">Download the EXE and Source Code</a>]]></content>
    <excerpt><![CDATA[There may be times in which you need to do character processing that only deals with the Alphanumeric characters of a string, not the punctuations or blank spaces.

Here is a program that will remove the punctuations and spaces from a string.]]></excerpt>
  </item>
  <item>
    <title>Book Review: Killerjavascript.com</title>
    <link>http://www.vertstudios.com/blog/killer-javascript-video-book-review/</link>
    <pubdate>Sat, 27 Mar 2010 21:41:36 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=438</guid>
    <description></description>
    <content><![CDATA[This is my first post of my book review corner. I'll be reviewing various web design books as I read them so you will know which books I believe are worth the money.

First up is the Beginning Javascript video tutorial from <a href="http://www.killerjavascript.com/videos/">www.killerjavascript.com</a>
<a href="http://www.killerjavascript.com/videos/"><img style="width: 500px;" src="http://www.vertstudios.com/blog/images/mc-blog/bookcorner/killerjavascript/cd.jpg" alt="Killer Javascript" /></a>
<h3>General Information</h3>
<ul>
  <li>Title: Beginners JavaScript</li>
  <li>Cost: $19.99</li>
  <li>Purpose:
<cite>Beginners Javascript is designed to teach total beginners Javascript programming. By the end of the 5 hrs of video training (over 39 individual videos) you will feel comfortable reading and writing usable Javascript code for everyday web tasks like spawning windows, validating forms and creating simple page effects.</cite></li>
  <li>Why I bought it: I figured a video tutorial would be nice and errata free since the examples have to work right on the screen.</li>
</ul>
<strong>The Review</strong>

I recall a time in my younger years when my grandma would buy me toys throughout the week. There was this awesome $20 yo-yo I coveted. I cried, pouted, and unloaded everything else in the spoiled brat arsenal to compel my grandma to buy that yo-yo. She caved, but on the condition that she would not get me another toy for a whole month. That same day, the yo-yo broke in half just from walking the dog.

This book is much more disappointing than that.
<img src="http://www.vertstudios.com/blog/images/mc-blog/bookcorner/killerjavascript/crying_kid.jpg" alt="Crying Kid" />
<h2>Why it Sucks</h2>
<h3>1) The Instructor</h3>
First, I will admit that it was my mistake for not taking the time to notice that there are <a href="http://www.killerjavascript.com/videos/">sample videos</a> available to be viewed. If I would have watched one of the sample videos and seen that the instructor was <a href="http://www.killerjavascript.com/videos/03-javascript-event-handlers-part-1/03-javascript-event-handlers-part-1.html">having issues with his Dreamweaver trial</a> right in the middle of the lesson, I would have known what to expect. (Why is he on a trial anyway?)
Some specific noteworthy annoyances:
<ol>
  <li>The instructor forgets that you can not embed a double quote within a double quote. He attempts to do
<pre><pre class="prettyprint">&lt;p onClick = "alert("You clicked me");"&gt;Don't click&lt;/p&gt;<!--formatted--></pre></pre>
When he catches his mistake, he takes forever to explain the simple fact that single quotes should be used inside double quotes and vice versa.</li>
  <li>This is their idea of email vaildation:
<pre><pre class="prettyprint">if(email_address.indexOf("@") == "-1" || name_first == ""){

  alert("Fill in the form properly dude!");
  return false;

  } &lt;!--formatted--&gt;<!--formatted--></pre></pre>
</li>
  <li>The instructor will spend 5 minutes on code that was already explained in another clip. Why not display on the screen "See video 3" instead of spending more time on something we already learned?</li>
  <li>Terrible usage of variable names. When creating a flag for whether a menu is currently toggled or not (what would be a boolean variable if JavaScript required the declaration of data types), the instructor named the variable "onOff". So if onOff==Off, the menu was set to be off, and if onOff ==On, the menu was on.onOff? That looks more like an event handler than a variable name that describes whether a menu is toggled. Why not menuActive or menuDisplayed or menuExpanded? Since this guy is teaching beginners, he's teaching people that might not have adequate programming fundamentals to see how bad his coding practices are. For those who are putting their trust in this instructor, they are not learning how to properly name their variables, which is a <strong>HUGE</strong> contributing factor to code readability.</li>
</ol>
<h3>2) The BOREDOM</h3>
This video tutorial is meant for absolute beginners: The product description says that, and that's completely fine. However, there is a difference between a beginner's paced course and the pointless ramblings of a middle aged man. Some people choose to buy video tutorials because they are <em>VISUAL</em> learners. Diagrams, charts, animations, all these things can be accomplished much better in a (well done) video tutorial than in a book. Others choose to view video tutorials because the idea of sitting back and watching a 10 minute video clip may seem less daunting than sitting down to read a chapter of a 600 page book.

A good portion of the videos contain the instructor talking for the first 4-5 minutes with only the title screen up.

<img src="http://www.vertstudios.com/blog/images/mc-blog/bookcorner/killerjavascript/frog_screen.jpg" alt="Killer JavaScript title screen" />

Seriously, if I wanted nothing but dialogue, I would read a book. In the 5 minutes it takes him to mutter a coherent thought, I could have read it in 30 seconds. These are prime examples of failing to utilize the amazing tools available in video tutorials.
<h3>3) No meaningful examples</h3>
Having your basic examples is a great way to build up understanding of how code works. However, learning that code means nothing unless you can apply it. The instructor actually does nothing to put JavaScript in the context of a real website.  Will this toggle menu break the layout? Will an image placed in by JavaScript fill its container? These are important questions that the instructor leaves up to the beginner to answer.

<img src="http://www.vertstudios.com/blog/images/mc-blog/bookcorner/killerjavascript/tutorial_shot.jpg" alt="Killer JavaScript screen shot" />

This is the most complex a layout gets. Beginning JavaScript doesn't mean you're beginning CSS or web design in general. This video tutorial series just taught a whole bunch of people how to do a whole bunch of stuff without a context to actually apply the things learned.
<h2>Final Word</h2>
As you can see, I did not find this video tutorial helpful at all. I would not not recommend it to anybody, and I'm extremely upset that I bought it in the first place. Feel free to donate $20 to get me a new <span style="text-decoration: line-through;">yo-yo</span> JavaScript book.]]></content>
    <excerpt><![CDATA[<a href="http://www.killerjavascript.com/videos/"><img style="width: 500px;" src="http://www.vertstudios.com/blog/images/mc-blog/bookcorner/killerjavascript/cd.jpg" alt="Killer Javascript" /></a>

An extensive review of www.killerjavascript.com 's video tutorial series on beginning JavaScript]]></excerpt>
  </item>
  <item>
    <title>Boolean Logic and MySQL Functions</title>
    <link>http://www.vertstudios.com/blog/boolean-logic-mysql-functions/</link>
    <pubdate>Tue, 06 Apr 2010 09:48:15 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=486</guid>
    <description></description>
    <content><![CDATA[Boolean Logic is an essential part of php when dealing with MySQL. If you do not understand boolean logic, a lot of the mysql functions may not make sense to you.

Take the commonly used <a href="http://php.net/manual/en/function.mysql-fetch-array.php">mysql_fetch_array</a> function. It is commonly used with a while loop in this manner:

<pre class="prettyprint">
while($row = mysql_fetch_array($query))
{
//Do something with the record data
}
</pre>

The condition for that while loop might not make sense if you haven't created your own boolean functions. Usually we see conditions like

<pre class="prettyprint">while($x&gt;$y)</pre>
or
<pre class="prettyprint">while($houseStatus != &quot;forclosure&quot;)</pre>

Those are pretty straight forward. So how is $row = mysql_fetch_array($query) a condition?

<h2>Boolean Logic</h2>
Boolean logic is composed of two values: TRUE and FALSE, meaning exactly what true and false mean.

Here are some examples. The following all evaluate to TRUE.
<pre class="prettyprint">
2==2
5&gt;3
&quot;hello&quot; != &quot;goodbye&quot;
</pre>

The following all evaluate to FALSE
<pre class="prettyprint">
2==15
12&lt;5
&quot;Sally&quot; == &quot;Sue&quot;
</pre>

So it's very easy to understand boolean logic in terms of relational expressions and equality statements. But outside of these types of statements exist another side of the boolean spectrum.

<h3>The Boolean Value of Literals</h3>

All literal values, being the number 10, the character 'B', and the string "bob" have a corresponding boolean value. How do you determine it? Simple.

<strong>Anything not 0 is TRUE</strong>
Naturally, 0 is considered false.

Before we put this in perspective, here is a reminder of how If statements work

<pre class="prettyprint">

&lt;?php

if(condition to be tested)
   {
      //Code to be executed if condition is TRUE
   }
else
   {
     //Code to be executed if condition is FALSE
   }
?&gt;

</pre>

So now to put the boolean  value of literals into perspective
<pre class="prettyprint">

&lt;?php
$x  = 5;

if($x)
   echo &quot;Hello!&quot;;
else
   echo &quot;Goodbye!&quot;;
?&gt;

</pre>

The code above outputs "Hello!". Since  $x is not equal to zero, its boolean value is TRUE. Since $x  is TRUE, the if($x) condition evaluates to TRUE, causing the echo "Hello!" line of code to be executed.

In a similar example:

<pre class="prettyprint">

&lt;?php
$x = 0;

if($foo = $x)
    $foo = 10;
else
    $foo = 20;

echo $foo;

?&gt;
</pre>

The code above outputs 20. Remember, since there is only one equal sign, only an assignment occurs, not an equality test. $foo is assigned the value of $x (zero), and then if($foo) is evaluated. Since $foo is 0, $foo has a boolean equivalent of FALSE. This causes the if statement condition to evaluate FALSE, and the code attached to the else statement will be executed.

<h2>Relation to MySQL</h2>

Let's take a look at the mysql_fetch_array function again, now that we know more about Boolean Logic

<pre class="prettyprint">
while($row = mysql_fetch_array($query))
{
//Do something with the record data
}
</pre>

According to the PHP  Manual, mysql_fetch_array
<cite>Returns an array of strings that corresponds to the fetched row, or FALSE if there are no more rows.</cite>

So as long as the function has a row to process, $row is assigned an array of strings. Since the value of an Array is not 0 (although the elements of the array could very well be 0, the value of the Array itself is not), the while condition evaluates TRUE. If the function has no more rows to process, $row is assigned FALSE, and the while condition evaluates FALSE, terminating the loop.

Hopefully you better understand the mysql_fetch_array function and the basics of boolean logic.]]></content>
    <excerpt><![CDATA[Boolean Logic is an essential part of php when dealing with MySQL. If you do not understand boolean logic, a lot of the mysql functions may not make sense to you.

Take the commonly used <a href="http://php.net/manual/en/function.mysql-fetch-array.php">mysql_fetch_array</a> function. It is commonly used with a while loop in this manner:

<pre class="prettyprint">
while($row = mysql_fetch_array($query))
{
//Do something with the record data
}
</pre>

The condition for that while loop might not make sense if you haven't created your own boolean functions.]]></excerpt>
  </item>
  <item>
    <title>jQuery Sprite Slideshow</title>
    <link>http://www.vertstudios.com/blog/jquery-sprite-slideshow/</link>
    <pubdate>Tue, 11 May 2010 06:05:23 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=605</guid>
    <description></description>
    <content><![CDATA[This is my first week messing around with jQuery, and I can tell it is going to be an extremely powerful tool.

A common use for JavaScript/jQuery is the creation of slideshows, so I decided to create my own to see what I've learned so far.

This slideshow is modeled off the <a href="http://www.alistapart.com/articles/sprites">CSS Sprite</a> Technique.

<iframe src ="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-sprite-slideshow/slideshow.php" width="600" height="200" scrolling="no">
  <p>Your browser does not support iframes.</p>
</iframe>

So you can better understand how the sprite technique comes into play, here is the slideshow again without overflow: hidden on the outer div.

<iframe src ="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-sprite-slideshow/slideshow1.php" width="600" height="210" scrolling="no">
  <p>Your browser does not support iframes.</p>
</iframe>

The border that you see in the transition period is the outer div that contains the slideshow, and defines the  area that the viewer actually sees. The divs are simply placed right next to each other, and then slid into the "frame" that the user sees one at a time.

<h2>EDIT:</h2>
My friend Jeremy over at Jc-Designs.net has come up with a much more elegant implementation of this sprite slideshow. Please view <a rel="nofollow" href="http://jc-designs.net/blog/2010/05/jquery-sprite-slideshow-because-i-wanted-to-see-if-i-could-do-it-with-less/">his post on the jQuery Sprite Slideshow.</a>]]></content>
    <excerpt><![CDATA[This is my first week messing around with jQuery, and I have already found it to be an extremely powerful tool.

A common use for JavaScript/jQuery is the creation of slideshows, so I decided to create my own as well.

This slideshow is modeled off the <a href="http://www.alistapart.com/articles/sprites">CSS Sprite</a> Technique.]]></excerpt>
  </item>
  <item>
    <title>What Car Dealers Can Teach us About Portfolio Pages</title>
    <link>http://www.vertstudios.com/blog/what-car-dealers-can-teach-us-about-portfolio-pages/</link>
    <pubdate>Wed, 02 Jun 2010 23:06:18 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=638</guid>
    <description></description>
    <content><![CDATA[I've noticed a trend on <strong>web design</strong> companies portfolio pages: They make it hard to view the work done for their clients live. Instead of letting the viewer actually visit the sites of the clients directly from the portfolio page, the page will just bring up an overlay to view a larger print screen. If you want to view the website in real time, you have to type the URL in your browser yourself!

The only advantages to bringing up a larger print screen via an overlay is that you get to show off that you know how to do an overlay, and you keep them on the website longer. Big deal.

The subsequent disadvantages far outweigh.

<h2>Core Disadvantage: Potential Clients Feel No Ownership</h2>
Why are car dealerships so insistent on you test driving their cars? Because they want you to <em>love</em> it.
<img style="display: block; margin: 10px 0px 10px 10px;" src="http://blog.caranddriver.com/wp-content/uploads/2009/05/how_to_test_drive_a_car_-_feature-440x268.jpg" alt="Car Salesman" />
Love is a packaged emotion that is a crucial selling point for car dealerships. With love comes anxiety, fear, and jealousy.

When you see a car you want, you might be intrigued. However, the car dealerships recognize that curiosity may not be a strong enough emotion to lead to a sale. What emotion can be used for this sale? Love. How can love be created in this environment between a human and a machine? The answer: Ownership.

Each time a prospective buyer goes for a test drive, they own that car emotionally for that short period of time. The same effect occurs when a prospective client browses through a website made by a design company. While "test driving" the website, they see <em>their</em> logo up in the corner. Those flash animations are advertising <em>their</em> products. This temporary ownership has very strong psychological effects. Showing only images of your work out of fear that prospective clients will leave your page makes it harder for them to have a test drive: It's equivalent to a car dealership saying that they don't want potential buyers to go on a test drive because they might drive by another dealership while in the car! How much sense does that make?


Dan Ariley's book entitled <a href="http://www.amazon.com/Predictably-Irrational-Revised-Expanded-Decisions/dp/0061353248">Predictably Irrational</a> describes <a href="http://www.spring.org.uk/2008/04/6-quirks-of-ownership-how-possessions.php">6 Quirks of ownership</a>, and two of these quirks demonstrate how important it is to let a potential client really get the feel of a website.

<h4>Quirk 1: Ownership increases value to us</h4>
Just the simple fact that a person owns something causes them to perceive it as more valuable. A good example is Ariely's Ticket Scalping study. Ariley got a list of people who wanted to buy the sold out tickets, and a list of people who had tickets and were willing to sell. The people who wanted to buy on average were willing to pay $139 per ticket, which seems pricey. However, the sellers on average would not be willing to sell the tickets for any less than $2000.

Ownership increases a person's perceived value of an object. Allow a prospective client to "own" a website through their emotions by letting them engage in the appearance and functionality of the sites you have already created.

<h4>Quirk 2: We Tend to Focus on Losses</h4>
The reason why car dealers give you a test drive is because they understand the anxiety you will face when the drive is over. The car drove smooth, the breaks were responsive, it looked great, so great that it actually turned a few heads.

Now you have to either lose that euphoria or pay the price of the car. Most will side with the latter, because the fear of never having that experience provided by the test drive generally outweighs the cost.

You have to let <em>your</em> prospective clients know what they're missing out on if they don't hire you as their web designer. Showing only an image hides all the functionality that contributes to a heightened user experience.


In conclusion, don't let the fear that a prospective client won't come back to the site prevent you from letting them easily access your live work. Let them go for a test drive, and you'll be pleased with the results.

My rule of thumb is: If the user can not directly visit a site in your portfolio by clicking on a link or a printscreen thumbnail, it's too complex.]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Free jQuery Cheat Sheet</title>
    <link>http://www.vertstudios.com/blog/free-jquery-cheat-sheet/</link>
    <pubdate>Mon, 24 May 2010 22:11:39 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=640</guid>
    <description></description>
    <content><![CDATA[As we learn a new programming language, our needs change over time. Since I am just learning jQuery, my current need is a reference of the basic fundamentals of jQuery. I made this cheat sheet for myself, but I hope some other people new to jQuery will find it useful also.

<a href="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-cheat-sheet/jquery-cheat-sheet1.pdf">Click to download this FREE jQuery Cheat Sheet (PDF)</a>

<a href="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-cheat-sheet/jquery-cheat-sheet1.pdf"><img src="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-cheat-sheet/jquery-cheat-sheet.jpg" alt="Click to download jQuery Cheat Sheet" title="Click to download jQuery Cheat Sheet" /></a>]]></content>
    <excerpt><![CDATA[<a href="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-cheat-sheet/jquery-cheat-sheet1.pdf">Click to download this FREE jQuery Cheat Sheet (PDF)</a>
<a href="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-cheat-sheet/jquery-cheat-sheet1.pdf"><img src="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-cheat-sheet/jquery-cheat-sheet.jpg" alt="Click to download jQuery Cheat Sheet" title="Click to download jQuery Cheat Sheet" /></a>]]></excerpt>
  </item>
  <item>
    <title>jQuery in Action Review</title>
    <link>http://www.vertstudios.com/blog/jquery-in-action-review/</link>
    <pubdate>Thu, 03 Jun 2010 01:36:02 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=678</guid>
    <description></description>
    <content><![CDATA[My review of jQuery in Action.

<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/lVv1Qszqbhk&hl=en_US&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/lVv1Qszqbhk&hl=en_US&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>

Overall I was not very pleased with the book. Very few examples, and the ones provided were mundane and irrelevant to real-world situations. Very sluggish pace and very unsatisfying.

I highly recommend <a href="http://blog.themeforest.net/screencasts/jquery-for-absolute-beginners-video-series/">jQuery for Absolute Beginners</a> as an alternative.]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Convert Miles to Kilometers with JavaScript</title>
    <link>http://www.vertstudios.com/blog/javascript-convert-miles-kilometers/</link>
    <pubdate>Sun, 07 Feb 2010 22:19:34 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=77</guid>
    <description></description>
    <content><![CDATA[At the end of the post you can view the working example. This example comes from Problem Solving, Abstraction, and Design using C++ (Third Edition)

As a reminder, here are the steps to the Software Development Method
<ol>
  <li>Specify the Problem Requirements</li>
  <li>Analyze the problem.</li>
  <li>Design the algorithm to solve the problem.</li>
  <li>Implement the algorithm.</li>
  <li>Test and verify the completed program.</li>
  <li>Maintain and Update the Program.</li>
</ol>
<h2>1. Specify the Problem Requirements</h2>
Your summer surveying job requires you to study some maps that give distances in kilometers and some that use miles. You and your co-workers prefer to deal in metric measurements. Write a program that performs the necessary conversion, rounded to 2 decimal places.
<h2>2.Analyze the Problem</h2>
Given user input of the value of miles, display the conversion of miles to kilometers.
<strong>Data Requirements</strong>
<pre class="prettyprint">
Problem Constants:
MILES_TO_KM = 1.609;   //Conversion constant for Miles to Kilometers</pre>

Problem Input
miles; //The Distance in Miles

Constraints on problem Input
miles &gt;= 0;
miles is a number

Problem Output
km; //The distance in kilometers

Relevant Formula
1 Mile = 1.609 Kilometers
<h2>3. Design the Algorithm</h2>
<ol>
  <li>Read in Distance in Miles</li>
  <li>Convert the distance in miles to distance in kilometers
<ol>The distance in kilometers is 1.609 times the distance in miles</ol>
</li>
  <li>Round the Distance in Kilometers to 2 Decimal Places</li>
  <li>Display the Distance in Kilometers</li>
</ol>
<h2>4.Implement the algorithm</h2>
Program language options:
<ol>
  <li>PHP</li>
  <li>Javascript</li>
</ol>
Program Language choice: Javascript
<strong> Justification</strong>: No critical data must be passed to the server, so using Javascript will not pose any security risks in this situation. Although PHP could report the same output correctly, it would hinder the user experience by forcing the user to wait for a page refresh every calculation.

<a href="http://www.vertstudios.com/blog/images/mc-blog/sdm/miletokmconversion/conversion.html">View the Program in action</a>
<h2>5. Test and verify the completed program</h2>
<strong>Test Data</strong>(Done by manual calculation):
20 Miles = 32.18 Kilometers
0 miles = 0 Kilometers
15 Miles = 24.14 Kilometers
37 Miles = 59.53 Kilometers
113 Miles = 181.82 Kilometers.
<h2>6. Maintain and Update the Program</h2>
At this point maintenance is currently not needed, but could be easily performed. In the event that standards change, such as the miles to km conversion rate, the program will need very little adjusting in order to function properly.

<a href="http://www.vertstudios.com/blog/images/mc-blog/sdm/miletokmconversion/conversion.html">View the Program</a>]]></content>
    <excerpt><![CDATA[Your summer surveying job requires you to study some maps that give distances in kilometers and some that use miles. You and your co-workers prefer to deal in metric measurements. <strong>Write a program that performs the necessary conversion, rounded to 2 decimal places.</strong>]]></excerpt>
  </item>
  <item>
    <title>PHP and Apache Installation Tutorial</title>
    <link>http://www.vertstudios.com/blog/php-apache-installation-tutorial/</link>
    <pubdate>Sun, 21 Feb 2010 11:11:55 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=112</guid>
    <description></description>
    <content><![CDATA[I have lost many hours of sleep because of not being able to set up PHP and Apache. I have missed homework deadlines, fallen asleep in class, accidentally eaten an onion, and much worse. Here is my attempt to help you guys sleep at night with a very quick and easy PHP and Apache installation guide. (This is for <strong>Windows ONLY</strong>. I don't know anything about linux or mac, I'm sorry. I'm using vista 32 for this tutorial)

To make sure this works, I've uninstalled my webserver, and I'll be installing it right along side you.

<h3>UPDATE:</h3>
Although this installation is for Apache 2.2.14 and PHP 5.3.1, I've personally confirmed this exact installation guide works for Apache 2.2.17 and PHP 5.3.3.

<h3>UPDATE: Windows 7 Users</h3>
I've verified that this setup works for Windows 7 Ultimate 64 Bit. 

<h3>General Rule of Thumb</h3>
If you have a choice between installing everything manually or using a packaged installer to do it all for you,
<strong>ALWAYS ALWAYS INSTALL IT MANUALLY!</strong>
So far, the packaged installers are always missing files, and the configurations are completely screwed up. Although the task of manual installation with zip files seems extremely daunting, it's actually MUCH easier to work with. And besides, you've got someone to walk you through the process :)

Also, take note of which direction the slashes are facing when I tell you what to type in. That is also extremely important.
<h3>The Order of Business</h3>
Apache
PHP

<h2>Installing Apache Webserver</h2>
In this case, we get to use an MSI installer. Setting up Apache and MySQL are the easy parts. It's setting up PHP that made me lose all that precious sleep.

<strong>Step 1)</strong>Make a folder called "webserver" on your C:&#92; drive.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step1.jpg" alt="Make a folder called webserver on your C:&#92; drive" />

<strong>Step 2)</strong>Visit <a href="http://httpd.apache.org/download.cgi">The Apache Download Page</a>. The version I will be installing in this tutorial is 2.2.14. Scroll down until you see
"Win32 Binary including OpenSSL 0.9.8k (MSI Installer)" and then click the download link right beside it.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step2.jpg" alt="Visit apache.org and download the MSI installer and run it" />

<strong>Step 3)</strong>After the installation file has finished downloading, run it. Accept all the terms and whatnot, but stop when you get to the server information.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step3.jpg" alt="Accept all terms and conditions" />

<strong>Step 4)</strong>For both the Network Domain and Server Name, type in localhost. For the email just put your email. I also have "for all users , on Port 80, as a service" selected. Click next.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step4.jpg" alt="Type in localhost in network domain and server name" />

<strong>Step 5)</strong>Select Custom Install and click next.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step5.jpg" alt="Select custom install" />

<strong>Step 6)</strong>You'll notice a red X by "Build Headers and Libraries". Click the dropdown menu by the X and select "This feature will be installed on local hard drive"
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step6.jpg" alt="Enable build headers and libraries" />

<strong>Step 7)</strong>Click on Apache HTTP Server 2.2.14 on top and make sure it's highlighted. This is to make sure when we specify our installation location in the next step, we aren't just specifying a component of the webserver; we want to move the WHOLE thing.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step7.jpg" alt="Select Apache HTTP Server 2.2.14" />

<strong>Step 8 )</strong>Click on change to bring up the window to change the installation path.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step8.jpg" alt="Click on change to bring up installation path window" />

<strong>Step 9)</strong>In the folder name text box, type in C:&#92;webserver, and click Ok. Then click next and begin the installation.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step9.jpg" alt="Change the installation path to C:&#92;webserver and install" />

<strong>Step 10)</strong>After the installation has completed, go into a browser and type in localhost as the URL. If it the installation worked...well, Apache will tell you. :)
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/step10.jpg" alt="Type localhost into your browser and see if it worked" />

That wasn't so bad! Now on to the sleep depriving monster
<h2>PHP</h2>
These steps will help you install PHP onto your webserver. We will be using manual installation for this.

<strong>Step 1)</strong>Visit <a href="http://windows.php.net/download/">The PHP Downloads Page</a>. The version of PHP I'll be installing is PHP 5.3 (5.3.1). Download the <strong>THREAD SAFE</strong> zip file.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step1.jpg" alt="Download thread safe php zip file" />

<strong>Step 2)</strong>After the download has finished, extract the files to C:&#92;webserver&#92;php

<strong>Step 3)</strong>Locate the PHP folder and open it. Look for a file called php.ini-development. Once you have found it, rename it to php.ini Windows will tell you that changing the file extension may cause it to become unusable. Change it anyway.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step3.jpg" alt="Rename php.ini-development to php.ini" />

<strong>Step 4)</strong>Open up php.ini in notepad.

<strong>Step 5)</strong>Do a search (CTRL+F) for the phrase "doc_root" (omit quotations). After the = sign, type in "C:&#92;webserver&#92;htdocs" (INCLUDE quotes). Your text file should look like this.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step5.jpg" alt="Add in the htdocs path for the doc_root" />

<strong>Step 6)</strong>Scroll down until you see
; Directory in which the loadable extensions (modules) reside.
; http://php.net/extension-dir
; extension_dir = "./"
; On windows:
; extension_dir = "ext"

Not too far below where we just were. Delete the semicolon in front of the line
; extension_dir = "ext"

Then replace "ext" with "C:&#92;webserver&#92;php&#92;ext"

Your file should resemble this.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step6.jpg" alt="php.ini file adjusted for extension directory and doc_root" />

<strong>Step 7)</strong>Save and Close the php.ini file. Now go back to the C:&#92;webserver directory. Open up the "conf" file.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step7.jpg" alt="Open apache conf file from C:&#92;webserver directory" />

<strong>Step 8)</strong>Open the httpd.conf file with notepad. Copy and paste the following to the top of the file

<pre class="prettyprint">
LoadModule php5_module &quot;C:/webserver/php/php5apache2_2.dll&quot;
AddType application/x-httpd-php .php
PHPIniDir &quot;C:/webserver/php&quot;</pre>
This tells the webserver what files to load for php and where to locate the php configuration file.
Make sure a # does not appear until after the block of text you have pasted.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step8.jpg" alt="httpd.conf configuration" />

We're almost there!

Now we just have a lot of copying and pasting to do. <b>In the event you're unable to find one of the files this tutorial references</b>, make sure to go back and verify you downloaded the right file. If you don't download the thread-safe version of PHP, for example, many of the dll files this guide references will be missing. 

<h3>Update:</h3>
I've confirmed that the installation works without all this copying and pasting. You can skip to step 12 for now. If your installation fails to work, you can try these steps. 

<strong>Step 9)</strong>Open the C:&#92;webserver&#92;php directory. Look for the file called php5apache2_2.dll. Copy and paste it into C:&#92;windows&#92;system32

<strong>Step 10)</strong>Copy php.ini from C:&#92;webserver&#92;php into C:&#92;windows and C:&#92;windows&#92;system32

<strong>Step 11)</strong>Copy all the contents of C:&#92;webserver&#92;php&#92;ext into C:&#92;windows&#92;system32

<strong>Step 12)</strong>This step will be composed of many steps.
A) Open My Computer and click System Properties at the top. (If you do not see that option, you can also right click on My Computer and click Properties)

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step12a.jpg" alt="Open system properties" />

B) Click Advanced System Settings

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step12b.jpg" alt="Advanced System Settings" />

C) Click Environment Variables
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step12c.jpg" alt="Environment Variables" />

D) Under System Variables (The lower half of the screen), scroll down until you see the variable named Path. Click it and press Edit.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step12d.jpg" alt="Find path under system variables" />

E) After the last semicolon in the variable value box, copy and paste C:&#92;webserver&#92;php; (Include the ending semicolon)

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/step12e.jpg" alt="Adjust path" />

<strong>You're done!</strong> Now it's time for testing.
<h3>Testing PHP and Apache</h3>
Be sure to restart your apache server. You can do this by right clicking on the apache icon in the system tray and clicking Open Apache Monitor (Or you can access the apache monitor from your Programs into the start menu). Select apache 2.2 and click restart. If you do not restart your webserver, PHP will not work until you restart your computer.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/apache/restartapache.jpg" alt="Restart Apache" />

Open up notepad, and paste this in:
<pre class="prettyprint">&lt;?php phpinfo(); ?&gt;</pre>

Save the file as phpinfo.php in the C:&#92;webserver&#92;htdocs directory.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/phpinfotxt.jpg" alt="phpinfo" />

Now open up your browser and type in localhost/phpinfo.php into the URL bar. Do NOT Type in C:&#92;webserver&#92;htdocs&#92;phpinfo.php  They are NOT treated the same way even if the path leads to the same file.

If you've followed everything correctly, you should see a screen full of your php information. This indicates that you can now perform server-side operations such as the execution of php scripts.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/php/phpinfopic.jpg" alt="Display of phpinfo" />

 Please let me know if there are any errors with this tutorial, or if you have any questions. I want to make sure this is just about perfect so that people don't have to spend days and days trying to configure their first webserver. This whole process turned me off to learning php for a few months because I had already spent so much time failing to set up apache.

I will cover how to install and configure mysql, pear, and phpMyAdmin in an upcoming post.]]></content>
    <excerpt><![CDATA[I have lost many hours of sleep because of not being able to set up PHP and Apache. I have missed homework deadlines, fallen asleep in class, accidentally eaten an onion, and much worse. Here is my attempt to help you guys sleep at night with a very quick and easy PHP and Apache installation guide.]]></excerpt>
  </item>
  <item>
    <title>Make a string lowercase/uppercase in C++</title>
    <link>http://www.vertstudios.com/blog/string-lowercase-uppercase-c/</link>
    <pubdate>Sun, 28 Feb 2010 16:22:13 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=133</guid>
    <description></description>
    <content><![CDATA[C++ Does not have string case manipulation built in to its <a href="http://www.cplusplus.com/reference/string/string/"> standard library</a>. For this  reason, it's necessary to make your own upperCase and lowerCase functions. I'll show you how to do just that.
<h2>The Function Code</h2>
For all lowercase:
<pre class="prettyprint">
void lowerCase(string&amp; strToConvert)
{
   for(unsigned int i=0;i&lt;strToConvert.length();i++)
   {
      strToConvert[i] = tolower(strToConvert[i]);
   }
}
</pre>
For all UPPERCASE:
<pre class="prettyprint">
void upperCase(string&amp; strToConvert)
{
   for(unsigned int i=0;i&lt;strToConvert.length();i++)
   {
      strToConvert[i] = toupper(strToConvert[i]);
   }
}
</pre>
<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/tolower/lowercase.zip">Download the .exe and Source File</a>
<h2>The Explanation</h2>
A string is technically an <a href="http://www.cplusplus.com/doc/tutorial/arrays/">array</a> of characters. Although C++ can not uppercase or lowercase a string, it can uppercase or lowercase an individual character, using the toupper() and tolower() standard functions respectively. This means we need to be able to isolate the characters of a string so we can apply the toupper() or tolower() function. The way we do this is by referring to the string as an array.

<img src="http://www.vertstudios.com/blog/images/mc-blog/cpp/tolower/basketball.jpg" alt="A string is an array of characters." />

In our example of
<pre class="prettyprint">string sport = "Basketball";</pre>
If we were to output sport[0], we would output the character 'B'.
<em>Recall that arrays begin indexing at 0, not 1. Array indexes are contained within square brackets</em> [ ].

If we were to output sport[3], we would output the character 'k'.

Now that we know how to isolate a character,  we can apply the toupper or tolower function. As you could guess, tolower makes a character lowercase. toupper makes a character uppercase.

If we were to output tolower(sport[0]), we would get a lowercase 'b'.
If we were to output toupper(sport[5]), we would get an uppercase 'T'.

So we want to process the entire string. Since array indexes go by an increment of one, we have a perfect condition to use a for loop.

Here's our logic for this function:
<ol>
  <li>Start at the first character of the string</li>
  <li>Turn that character lowercase</li>
  <li>Move on to the next character in the string</li>
  <li>Repeat until all characters have been turned lowercase</li>
</ol>
This tells us
<ol>
  <li>The for loop counter should start at 0</li>
  <li>We should tolower the index of the string that corresponds to the counter</li>
  <li>The counter should be incremented by 1 after execution of the loop body</li>
  <li>The loop should continue until the counter reaches the length of the string</li>
</ol>
The length of the string can be found with string.length()

So the for loop turns out
<pre class="prettyprint">
   for(unsigned int i=0;i&lt;strToConvert.length();i++)
      {
         strToConvert[i] = tolower(strToConvert[i]);
      }
</pre>
<a href="http://www.vertstudios.com/blog/images/mc-blog/cpp/tolower/lowercase.zip">Download the .exe and Source File</a>]]></content>
    <excerpt><![CDATA[C++ Does not have string case manipulation built in to its <a href="http://www.cplusplus.com/reference/string/string/"> standard library</a>. For this  reason, it's necessary to make your own upperCase and lowerCase functions. I'll show you how to do just that.]]></excerpt>
  </item>
  <item>
    <title>PEAR Installation Tutorial</title>
    <link>http://www.vertstudios.com/blog/pear-installation-tutorial/</link>
    <pubdate>Sun, 28 Feb 2010 16:42:46 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=126</guid>
    <description></description>
    <content><![CDATA[Installing PHP PEAR packages is pretty simple, but you need to make sure you have <a href="http://www.mcculloughdesigns.com/blog/php-apache-installation-tutorial/112/">PHP and Apache correctly installed</a> before you get started.
<h2>Installing PEAR</h2>
If you've correctly set your path in the windows system properties as described in my <a href="http://www.mcculloughdesigns.com/blog/php-apache-installation-tutorial/112/">PHP installation tutorial</a>, then installing PEAR will be extremely simple.

Step 1)Open up the run window by holding the windows key and pressing R. Type in "cmd" and press enter to bring up the command prompt.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/step1a.jpg" alt="Bring up the run window" />

Alternatively, you can open the command prompt in the accessories folder of the start menu.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/step1b.jpg" alt="Bring up the command prompt" />

Step 2)Once the command prompt is open, change the current directory to the php directory. If you followed my <a href="http://www.mcculloughdesigns.com/blog/php-apache-installation-tutorial/112/">php installation tutorial</a>, your php folder is located at C:\webserver\php. So to change to the directory in the command prompt, you would type:
<pre class="prettyprint">cd C:\webserver\php</pre>
(cd stands for Change Directory in the command prompt. )
Once you press enter, you should see that the directory has changed in my case from C:&#92;Users&#92;Joseph to C:&#92;webserver&#92;php.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/step2.jpg" alt="Change the directory" />

Step 3)Now that you are in the php directory, type in
<pre class="prettyprint">go-pear.bat</pre>
This loads the pear installation batch file that came with PHP. You will be prompted with the question:
"Are you installing a system-wide PEAR or a local copy?" You can type in either system or local as your response. I chose system. Press Enter.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/step3.jpg" alt="Enter go-pear.bat" />

Step 4)A wall of text will hit your screen. PEAR is basically allowing you to change installation directories if you wish. If you want to keep everything in the default installation directories (which I recommend), then press Enter. PEAR will begin to install, and you will see a lot of text, until you come across this message:

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/pearwarning.jpg" alt="Pear Warning" />

Type in Y and press enter. When prompted, press enter again. You will see
<pre class="prettyprint">The 'pear' command is now at your service at c:&amp;#92;webserver&amp;#92;php&amp;#92;pear.bat</pre>

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/pearready.jpg" alt="Pear is now ready" />

Step 5)You are also told a registry file named PEAR_ENV.reg has been created in the php directory.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/pearregistry.jpg" alt="Pear Registry Configuration" />

Open up your php directory (C:&#92;webserver&#92;php) and look for the PEAR_ENV.reg file. When you locate it, double click it and grant it permission.

Step 6)Installing PEAR Packages:
Now that you have PEAR installed, you can start installing some packages. A list of the most useful and most downloaded PEAR Packages can be found at the <a href="http://pear.php.net/package-stats.php">PEAR Projects official website</a>. For this example, let's install HTML_Template_IT, which is a way to use integrated templates with PHP.

Step 7)If you have closed the command prompt, open it up again and make sure you are in the C:&#92;webserver&#92;php directory. (Refer to step 2 if you can't remember how to switch directories)

Step 8)Now simply type in
<pre class="prettyprint">pear install HTML_Template_IT</pre> into the command prompt, press enter, and it will install!

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/installhtml.jpg" alt="Installing with Pear" />

Step 9)If you want to uninstall a PEAR Package, you follow the same procedure but type "uninstall" instead of install. So to uninstall HTML_Template_IT, you would go to the command prompt and type
<pre class="prettyprint">pear uninstall HTML_Template_IT</pre>

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/pear/uninstallhtml.jpg" alt="Uninstalling with Pear" />

That concludes the installation of Pear.

<h2>Warning: require_once(Structures/Graph/Node.php)</h2>

If you've come across this error while installing PEAR, Max has left us <a href="http://www.vertstudios.com/blog/pear-installation-tutorial/comment-page-1/#comment-2229">a potential solution</a> in the comments. Let us know if it works!]]></content>
    <excerpt><![CDATA[Step by step tutorial for installing PEAR on a windows system with PLENTY of screen shots to help.]]></excerpt>
  </item>
  <item>
    <title>MySQL Error 0 Cannot Create Windows Service</title>
    <link>http://www.vertstudios.com/blog/mysql-error0-cannot-create-windows-service/</link>
    <pubdate>Tue, 02 Mar 2010 00:48:51 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=174</guid>
    <description></description>
    <content><![CDATA[If you are visiting this page, most likely you have seen this on your screen after trying to reinstall MySQL 5.X

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/mysql-error-0.jpg" alt="MySQL Error 0" />

This is the MySQL Error 0, which usually follows a windows notification that mysqld.exe has stopped working. After reading many forum posts, it appears that there is no definite answer as to how to solve the problem. However, I finally came across a method that worked for me, and hopefully it will work for you. The OS in this scenario is Vista 32-bit.
<h2>The Problem</h2>
The problem is MySQL did not properly uninstall. Remnants of MySQL still exist on your computer, and the configuration wizard can not create a new MySQL service because of this. An indication of this is the fact that while you were trying to reinstall MySQL, you may have been prompted to enter your "old password." A brand new configuration doesn't ask for this.
<h2>The Solution</h2>
<strong>Step 1)</strong>If MySQL is still Installed, run the MySQL Server Instance Config Wizard. (Should be found in your start menu under MySQL)

<strong>Step 2)</strong>Select "Remove Instance".
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/step2.jpg" alt="Select Remove Instance" />

<strong>Step 3)</strong>Click Execute, and once complete, click finish.

<strong>Step 4)</strong><a href="http://www.c3scripts.com/tutorials/msdos/open-window.html">Open the  Command Prompt</a>

<strong>Step 5)</strong>Type in
<pre class="prettyprint">sc delete mysql</pre>
into the command prompt. If it fails, that's fine.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/mysql-command-prompt-delete.jpg" alt="Delete MySQL Service via Command Prompt" />

<strong>Step 6)</strong><a href="http://kb.iu.edu/data/aixt.html">Uninstall MySQL Server 5.X</a> via the control panel.

<strong>Step 7)</strong>Open the C:&#92; directory.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/c-directory.jpg" alt="Open the C:&#92; Directory" />

<strong>Step 8)</strong>Make hidden folders visible. You can do this by pressing alt to bring up the menu, then go to Tools -> Folder Options. Click the View Tab, and look for "Hidden files and folders." Then click "Show Hidden Files and Folders". (If you need more guidance on making hidden files visible, you can visit the <a href="http://windows.microsoft.com/en-US/windows-vista/Show-hidden-files">Microsoft tutorial</a>.)
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/show-hidden-files.jpg" alt="Show Hidden Files" />

<strong>Step 9)</strong>In you C:&#92; drive, you will now see a folder named ProgramData that was not visible before. Open it.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/program-data-file.jpg" alt="ProgramData file now visible" />

<strong>Step 10)</strong>If you see the MySQL Folder, Delete it!
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/delete-mysql-folder.jpg" alt="Delete the MySQL Folder" />

<strong>Step 11)</strong>Check the C:&#92;Program Files directory. If you see a MySQL Folder, Delete it!

At this point, I was able to run the MSI Installer again and <a href="http://www.mcculloughdesigns.com/blog/mysql-installation-tutorial/148/">install MySQL</a> normally.]]></content>
    <excerpt><![CDATA[This is the MySQL Error 0, which usually follows a windows notification that mysqld.exe has stopped working. After reading many forum posts, it appears that there is no definite answer as to how to solve the problem. However, I finally came across a method that worked for me, and hopefully it will work for you.]]></excerpt>
  </item>
  <item>
    <title>MySQL 5.1 Installation Tutorial</title>
    <link>http://www.vertstudios.com/blog/mysql-installation-tutorial/</link>
    <pubdate>Tue, 02 Mar 2010 02:12:51 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=148</guid>
    <description></description>
    <content><![CDATA[This post will guide you through installing MySQL 5.1.
<h2>Installing MySQL</h2>
<strong>Step 1)</strong> Visit the <a href="http://www.mysql.com/downloads/mysql/">MySQL Download Page</a>. Choose the MSI Installer that corresponds to your OS type. I'm on this crappy Dell Inspiron laptop running vista, so I'll snag the x86, 32-bit MSI  installer.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step1.jpg" alt="Download MySQL" />

<strong>Step 2)</strong>You will be prompted to log in or register, but you can actually just scroll down and click "No thanks, just take me to the downloads!" below the login form.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step2.jpg" alt="Skip MySQL Registration" />

<strong>Step 3)</strong>Choose a mirror close to you and download via HTTP.

<strong>Step 4)</strong>When the download has completed, run the file.  When the window opens, press next, and then choose  "Custom" install.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step4.jpg" alt="Custom Installation" />

<strong>Step 5)</strong>I highly recommend including the "C Include Files" in your installation in case you ever want to do some work with c++.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step5.jpg" alt="MySQL C++ Include Files" />

<strong>Step 6)</strong>For MySQL, it doesn't matter if you install it to your webserver directory or to the default program files.  I chose to install it to the program files. Click next and then install.

<strong>Step 7)</strong>When the installation has completed and the pretty dolphin shows up,  press next until it tells you the wizard is complete.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step7.jpg" alt="Installation Complete" />

<strong>Step 8)</strong>Make sure that "Configure this MySQL Server Now" is complete is checked. I chose not to Register the server, so you can skip that for now. Once you've made sure "Configure this MySQL Server Now" is checked, click Finish.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step8.jpg" alt="Configure the Sever Now" />

<strong>Step 9)</strong>When the new window pops up, click Next and then select Detailed Configuration.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step9.jpg" alt="Select Detailed MySQL Configuration" />

<strong>Step 10)</strong>You will then be asked whether your machine is a Developer Machine, Server Machine, and Dedicated MySQL Server Machine. If you are wanting to make web applications or communicate with databases from your computer, you should select Developer Machine. If you are unsure, you should select Developer Machine. Click Next.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step10.jpg" alt="Select Machine Type" />

<strong>Step 11)</strong>You will be given a list of database types to choose from. Most likely you should choose Multifunctional Database, unless you know for sure you should select one of the other options. Click Next when you've made your selection.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step11.jpg" alt="Database Type" />

<strong>Step 12)</strong>You will be asked where you would like the InnoDB datafile to be installed. There's no real need to change it from the default, so just click next. The path should read "Installation Path". Feel free to change it if you really want to though.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step12.jpg" alt="InnoDB Datafile" />

<strong>Step 13)</strong>You will be asked how many concurrent connections to the server should be allowed. Unless you know you'll need more than 20, just  stick with Decision Support(DSS)/OLAP. Click Next.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step13.jpg" alt="Concurrent Connections" />

<strong>Step 14)</strong>Make sure "<a href="http://www.webopedia.com/TERM/T/TCP_IP.html">Enable TCP/IP Networking</a>" is checked along with "Enable Strict Mode". Adjust the port if you know you need to, otherwise keep it at the provided value. Make sure to add a firewall exception for the port. Click Next.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step14.jpg" alt="MySQL Configuration" />

<strong>Step 15)</strong>Choose your character set. If you're planning on dealing with foreign languages, select "Best Support for Multilingualism", which will utilize the <a href="http://en.wikipedia.org/wiki/UTF-8">UTF-8</a> character set. I chose the Standard Character set. Click Next.
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step15.jpg" alt="Choose Character Set" />

<strong>Step 16)</strong>Choose to install MySQL as a service. You can change the service name if you want, but I just left it at MySQL. I also have it set to launch automatically. You don't have to do this, but be aware you will have to launch MySQL every time you want to connect to your database.  Also, make sure you check "Include Bin Directory in  windows PATH"
<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/step16.jpg" alt="MySQL as a Service configured for PATH" />

<strong>Step 17)</strong>Now it's time to add in the security information. Enter your desired password into New root password and confirm it. Do not create an anonymous account. Based on your situation, you can choose to enable remote access, but I chose not to. Press Next.

<strong>Step 18)</strong>Click Execute.
<h2>IF YOU ARE REINSTALLING MYSQL!!!</h2>
If you have had MySQL on your system before and have uninstalled it for whatever reason, remnants of MySQL (such as the service itself) may disrupt your reinstallation. You may receive the message
"Cannot create Windows Service for MySQL.Error:0".

<a href="http://www.mcculloughdesigns.com/blog/mysql-error0-windows-service-failed-start/174">
<img title="MySQL Error 0: Click to view Solution" src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/error0/mysql-error-0.jpg" alt="MySQL Error:0" /></a>

If you see this message, click cancel, and then head over to <a href="http://www.mcculloughdesigns.com/blog/mysql-error0-windows-service-failed-start/174">How to solve MySQL Error: 0</a>. Afterwards, you will have to repeat the installation process up to this point. Sorry!
<h2>Testing your MySQL Configuration</h2>
After the service has been successfully started and the security settings successfully applied, here is what you can do to test your configuration.
<ol>
  <li>Open the Start Menu</li>
  <li>Go to All Programs</li>
  <li>Go to MySQL</li>
  <li>MySQL Server 5.X</li>
  <li>Open MySQL Command Line Client</li>
</ol>
When the prompt "enter password" comes up,enter the password you created during the installation configuration. If successful, you should see a screen resembling this.

<img src="http://www.vertstudios.com/blog/images/mc-blog/webserver/mysql/mysql-configuration-test.jpg" alt="MySQL Configuration Test" />

MySQL is now configured and ready for you to use!]]></content>
    <excerpt><![CDATA[A step by step tutorial for installing MySQL and phpMyAdmin on a windows system with PLENTY of screen shots to help guide you.]]></excerpt>
  </item>
  <item>
    <title>The 5 Principles of Web Marketing</title>
    <link>http://www.vertstudios.com/blog/5-principles-of-web-marketing/</link>
    <pubdate>Mon, 02 Aug 2010 05:39:53 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=82</guid>
    <description></description>
    <content><![CDATA[SEO. Pay-Per-Click. Social Media Marketing. We've all heard those terms at one point or another, and nearly every branded corporation in the US is pursuing at least one of those as a web marketing strategy. Why? Some companies pursue web marketing because they see great value in incorporating it into their business model. The remaining companies adopt web marketing strategies because they see their competitors engaging in it and follow suit out of fear. 

<img src="http://vertstudios.com/blog/images/follow-the-leader.jpg" alt="Follow the leader" />

<h2>Fear not!</h2>

Although web marketing can seem mystical on the surface, it can be broken down into <strong>5 Core Principles</strong> as described in <a href="http://www.amazon.com/gp/product/0132390027/ref=oss_product">Principles of Marketing</a>. Understanding the foundations of web marketing is essential if you wish to receive a significant return on your investment. The 5 principles of web marketing are:
<ol>
<li>Customer Needs, Wants, and Demands</li>
<li>Market Offerings</li>
<li>Customer Value and Satisfaction</li>
<li>Exchanges and Relationships</li>
<li>Markets</li>
</ol>

Let's discuss each principle in detail.

<h2>1) Customer Needs, Wants, and Demands</h2>
Web marketing could not exist without the concept of human need. Need is not something the marketing industry has coined: It's part of our DNA.
<a href="http://en.wikipedia.org/wiki/Maslow's_hierarchy_of_needs" title="Wikipedia: Maslow's Hierarchy of Needs"><img src="http://vertstudios.com/blog/images/maslows-hierarchy-of-needs.jpg" alt="Maslow's Hierarchy of Needs" /></a>
As described in <a href="http://en.wikipedia.org/wiki/Maslow's_hierarchy_of_needs">Maslow's Hierarchy of Needs</a>, human needs extend all the way from physical necessities to self esteem. 

However, <em>you should not market towards needs</em>. Why? According to <a href="http://www.businessknowhow.com/marketing/wants.htm">Business Know How</a>, while a purchase can fill a need, need does not extend far enough to influence a consumer's brand choice. A consumer may need food, but may <em>want</em> a Chick-Fil-A sandwich. When a consumer's want is coupled with purchasing power, that want becomes <b>demand</b>. You must decide which specific consumer wants you will fulfill. This process is also known as choosing your target audience. If you have no target audience and attempt to fulfill everyone's wants, you will overstretch your brand identity and provide an inferior product/service.

<h2>2) Market Offerings</h2>
Market offerings are a combination of 
<ul>
<li>products</li>
<li>services</li>
<li>experiences</li>
<li>information</li>

</ul>

<h3>Products and Services</h3>
Having a great product or service is the foundation of making a legitimate market offering. If a product or service does not satisfy customer wants, the market will reject it no matter how experienced your marketing team is.

<h3>Experiences</h3>
However, a great product or service alone will not convert into a sale. You must differentiate your product or service at the customer experience and information level. As a company, you must explicitly define your customer experience via the <a href="http://www.vertstudios.com/blog/how-to-write-an-effective-company-value-proposition/">company value proposition</a>. Ford can make cars. Lamborghini can make cars. The cars do the same thing: serve as a means of transportation. Is the customer experience the same? Not at all. 
<img src="http://www.car-catalog.com/sports_cars/lamborghini_murcielago.jpg" alt="Lamborghini" title="Lamborghini" />
(A Lamborghini. Image credit <a href="http://www.car-catalog.com/">Car-Catalog.com</a>)

<h3>Information</h3>
By granting your customers useful, easy to digest information, you build trust with them. <b>If the customer does not trust your product/service, they will not buy it</b>. Plain and simple.
Online merchants such as <a href="http://www.amazon.com">Amazon</a> and <a href="http://www.newegg.com/">Newegg</a> gain an advantage over local retailers by letting customers read and write objective reviews. These customer reviews become extremely valuable for purchases over a few hundred dollars. Consequently, customers feel much more secure knowing people in similar situations were satisfied with the same product they plan on investing in. 

<h2>3) Customer Value and Satisfaction</h2>
<img src="http://vertstudios.com/blog/images/del-monte-logo.jpg" alt="Del Monte Logo" style="float: left; margin: 28px 10px 0px 0px;"/>
When deciding between brands for the same product or service, customers will analyze the market offerings available and make expectations of value. Customers will then choose the brand that provides a value most inline with their wants. <a href="http://www.hy-top.com/">Hy-Top Foods</a> adds value to customers by providing canned and packaged foods for extremely low prices. <a href="http://www.delmonte.com/">Del Monte</a> adds value to customers by providing canned and packaged foods of a much higher quality. These companies satisfy their customers by providing accurate expectations.

Hy-Top does not market or price itself as a gourmet food line. Its canned food products are sufficient for feeding a family on a budget. If Hy-Top changed its brand image to elite and gourmet while keeping the same products on the line, new customers would be dissatisfied. Their expectations for gourmet and high quality would not be met. Similarly, if Del Monte changed their brand image to cheap and affordable while not changing their prices, new customers would also be dissatisfied. Their expectations for a budget-friendly meal would not be met due to the hefty price tag. 

<h2>4) Exchanges and Relationships</h2>
Exchange occurs when you receive something and offer something else in return. Achieving an exchange is a major goal of marketing. The most common exchange is a monetary exchange. You offer a product or service in exchange for someone's money. However, marketing has many other exchange mediums as well. Politicians want votes, Soup kitchens want volunteers, Churches want memberships, and Activists want their ideas accepted. For any given product or idea, you must decide which medium of exchange will provide mutual benefit for your company and your customer. 

<img src="http://fastfood.ocregister.com/files/2008/05/mcdonalds-logo.jpg" alt="McDonald's Logo" style="float: right; margin: 28px 0px 0px 20px;"/>
Another major goal of marketing is to retain established exchange relationships. Not only does a politician want more people to vote for him, he wants to retain the loyalty of current voters. As a real life example, McDonald's is trying desperately to retain customers after <a href="http://fastfoodreviewed.com/burger-wars-burger-kings-1-double-cheese-burger-vs-mcdonalds-mcdouble-throw-down/">the release of Burger King's $1 double cheeseburger</a>. Burger King gave value to its customers by providing a unique smokey flame-broiled taste. McDonald's gave value to its customers with the Dollar Menu. Now that Burger King has incorporated one of the McDonald's strongest marketing platforms, McDonald's is having to differentiate themselves once again. 

(Image courtesy <a href="http://www.ocregister.com/">Ocregister.com</a>)

<h2>5) Markets</h2>
A market is a set of actual and potential buyers of a product. The ultimate goal of marketing is to <b>establish profitable relationships with the buyers in these markets</b>. Activities involved in establishing profitable relationships include
<ul>
<li>Product Research and Development</li>
<li>Communication</li>
<li>Pricing</li>
</ul>

<h3>Product Research and Development</h3>
Selling a great product can make your brand. Selling a poor product can break your brand. If any company knows this, it's Microsoft. Microsoft <a href="http://www.trainsignaltraining.com/top-10-reasons-people-hate-windows-vista/2009-01-06/">came under fire</a> for Windows Vista. Very few people were satisfied with the Operating System. Microsoft accepted their product was unsatisfactory by <a href="http://www.microsoft.com/investor/EarningsAndFinancials/Earnings/FinancialStatements/FY10/Q4/IncomeStatements.aspx">allocating $8.7 billion dollars</a> to Research and Development over the past year. Windows 7 is out, and there are far fewer complaints, thanks to the extensive research conducted. 

<h3>Communication</h3>
Communication is essential to understanding your customer's wants. Vindicia.com's article <a href="http://www.vindicia.com/resources/best_practices/customer_communications.html">Best Practices for Customer Communications</a> states
<blockquote>"An effective communication strategy must address all stages of the customer lifecycle, from acquisition to retention to end of life to marketing to past customers (re-marketing), and define the types of communication that are relevant at each level." </blockquote>

<h3>Pricing</h3>
It is extremely important to know how to price yourself in the market. However, you should <b>never, ever attempt to compete on price alone.</b> If you remember anything from this article, remember this quote from <a href="http://www.amazon.com/gp/product/159555131X/ref=oss_product">John Jantsch</a>
<blockquote>
"Price [...] is a terrible place to compete. There will always be someone willing to go out of business faster than you."
</blockquote>

Determining your price is one major challenge. The other major challenge is having the discipline to not drop your price once it's set: Even if that means having to reject a client or market segment. 

You are now equipped with knowledge of marketing basics. I encourage you to dive deeper into the world of marketing by reading the articles linked throughout this post. 
<!-- Start of StatCounter Code -->
<script type="text/javascript">
var sc_project=6420153; 
var sc_invisible=1; 
var sc_security="77636bb2"; 
</script>

<script type="text/javascript"
src="http://www.statcounter.com/counter/counter_xhtml.js"></script><noscript><div
class="statcounter"><a title="tumblr hit tracking tool"
class="statcounter"
href="http://statcounter.com/tumblr/"><img
class="statcounter"
src="http://c.statcounter.com/6420153/0/77636bb2/1/"
alt="tumblr hit tracking tool" /></a></div></noscript>
<!-- End of StatCounter Code -->]]></content>
    <excerpt><![CDATA[SEO. Pay-Per-Click. Social Media Marketing. We've all heard those terms at one point or another, and nearly every branded corporation in the US is pursuing at least one of those as a web marketing strategy. Why? Some companies pursue web marketing because they see great value in incorporating it into their business model. The remaining companies adopt web marketing strategies because they see their competitors engaging in it and follow suit out of fear. 

<img src="http://vertstudios.com/blog/images/follow-the-leader.jpg" alt="Follow the leader" />

<h2>Fear not!</h2>]]></excerpt>
  </item>
  <item>
    <title>Introduction to Pointers in C++ Tutorial</title>
    <link>http://www.vertstudios.com/blog/introduction-pointers-c-tutorial/</link>
    <pubdate>Sat, 05 Jun 2010 22:42:17 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=563</guid>
    <description></description>
    <content><![CDATA[Between the commonly used programming languages, C++ is relatively strict on how it handles dynamic memory allocation. The trade off is that you, the programmer, have much more control over how memory is allocated. The downside is you have to follow some seemingly complex logic in order to make dynamic allocation occur correctly. While in PHP, dynamic allocation takes no thought: It just happens.

<h2>Pointers and the "new" Operator</h2>
Take a look at this declaration.
<pre class="prettyprint">float *q;</pre>

This identifies q as a <em>pointer variable</em> to a float. This means that we can store a memory address into q. A memory address is usually represented in hexadecimal form and looks something like
<pre class="prettyprint">0x002132</pre>

Rarely do you need to know the hexadecimal value of a memory address, but it is important to know that q will be holding this type of value and NOT a floating point value.

Now look at the following
<pre class="prettyprint"> q = new float; </pre>

The new operator takes memory from the heap and makes it available for the program to use. Thus, q will have the value of a memory address. Once again, q does NOT hold a floating point value, it holds the value of a memory address.

Also, an important distinction must be made. Declaring a pointer allocates memory at compile time, while the new operator allocates memory at run time.

In order to associate a value with a memory address, we use the indirection operator *.

In my opinion, The best way to understand pointers is to be able to read out the meaning of the syntax.

<pre class="prettyprint">*q</pre> literally translates to
"The value associated with the memory address assigned to q."

Putting all these concepts together, we can come up with

<pre class="prettyprint">
float *q;      //Establish q as a pointer variable, enabling it to hold a memory address
q = new float; //Dynamically allocate memory for a float and assign a memory address to q
*q = 13.5;     //Associate the float value 13.5 with the memory address assigned to q
</pre>

Once you can audibly describe the process occurring, pointers begin to make a lot more sense.]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>SEO For Google Local/Places</title>
    <link>http://www.vertstudios.com/blog/seo-google-local-places/</link>
    <pubdate>Fri, 04 Jun 2010 13:09:53 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=682</guid>
    <description></description>
    <content><![CDATA[Ranking highly in Google's local results is extremely important for local companies. What can be frustrating for a company is ranking #1 in the organic results but not appearing in the local listings at all! What's even more irritating is that some of the local results ranking above you don't even link to an official website: You could easily be shoved off the local listings by a Google Maps or Mapquest result!

<h2>Why is ranking high in local results important?</h2>

If you take a look at how much space the local listings can take up, you begin to realize that your high organic ranking becomes almost irrelevant when your key search terms bring up Google Local results.

<img src="http://www.vertstudios.com/blog/images/mc-blog/marketing/seo/google-local/local-vs-organic-google.jpg" alt="Google Local vs Google Organic Results" />

People generally aren't going to bother looking past the local results because the local results have the following conveniences
<ol>
<li>Reviews to see how the businesses listed handle themselves</li>
<li>Phone numbers of the business</li>
<li>Map markers to let them see the proximity to their household</li>
<li>Direct links to websites for more information</li>
</ol>

For the average user, there's not much more you really need from there.

So now we acknowledge that for our niche, ranking highly in the local results is really important. Naturally the question that follows: How do we get up there?

<h2>How to rank highly for Google Local Results</h2>
Right away you can tell that the algorithm for local results is completely different than the algorithm for organic results. This is because backlinks, the backbone of organic results, has much less influence on the local results.

I came across a fantastic article that is actually a compilation of SEO Experts' opinions. In the article <a href="http://www.davidmihm.com/local-search-ranking-factors.shtml">Local Search Ranking Factors</a>, the SEO experts came together and decided what factors most influence the local search engine results.

The top 5 factors <strong>IN ORDER</strong> are:
<ol>
<li>Having Local Businesses listed in the city of the search</li>
<li>Citations from Major Data Providers</li>
<li>Categories</li>
<li>Claiming your Business Listing</li>
<li>Keywords in Business Title</li>
</ol>

To illustrate these principles, I will be using <a href="http://sleepmasterstexas.com">Sleep Masters</a>, a local mattress store here in Tyler, Texas who I moved up to #1 in the local results.

<h3>1) Having Local Businesses listed in the city of the search</h3>
Although sort of a no-brainer, it can easily be overlooked. Make sure that the business listing is listed for the correct city. This is very important for companies that may have moved. In the case of Sleep Masters, I had to make sure they were listed for Tyler and Longview, Texas.

<h3>2) Citations from Major Data Providers</h3>
Citations are the back-links of Google Local SEO. Citations are like what you would find in a phonebook directory. For Sleep Masters, a <em>citation</em> would be:

Sleep Masters Sleep Center
700 W Loop 323 Tyler, Texas
(903) 509-1444

while a <em>backlink</em> could easily just be

<a href="http://sleepmasterstexas.com">Sleep Masters</a>

If you can manage to get a citation <strong>and</strong> a backlink, that's awesome for you! But for local search directory purposes, the text of the citation is more valuable than the backlink.

Major Data Providers is another term for <a href="http://www.google.com/search?q=internet+yellow+pages">internet yellow pages</a>.

An easy way to get started is to just Google <a href="http://www.google.com/search?q=internet+yellow+pages">internet yellow pages</a>, and try every page that shows up and see if you can get a free business listing in.

By doing this with Sleep Masters, their site shot up through the local results for Longview, Texas rather quickly. However Tyler, Texas was still an issue: An issue resolved by correcting categories.

<h3>3) Categories</h3>
Google will let you be as broad with your categories  as possible, but the more concise and specific the category, the higher you will rank for that category.

For example: Sleep Masters sells mostly mattresses and pillows, and they were listed as a furniture store in the Google categories. While this is true, changing the category from "furniture store" to "mattress store" yielded immediate results which has placed them at #1.

Be specific with your categories, and it is my opinion that you don't claim too many. One or two is sufficient: Anything more is just spammy.

<h3>4) Claiming your Business Listing</h3>
Claiming your business simply means letting Google know through a verification process that you own a business that is listed. This lets you make changes to the listing as you see fit.

Due to the fact that users can edit unclaimed business information, business that  have not been claimed can still easily rank in the local results, but claimed business will generally rank higher.

If you are doing SEO for a local company, this <strong>HAS</strong> to be your first step. Additionally, it is the most annoying step, because Google has to verify the listing at the address and phone number of the business. You will have to cooperate with the local business you are doing SEO for and let them know that they will be receiving a post card or automated phone call from Google that will contain a PIN you need to claim the listing.

<h3>5) Keywords in Business Title</h3>
In the beginning of the SEO work for Sleep Masters, Tyler Mattress Co and Mattresses 2 Go were ranked #1 and #2 for the targeted keyword phrase. The fact that they had the keyword "Mattress"  in their name greatly helped them. We can also conclude that keywords in the business title has a lower influence on the results since Sleep Masters does not contain that keyword, but has better citations.
]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Why I Wish iPhone Apps Were More Expensive</title>
    <link>http://www.vertstudios.com/blog/why-i-wish-iphone-apps-were-more-expensive/</link>
    <pubdate>Sun, 06 Jun 2010 18:08:16 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=746</guid>
    <description></description>
    <content><![CDATA[Yup, you heard me right. I wish iPhone and iPad apps were more expensive. Why? Not because I'm some rich kid that wants to hold the cool toys from the proletariat.

<h2>The Higher-End Shut Out</h2>

The simple reason is that the $.99 average price for an iPhone app is shutting out the big game/software development companies who could provide apps of a MUCH higher quality. Even smaller companies are finding that developing for the iPhone is simply not worth their time due to the low payout.

Higher-end software and gaming companies have programmers who's skills merit a bare minimum $30-$40 an hour. There is no way a project involving those wages will break even when the app sells for just $0.99. Therefore, the only companies that can generally take on the iPhone app market are companies with
<ul>
<li>Extremely low overhead</li>
<li>A business model already built upon low prices</li>
</ul>

Companies with extremely low overhead(business expenses) can accept the low market prices because they have lower expenses to manage. Sole proprietors and teams of 2-3 generally fall into this bracket.

A higher-end company that has a low-price model already in place is <a href="http://www.popcap.com/">PopCop Games</a>. Their PC Games average $20 in store and $10 on <a href="http://store.steampowered.com/">Steam</a>. Thus when they ported their hit game <a href="http://itunes.apple.com/us/app/plants-vs-zombies/id350642635?mt=8">Plants vs Zombies</a> to the iPhone, they were able to cope with the market prices since their price for Plants vs Zombies was already at $10. They lowered the price to $2.99 and have enjoyed one of the top slots for paid apps. (It really is an excellent game, I recommend getting it if you haven't.)

<a href="http://itunes.apple.com/us/app/plants-vs-zombies/id350642635?mt=8"><img style="height: 250px; width: 300px;" src="http://mysoundtrack.ru/wp-content/uploads/2010/02/Plants-vs-Zombies.jpg" alt="Plants vs Zombies" /></a>

But the companies who make high quality PC games or software at a higher price to compensate for overhead can not cope with these prices, and they will be unable to develop any iPhone apps until prices rise.

<img src="http://www.vertstudios.com/blog/images/mc-blog/opinion/iphone-expensive-app/overhead.jpg" alt="Overhead Graph" />

The price-level and quality comparison relates directly to the <strong>web design</strong> industry. We've all heard of crowd sourcing, and the low quality work that tends to result from it: <em>Now imagine if that's all we had.</em>

<h2>The "Top List" Grip</h2>

Last December, Business Insider wrote about how the <a href="http://www.businessinsider.com/iphone-app-prices-tanking-2009-2">prices for iPhone apps were tanking</a>. There used to be $10 premium apps that would top the charts: Not anymore. The "Top Apps" categories in place by Apple have actually become a vessel of price gouging.

Colin of <a href="http://www.freeverse.com/">Freeverse Gaming</a> commented on the Business Insider article, saying

<cite style="font-size: 1.3em;">"We'd love to have our titles be more than $1-$3... they're worth it, but we want to keep our spots in the Top 10 and Top 100 Paid Apps list more."</cite>

Since most apps are downloaded directly from the App Store's "Top 100" listings, having a spot in that list is extremely valuable. And currently it seems that the only way to get in the top 100 if you have a quality product is to just slash the price.

These low prices also put freelance programmers and small dev teams in a tight spot. At these low prices, if their app doesn't go viral, they aren't going to break even in terms of opportunity cost.

<h2>The Solution</h2>
There is no real solution: This is just Capitalism in the works. People are naturally favoring lower prices, and there's nothing that can be done about it.

The only way things will change is if people realize that they could buy twenty $.99 cent apps that will each be unused after a week or two, or buy one well developed $10.00 dollar app that they would use over the lifetime of their iPhone.

If the market is only willing to pay garbage, the developers will only be able to put out garbage if they want to break even. Once the market shows that people will be willing to pay more for iPhone apps, developers will be able to put more time and care into the apps.]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>How Does PayPal Backup Funding Work?</title>
    <link>http://www.vertstudios.com/blog/how-does-paypal-backup-funding-work/</link>
    <pubdate>Mon, 07 Jun 2010 17:29:58 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=783</guid>
    <description></description>
    <content><![CDATA[I have always trusted PayPal when it comes to online transactions. I've never had an issue with account security. However, Paypal has managed to greatly irritate me today with semantics that obviously don't match up to what's written.

<h2>The Issue</h2>
I have two bank accounts. My primary checking account and a school account with a MasterCard that has about $100 on it. I bought some photos from <a href="http://www.istockphoto.com/">iStockPhoto</a> for $50 bucks via PayPal. My primary account didn't have much money on it, about $25 or so. However, since I had both bank accounts linked to my account with my MasterCard as the "Backup Funding Source", PayPal made it seem like this wouldn't be a big deal.

<img src="http://www.vertstudios.com/blog/images/mc-blog/opinion/paypal-sleight-of-hand/order.jpg" alt="PayPal Order" />
The point of interest is the red underline:
<cite>"PayPal will use MasterCard XXXX-XXXX-XXXX-XXXX to fund this transaction if your bank does not have enough funds."</cite>

So there are two ways to interpret this:
<ol>
<li>PayPal will see if there is enough money in the primary bank account before the transaction is made, and if there is not enough, it will go to the Backup Funding Source and have the entire transaction take place on that source </li>
<li>PayPal will take what money it can from the primary bank account and fund the difference with the backup source</li>
</ol>

Those are reasonable interpretations that would make it seem like it would be safe to make the transaction under my circumstances.

But How does it <strong>really</strong> work?

<h2>The Semantics</h2>

According to an administrator at the <a href="https://www.paypal-community.com/t5/How-to-use-PayPal/Backup-funding-source-to-pay-balance-not-a-backup-funding-source/m-p/26663#M9147">PayPal forums</a>,
"The back up funding source comes into play if the bank rejects the transaction. That may be for insufficient funds, closed account or some type of processing error. If it is rejected for insufficient funds, PayPal will attempt the transaction once more.

If the transaction is rejected by the bank, then PayPal will charge the backup funding source for the transaction."

So the Backup Funding Source will <em>only</em> be used when rejected. The way they justify the wording is by stating that a transaction <em>can</em> be rejected due to insufficient funds. However, if you bank with one of the banks in the 99% percentile that allows you to go into overdraft, then the transaction will not be rejected, and your Backup Funding Source proves worthless.

Not only that, but PayPal will continue to probe your bank account to see if you have "sufficient funds." What does that mean? More overdraft fees. In fact, overdraft fees of <a href="https://www.paypal-community.com/t5/How-to-use-PayPal/Backup-funding-source-to-pay-balance-not-a-backup-funding-source/m-p/26663#M9147">up to $245 have been accumulated</a> due to PayPal probing the bank account by "attempting the transaction".

The PayPal forums are littered with issues similar to mine, and even some ebay sellers are trying to <a href="http://reviews.ebay.com/Using-a-Credit-Card-as-PayPal-Backup-Funds-BE-CAREFUL_W0QQugidZ10000000003862286">warn customers of PayPal's ambiguity</a>.

<h2>The Bottom Line</h2>
Ignore PayPal's wording. They are unable to view how much money you have in your primary bank account. Thus they will always charge the primary bank account, even if the transaction exceeds the funds available. 

<strong>Have you had any issues with PayPal before? If so, please leave a comment. </strong>]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Should CSS be Trendy?</title>
    <link>http://www.vertstudios.com/blog/should-css-be-trendy/</link>
    <pubdate>Wed, 16 Jun 2010 00:06:07 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=798</guid>
    <description></description>
    <content><![CDATA[Anyone who keeps up with the development of CSS3 knows that CSS3 can do some cool things.

<h2>Super Cool Web Design Things</h2>

Cool things have been around in <a href="http://www.mcculloughdesigns.com">web design</a> ever since someone got the <strike>stupid</strike> brilliant idea of using spacer.gifs. Among the cool things that have <strike>plagued</strike> graced the internet over its lifetime are:
<ul>
<li>Guestbooks</li>
<li>Blinking Text</li>
<li>Marquee Text</li>
<li>Background MIDI</li>
<li>Clipart</li>
<li>Cute animated GIFs</li>
<li>Custom mouse cursors</li>
</ul>
And many, many more things that have absolutely no place on the internet today.

I read an article from my friend Jeremy at <a href="http://jc-designs.net/blog/2010/06/inserting-new-elements-with-jquery-and-a-css3-tip/">JC Designs</a>, and he was really excited that <a href="http://net.tutsplus.com/tutorials/html-css-techniques/quick-tip-pure-css-reflections/">CSS3 now supports image reflections</a>.

Here are some examples of image reflections in case you aren't familiar with the term.

<img src="http://officeblogs.net/powerpoint/20060630/PictureReflection.png" alt="Image Reflection" style="display: block; margin: 10px auto; border: 0px;"/>
<img src="http://www.37signals.com/svn/images/reflection/screenshot.jpg" alt="Image Reflection" style="display: block; margin: 10px auto; border: 0px;"/>
<img src="http://www.microsoft.com/student/office/en-us/images-new/background.jpg" alt="Image Reflection" style="display: block; margin: 10px auto; border: 0px;"/>

It's a big hit these days, similar to how splash screens and flash intros were a big hit years ago. Point being? It's going to get old.

<h2>The Question at Hand</h2>
Should a standards based language that takes years to draft, years to test, and years to <strong>implement into web design browsers</strong> be trendy?

<h3>Today's Trends are Tomorrow's Embarrassments</h3>

What really caught my eye when reading the <a href="http://net.tutsplus.com/tutorials/html-css-techniques/quick-tip-pure-css-reflections/">demo of the CSS image reflection</a> was a comment from someone named Michael (who I wish had listed a blog to link to).
<blockquote>
Very cool, but my thought/question is this: When CSS3 is finally fully supported, wont many of these cool features–which are all mostly inspired by Web UI design trends that are already many years old–be outdated? I think its ideal to be able to do all these wonderful things with CSS rather than with graphical images, but many of the CSS3 eye candy capabilities arent exactly cutting-edge anymore. By the time ALL the browser support them, well have moved on to other things (I assume).
</blockquote>

The "CSS3 eye candy" includes gradients, rounded rectangles, and many other cliche web design trends. Trends by definition come and go.

So here we are in 2010, and yet the web still <a href="http://warpspire.com/features/html5-css3/">does not fully support 1997 and 2000 CSS specifications</a>. What makes us think that CSS3 will be adopted in time for these super cool trends to still be useful?

There are two consequences in place here:
A) The CSS3 dev's efforts will be wasted since the trends they are coding will be outdated
Or, and by far the worst consequence...

<h3>CSS3 Design Dictation</h3>
If I am wrong and the current trends are still in style by the time CSS3 officially roles out, we are going to see an overall drop in creativity in the entry-level web design world. The web will become cluttered with these trends (even more so than now), because of the ease of implementing them into a design. Simply put, you use the tools you have, and if CSS3 gives you rounded rectangles, you might just use them because you can, it's easy, and it "looks cool".

You simply should not design in code. It stifles the creative process like no other. Design in a sketchbook, design in photoshop, whatever you do, don't design in Dreamweaver.

<h2>In conclusion...</h2>
Implementing today's "hot trends" into CSS3 will either prove to be a waste of man hours, or worse, a devolution of the creativity that the web world is already lacking.


<strong>What's your opinion on implementing design trends into CSS3?</strong>]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Common Problems with jQuery .delay()</title>
    <link>http://www.vertstudios.com/blog/common-problems-jquery-delay/</link>
    <pubdate>Fri, 18 Jun 2010 03:45:49 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=822</guid>
    <description></description>
    <content><![CDATA[Sequential fade-ins, or the fading in of elements one after the other, establish a sense of professionalism for a website. Additionally, the fade-in helps guide the user's eyes to the content you find most important.

Since sequential fade-ins rely extensively on proper usage of jQuery's .delay() method, I felt it would benefit you to learn the mechanics of .delay() through this practical example.
<h2>Understanding .delay() and for loop mechanics</h2>
The logic behind the sequential fade in is fairly straightforward: Go through each element of the wrapped set and fade it in. Simple, right?

So simple that this for loop might seem correct.

<pre class="prettyprint">
for(var i=0; i&lt;$(wrapper).length; i++)
{
   $(wrapper[i]).delay(1000).fadeIn(500);
}
</pre>

But the demo shows that everything comes up at once. Why is that? Two reasons.
<ol>
  <li>JavaScript does not pause between loop iterations</li>
  <li>.delay() is not global</li>
</ol>
<h3>JavaScript does not pause between iterations</h3>
.delay() and setTimeout do not halt or delay JavaScript from iterating code. JavaScript will iterate through a loop as many times as conditions allow it in just a few milliseconds.

Assuming our $(wrapper) contains 3 elements, JavaScript sees our for loop

<pre class="prettyprint">
for(var i=0; i&lt;$(wrapper).length; i++)
{
   $(wrapper[i]).delay(1000).fadeIn(500);
}
</pre>

As equal to these three separate statements.

<pre class="prettyprint">
$(wrapper[0]).delay(1000).fadeIn(500);
$(wrapper[1]).delay(1000).fadeIn(500);
$(wrapper[2]).delay(1000).fadeIn(500);
</pre>

JavaScript executes statements so fast that for our purposes, we can assume JavaScript executes these statements simultaneously.

Loop iterations operate in direct contrast to jQuery's method "chaining". Consider the jQuery chain

<pre class="prettyprint">$(wrapper).fadeIn(500).fadeOut(500);</pre>

fadeOut does not attempt to happen at the same time as fadeIn. fadeOut is placed in a queue and waits for the fadeIn animation to complete.

The following also causes fadeOut to happen after fadeIn, despite the fact that they are two separate statements.

<pre class="prettyprint">
$(wrapper).fadeIn(500);
$(wrapper).fadeOut(500);
</pre>

This is because the JavaScript queue is global, and no matter where a statement is executed, it has to go through the same queue-check. Even though the fadeIn and fadeOut methods are in separate statements, JavaScript recognizes that $(wrapper) is under animation, and places fadeOut in the queue for $(wrapper) until the fadeIn animation is complete. But for best coding practices, that type of code should just be chained to one line.

Here's a visual aid I use to remember the queuing differences between iterations and chains
<img src="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-fadein/queued.jpg" alt="jQuery queue" />

"Horizontal" chains are queued while "vertical" iterations (vertical because the loop goes back to the top and runs down the body of the loop) are NOT queued.
<h3>.delay() is not Global</h3>
.delay only applies to the queue of <strong>one element</strong> at a time. Executing a delay on $(wrapper[0]) will have no effect whatsoever on $(wrapper[1]).

Therefore, JavaScript sees our for loop

<pre class="prettyprint">
for(var i=0; i&lt;$(wrapper).length; i++)
{
   $(wrapper[i]).delay(1000).fadeIn(500);
}
</pre>

Like this
<img src="http://www.vertstudios.com/blog/images/mc-blog/javascript/jquery-fadein/image1.jpg" alt="For Loop time-line" />
<h2>A Working Sequential Fade-In</h2>
Now that you understand the mechanics of the .delay() method, you might be interested in seeing a working example of a Sequential fade-in effect. If you are, head over to <a href="http://jc-designs.net/blog/2010/06/more-than-one-way-to-skin-a-jquery/">The Web Machine</a> and view <a href="http://jc-designs.net/blog/2010/06/more-than-one-way-to-skin-a-jquery/">Jeremy Carlson's solution</a>.]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Google Hides its Text: Why Can&#039;t We?</title>
    <link>http://www.vertstudios.com/blog/google-hides-its-text/</link>
    <pubdate>Sat, 26 Jun 2010 02:38:57 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=866</guid>
    <description></description>
    <content><![CDATA[<h2>Are hidden-text penalties a hoax?</h2>

There are more articles about <a href="http://www.seostandards.org/seo-best-practices/hiding-text-with-css-for-seo">why hidden text is bad for SEO</a> than the number of tacos I've consumed over my life-time.

And I freaking love tacos.

<img src="http://www.vertstudios.com/blog/images/mc-blog/marketing/seo/google-lies/seo.jpg" alt="Your company SEO"  style="float: left; margin-right: 20px;"/>

Anyway, I was redesigning my website, and I thought it would be cute to alter the HTML of a Google search result page to have the top slot say "Your Business!" or something super awesome like that.

As I was adjusting the HTML for my purposes, it finally dawned on me:
<strong>I'm looking at Google's HTML Source Code</strong>

What better place to look for proper usage of header tags, strong tags, and em tags?

I was browsing through the code all excited. I felt like I had a personal breakthrough. This would serve as a template for best practices.  I scoffed at the fact that I hadn't done it before.

Then I came across something.
<pre class="prettyprint">&lt;h1&gt;&lt;a id=logo href=&quot;http://www.google.com/webhp?hl=en&quot; title=&quot;Go to Google Home&quot;&gt;Google&lt;img width=167 height=222 src=&quot;/images/srpr/nav_logo13.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
</pre>
<p style="clear: both;">I thought to myself: <b>Hey, isn't that what people do when they're replacing text with an image by moving the text off screen so they can trick search engines?</b></p>

Well....<pre class="prettyprint">#logo img{border:none;position:absolute;left:-0px;top:-41px}</pre>

Google's image logo is positioned over the h1 text.

Remove the image tag and you see a tiny Google link.


<img src="http://www.vertstudios.com/blog/images/mc-blog/marketing/seo/google-lies/seo-1.jpg" alt="Google hides its text" />

Let's see what Google's own Webmaster's document says about this...
<blockquote style="width: 500px; margin: 0px auto; display: block;">
Hiding text or links in your content can cause your site to be perceived as untrustworthy since it presents information to search engines differently than to visitors. Text (such as excessive keywords) can be hidden in several ways, including:

    * Using white text on a white background
    * Including text behind an image
    * <b>Using CSS to hide text</b>
    * Setting the font size to 0

</blockquote>

Hmph.

The trickery doesn't end there.
<pre class="prettyprint">&lt;h2 class=hd&gt;Search Results&lt;/h2&gt;</pre>

Examining class <b>h</b>i<b>d</b>e reveals
<pre class="prettyprint">.hd{position:absolute;width:1px;height:1px;top:-1000em;overflow:hidden}</pre>

If you do a browser-search for the phrase "Search Results", the results will be found, but you can't see the text on the screen.

<h2>Nice Double-standard, Google</h2>

This may very well be old news, but I find myself extremely peeved.]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>5 Essential Tips for Teenage Web Designers</title>
    <link>http://www.vertstudios.com/blog/5-essential-tips-teenage-web-designers/</link>
    <pubdate>Fri, 02 Jul 2010 18:56:54 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=906</guid>
    <description></description>
    <content><![CDATA[More and more people between the ages of 15-19 are becoming interested in the world of web design and SEO. This is great news for the industry! By the time these young over-achievers mature into their 20s, they will contribute substantially to the web design community.

However, if you are a teenage entrepreneur extraordinaire, there are certain pitfalls you must avoid and certain opportunities you must grasp in order to achieve success.

<h2>1) Your age is NOT an Asset: It's a Liability</h2>
Of course your young age is impressive to the people in the web design community, but most of the time it's not the community that pays you. 99% of local businesses equate "young" with "inexperienced". Flaunting that you are 17 while pitching to a potential client will get you nowhere. If you were a business owner in your mid-30's, would you willingly invest a portion of your life's investment in someone representing a generation obsessed with Twilight and Halo 3? I don't think so.

<b>Let your work speak for itself</b>

Your age adds no value whatsoever to your clients, and adding value to your clients is the most important foundation for any business model. If you feel your work is mediocre, don't attempt to compensate by disclosing your age. That will only come across as an excuse.

<h2>2) Take care of Legal Matters</h2>
Before you attempt to make a sale as an independent contractor, be sure to get an <a href="https://sa1.www4.irs.gov/modiein/individual/index.jsp">Employee Identification Number(EIN)</a> from the IRS. You can apply for it online and the process is extremely easy. Be sure to keep up with your EIN. I recommend printing out the confirmation PDF and also saving the PDF to your hard drive.

Also, if you plan on receiving more than $600 from a client for the year, be sure they give you a <a href="http://www.wisegeek.com/what-is-a-form-w-9.htm">W9</a> to fill out. It requires your signature and EIN.

Make sure checks are made out to your name. If you want clients to be able to write your business name on the check, you will need to <a href="http://www.legalzoom.com/sem/dbapage.html?WT.srch=1&se=google&q=dba&refcd=GO301775s_dba&tsacr=GO5026094827&cm_mmc_o=7BBTkwCjCWwc%20C%20KP-CjCKP-jH0zgfCjCp_z&gclid=CNy_zvOnzaICFSQ65QodPVI7yA">File for a DBA(Doing Business As)</a>. Note that this is separate from getting a business bank account, which should be avoided if possible due to the excessive fees. A DBA ties in with your personal checking account.

<h2>3) Take advantage of Tax Write-Offs</h2>
Logically qualifying your business expenses can lead to huge savings, especially when you factor in the cost of education. The <a href="http://www.irs.gov/pub/irs-pdf/p970.pdf">IRS's official publication</a> on qualifying education as a business expense states

<blockquote>
You can deduct the costs of qualifying work-related education as business expenses. This is education that meets at least one of the following two tests.
<ul>
<li>The education is required by your employer or the law to keep your present salary, status, or job. The required education must serve a bona fide business purpose of your employer.</li>
<li>The education maintains or improves skills needed in your present work.</li>
</ul>

However, even if the education meets one or both of the above tests, it is not qualifying work-related education if it
<ul>
<li>Is needed to meet the minimum educational requirements of your business or trade, or</li>
<li>Is part of a program of study that will qualify you for a new trade or business</li>
</ul>

You can deduct the costs of qualifying work-related education as a business expense even if the education could lead to a degree.
<cite><br />--IRS Publication 970, Page  77</cite>
</blockquote>

To become a web designer, you do not <em>need</em> a degree, unlike an Airline Pilot for example. Thus, there are no minimum educational requirements. So if you are a teenage web designer in college pursuing a web design related major (computer science, graphic design), the tuition and textbooks can  be  written  off as a business expense (but not housing or meals).

Additionally, all technical books, educational services, and web design related software should be written off as a business expense. I've written off about 30 web design books, and I'm currently deducting services such as <a href="http://www.seomoz.org">SEOMoz</a>.

Taking advantage of these write offs can save a ton of money, but <b>BE SURE TO KEEP YOUR RECEIPTS!</b>

<h2>4) Confidence is Key: Demand Respect</h2>
More likely than not, you will run into a client who refuses to take you seriously because of your age. I've had a client tell me "Don't spend it all in once place" after handing me a down payment, obviously patronizing me. Would he have said that to someone his own age? No way.

<b>If you are timid to any extent, clients will take advantage of you.</b>

Be confident in the service you're providing. If you display confidence, clients won't treat you like they're giving you pocket change for the candy store. Don't be a pushover. If you aren't confident in the services you're providing, you should probably educate yourself a bit more before trying to land a client. At the same time, don't be afraid to jump in and take a chance. It's all about knowing yourself.

<h2>5) Don't Appear Desperate</h2>
You might want the money, or you might even <em>need</em> the money. Either way, you must not appear desperate to potential clients. The moment you appear desperate, the prospective client realizes your <a href="http://en.wikipedia.org/wiki/Price_elasticity_of_demand">demand is inelastic</a>.

You experience inelastic demand when you're willing to accept an unfavorable price. This is why products such as gasoline and emergency contraceptives are so expensive: When people need them, they'll be willing to pay almost any price.

So if the potential client sees your desperation, they will talk you down to a lower price that you don't want to accept. Why?

<b>Because you've lead them to believe you're desperate enough to accept a price cut.</b>

Do not for a second let clients believe they are doing you a favor. You have spent your free-time, money, and effort on learning skills that not a lot of people are capable of grasping. There are no favors here: it's a business transaction. If the client refuses to see it as such, <b>walk away</b>. At this point, it will be impossible to please them, even if you allow yourself to build a database driven website with a custom design for $50. It seriously is just not worth the trouble.




We both know you have the potential to do great things with Web Design. Now channel your potential into a smart, confident business approach, and watch your success grow.

<h4>Further Reading</h4>
<ul>
<li><a href="http://sbinformation.about.com/lw/Business-Finance/Small-business-and-entrepreneurs/10-Business-Success-Tips-for-Young-Entrepreneurs.htm">10 Business Success Tips for Young Entrepreneurs</a></li>
<li><a href="http://www.entrepreneur.com/startingabusiness/youngentrepreneurscolumnistscottgerber/article203254.html">10 Tips for the First-Time Business Owner </a></li>
<li><a href="http://kidshealth.org/teen/school_jobs/jobs/tips_business.html">5 Tips for Teen Entrepreneurs</a></li>
</ul>]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Creating Forms: Pure CSS vs Table Based</title>
    <link>http://www.vertstudios.com/blog/forms-css-vs-tables/</link>
    <pubdate>Wed, 07 Jul 2010 12:42:38 +0000</pubdate>
    <guid isPermaLink="false">http://www.mcculloughdesigns.com/blog/?p=949</guid>
    <description></description>
    <content><![CDATA[While I have always been an advocate for table-less layouts with semantic HTML, designing forms with pure CSS has proven to be a complete pain in the butt. And apparently I'm only one in <a href="http://www.google.com/search?hl=en&amp;q=%22css+form+problem%22">10,000 to say so</a>.
<h2>Are Pure CSS Forms Really Superior?</h2>
<img src="http://www.vertstudios.com/blog/images/mc-blog/html/css-vs-table-form/goodcode-badcode.jpg" alt="Good Code vs Bad Code" />

Truly the only arguments against table-based forms are the semantics arguments and web accessibility cliches. Let's address these claims.
<h3>Claim 1: Semantics: Tables are for Tabular Data</h3>
Do I agree with this statement? Certainly. But is it really too much of a stretch to advocate that forms are tabular in nature? Imagine you wanted to make a form that would be printed and filled out on paper. It would make sense to use a table for that. Also note that forms can logically be integrated to spreadsheets, which are <a href="http://webdesign.about.com/od/tables/a/aa122605.htm">tabular by definition</a>. Of course it is not as semantic as the display of tabular data, but the semantic value lost is equal to that of using the br tag outside the context of a paragraph line break (which happens extremely frequently).

There seems to be a perception amongst some anti-table zealots that ugly, semantic-less code is okay <em>as long as you don't use tables</em>. So the same people who decry the use of tables will improperly use br tags, will litter their form code with spans and classes, have 400 lines of CSS code for their form, and then tell us that tables are bad for the web.

Hmph.

This <a href="http://www.sitepoint.com/forums/showpost.php?p=3774049&amp;postcount=6">post from the sitepoint forums</a> basically sums it up the arrogance and hypocrisy of the common table-basher.
<blockquote>I'd never use a table to lay out a form (unless the structure really is tabular). There's no need.

My favourite method for creating a traditional form layout (labels on the left, fields on the right) is to use a left padding on the fieldset (or a nested DIV) with relative positioning, then absolutely positioning the labels.

Using classes for the fieldset you can acommodate layouts with different length of labels, e.g.,
CSS Code:
.short-labels {padding-left:5em}
.medium-labels {padding-left:8em}
.long-labels {padding-left:16em}

This method also makes it very easy to have text fields or textareas that occupy all of the available width in the right 'column'.</blockquote>
So to adhere to egocentric standards, you have to use a relatively positioned nested div, absolutely position each label and input, and use different classes depending on the relative length of the label.

Yeah, that's totally good coding practice.

And this post isn't just from some random forum junky: It's from a sitepoint author.
<h3>Claim 2: CSS Forms are More Accessible</h3>
What are the accessibility gains of CSS over Tables? According to <a href="http://www.chromaticsites.com/blog/13-reasons-why-css-is-superior-to-tables-in-website-design/">Chromatic Sites</a>,
<ol>
  <li>Separating content from visual information</li>
  <li>Universal cross-browser style declarations</li>
  <li>Placement of interactive elements</li>
</ol>
These are all true. I'd also like to add that CSS can decrease load times by eliminating the bulky HTML caused by table-based layouts.

However, all these accessibility gains over tables seem to apply only when the <strong>entire web design</strong> is created in tables, and when no CSS is used whatsoever. I'll address these accessibility issues individually.
<h4>1) Separating content from visual information</h4>
The only presentational markup necessary when dealing with tabular forms are the initial cellspacing/border values, and the aligns/valigns for the cells. This extra markup is actually less than the extra markup found in most CSS contact forms via label classes and spans.
<h4>2) Universal cross-browser style declarations</h4>
Anyone who's worked with forms using only CSS knows that getting form elements to behave cross browser can be extremely time consuming. Despite the fact that 90% of the pages I create validate strict, forms will behave erratically in different browsers without a lot of extra classes and markup.
<h4>3) Placement of interactive elements</h4>
Chromatic Sites claims that tables for layouts causes too much clutter. However, this isn't an issue since you can use <a href="http://www.w3schools.com/css/css_syntax.asp">css selectors</a> to select the td and input tags with CSS. This allows you to apply proper margin and padding and give plenty of space between the form elements.
<h4>4) CSS decreases load times over table-based layouts</h4>
Yes, CSS can decrease load times for websites. However, bulky CSS to accommodate form creation can lead to a slower user experience as well. Take for instance <a href="http://jeffhowden.com/code/css/forms/">Jeff Howdens</a> creation of a CSS only form. It looks nice, functions well, and the HTML is perfectly semantic, but look at how long the CSS code is. Now imagine how long that took to perfect.
<h2>Table-based Form Best Practices</h2>
Table-based code can still be maintainable if you do not attempt to implement presentational elements within the code. Let the CSS Take care of that. Also, avoid nesting tables at all cost. There is generally no need for it when it comes to forms.

Here is an example of a simple table-based form that lets CSS do most of the work(but thanks to using tables the work is easy!).

<pre class="prettyprint">&lt;table id=”contactForm” cellspacing=”0″ cellpadding=”0″ border=”0″&gt;

&lt;tr&gt;
&lt;td align=”right” valign=”middle”&gt;&lt;label for=”name”&gt;Name:&lt;/label&gt;&lt;/td&gt;
&lt;td&gt;&lt;input type=”text” class=”required” id=”name” name=”name” /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=”right” valign=”middle”&gt;&lt;label for=”company”&gt;Company:&lt;/label&gt;&lt;/td&gt;
&lt;td&gt;&lt;input type=”text” class=”&quot; id=”company” name=”company” /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=”right” valign=”middle”&gt;&lt;label for=”phone”&gt;Phone Number:&lt;/label&gt;&lt;/td&gt;
&lt;td&gt;&lt;input type=”text” class=”required phoneUS” id=”phone” name=”phone” /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=”right” valign=”middle”&gt;&lt;label for=”email”&gt;Email Address:&lt;/label&gt;&lt;/td&gt;
&lt;td&gt;&lt;input type=”text” class=”required email” id=”email” name=”email” /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=”right” valign=”top”&gt;&lt;label for=”details”&gt;Project Details:&lt;/label&gt;&lt;/td&gt;
&lt;td&gt;&lt;textarea class=”&quot; id=”details” name=”details” cols=”10″ rows=”6″&gt;&lt;/textarea&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;</pre>

Enjoy the simple things in life :)
<h2>In Conclusion</h2>
We realize that Pure CSS and CSS+Tables can accomplish the same thing when it comes to forms.

The issue boils down to the following questions:
<ol>
  <li>Will the user care about your apprehension to simple table-based solutions?</li>
  <li>Will your client care about your successful implementation of a CSS Form when you charge them 4 hours for labor when you could have made a table-based form in 30 minutes?</li>
</ol>
<h3>Further Reading...</h3>
<a href="http://softwareas.com/tables-the-secret-behind-every-simple-css-form">Tables – The Secret Behind Every Simple CSS Form</a>
<a href="http://ajaxian.com/archives/css-and-tables-the-war-continues">CSS and Tables; The War Continues</a>]]></content>
    <excerpt><![CDATA[While I have always been an advocate for table-less layouts with semantic HTML, designing forms with pure CSS has proven to be a complete pain in the butt. And apparently I'm only one in <a href="http://www.google.com/search?hl=en&q=%22css+form+problem%22">10,000 to say so</a>.]]></excerpt>
  </item>
  <item>
    <title>How to Write an Effective Company Value Proposition</title>
    <link>http://www.vertstudios.com/blog/how-to-write-an-effective-company-value-proposition/</link>
    <pubdate>Tue, 03 Aug 2010 22:25:13 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1187</guid>
    <description></description>
    <content><![CDATA[A company's value proposition explicitly states the benefits or values it intends to provide its customers. Are value propositions just corporate jargon that have no place in the real world? No: you must be thinking of 99% of mission statements ;). 

<h2>So what's the value of a company value proposition? </h2>
Most customers will never read your company value proposition directly. They should, however, see it manifested in everything you do. Therefore, a value proposition does not attempt to pitch to the reader; <b>it serves as a guideline for the company</b>. All products offered by a company must fit within the scope of their value proposition. Products that do not fit within the scope of the value proposition risk overstretching the company brand, potentially leading to a loss of identity and trust amongst consumers. 

An effective company value proposition performs the following functions:
<ol>
<li>Describes your target audience</li>
<li>Describes your product or service</li>
<li>Describes what makes your company superior to competitors</li>
</ol>

<h3>1) Describe your target audience</h3>
At this point in the life of your business, you should have your target audience established. Do not attempt to make a value proposition without a set-in-stone target audience, or I guarantee you the value proposition will be 100% worthless. 

When introducing a product to the market, the company must ensure the product serves the wants of their target audience (see the "Customer Needs, Wants, and Demands" in <a href="http://www.vertstudios.com/blog/5-principles-of-web-marketing/">5 principles of web marketing</a>). Having a company value proposition that states the target audience prevents unhealthy deviations that may lead to a loss. 

Example - Widget company:
<b>Bad</b>: "We provide high quality widgets"
<b>Better</b>: "We provide high quality widgets to families on a budget"
<b>Best</b>: "We provide retailers with high-quality yet low-cost widgets, increasing their widget sales by allowing them to pass savings on to their customers"

The best example describes the target audience (retailers), customer expectations (low prices without a compromise in quality), and customer value (increasing retailers widget sales). 

<h3>2) Describe your product or service</h3>
You should include exactly what type of product your company offers in your customer value proposition. A microchip manufacturer makes microchips, not "the latest technology". A tire company makes tires, not "stability enhancing traction devices." The less fluff, the better.

Examples - Computer accessories manufacturer:
<b>Bad</b>: "We push the limits of technology and bring our customers along for the ride"
<b>Better</b>: "We provide the most technologically advanced computer accessories"
<b>Best</b>: "We provide the most advanced computer accessories for the most advanced computer users."

The best example describes the target audience (advanced computer users), customer expectations (advanced/high-end products), and customer value (a company that appreciates the intelligence of their customers). 

<h3>3) Describes what makes your company superior to competitors</h3>
Pointing out the differences between your company and your competitors means nothing unless those differences provide value. So what if you don't test your products on animals? So what if your product is made in America? If you can't provide a sufficient answer to these "so what? tests", then you haven't demonstrated the value of your differentiation. 

Keep in mind that a product has too many characteristics for you to claim your company has mastered all of them. Car manufacturers have realized this and have adapted their customer value propositions accordingly. For example, Subaru touted safety in their <a href="http://www.google.com/url?sa=t&source=web&cd=6&ved=0CCkQFjAF&url=http%3A%2F%2Ftapscottbehindthewheel.blogspot.com%2F2006_02_01_archive.html&ei=ZoRYTPeuDMGv4Ab03OiVBw&usg=AFQjCNHsMeMfUfC2xt4LJUTYfmdOLXsJFw&sig2=egsn79kn8KyVa5EI6I418g">2006 customer value proposition</a>
<blockquote>"Air bags save lives. All-wheel drive saves air bags. It's what makes a Subaru a Subaru."</blockquote>

The same year, Saab came out with its <a href="http://www.saabusa.com/saabjsp/about/pr_060220.jsp">"Born from Jets"</a> campaign that promoted their specialty of car performance by linking their cars to their Jet engineering heritage. Saab Automobile USA General Manager Jay Spenchian stated:

<blockquote>"Jets are inherently cool - they represent speed, control, safety, quality and reliability. Saab is the only car company that can claim such a heritage. Nobody else can say 'what our founding engineers knew about thrust and power inspired us to build a more exciting vehicle' or 'what they knew about keeping pilots alive inspired us to build a safer vehicle.' This is unique to Saab and it really resonates with potential customers." </blockquote>

Always respect the fact that your competitors can provide a specific value to customers that you can't: whether its lower prices, faster shipping, whatever. <b>Attempting to incorporate their value into your business model could prove detrimental</b>. Your job is not to copy your competitors: Your job is to emphasize your specialty (for example, car safety) and convince your customers that your specialty provides superior value over your competitors (would you rather drive like a jet or save lives?). 

Now you have the tools necessary to write an excellent company value proposition. For further reading, check out <a href="http://www.marketingexperiments.com/improving-website-conversion/value-proposition.html">In Search of a Value Proposition</a>, written flawlessly by MarketingExperiments.com.

Think you have a great company value proposition? Share it in the comments section! ]]></content>
    <excerpt><![CDATA[A company's value proposition explicitly states the benefits or values it intends to provide its customers. Are value propositions just corporate jargon that have no place in the real world? No: you must be thinking of 99% of mission statements ;). 

<h2>So what's the value of a company value proposition? </h2>
Most customers will never read your company value proposition directly. They should, however, see it manifested in everything you do. Therefore, a value proposition does not attempt to pitch to the reader; <b>it serves as a guideline for the company</b>. All products offered by a company must fit within the scope of their value proposition. Products that do not fit within the scope of the value proposition risk overstretching the company brand, potentially leading to a loss of identity and trust amongst consumers. 

An effective company value proposition performs the following functions:]]></excerpt>
  </item>
  <item>
    <title>The Vert Studios jQuery Plugin Library</title>
    <link>http://www.vertstudios.com/blog/vert-studios-jquery-plugin-library/</link>
    <pubdate>Tue, 10 Aug 2010 19:20:40 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1315</guid>
    <description></description>
    <content><![CDATA[We at <a href="http://www.vertstudios.com/">Vert Studios</a> absolutely love making custom jQuery plugins. Some plugins we create are large and robust, while others are simple and concise. Look through our list of plugins and JavaScript functions, and start incorporating them into your own projects! Each time we develop a new Plugin, we'll link to it from this page: Bookmark it! 

<a href="http://www.vertstudios.com/vertlib.js">Download the library</a>
<a href="http://www.vertstudios.com/vertlib.min.js">Minified version</a>

<h2>jQuery Plugins</h2>
<h3>Animation/Effects</h3>
<a href="http://www.thewebsqueeze.com/web-design-tutorials/sequential-fade-in-jquery-plug-in.html">.fadeInSequence()</a> - Fades in the wrapped set of elements one after the other. 

<h3>Array Processing</h3>
<a href="http://www.vertstudios.com/blog/frontpush-jquery-plugin/">.frontpush()</a> - Adds the wrapped set of elements to the front of an array.
<a href="http://www.vertstudios.com/blog/getindexof-jquery-plugin/">.getIndexOf()</a> - Searches an array for the wrapped set of elements and returns the index. 
<a href="http://www.vertstudios.com/blog/swap-jquery-plugin/">.swap()</a> - Swaps the positions of elements within the jQuery object. 
<a href="http://www.vertstudios.com/blog/arrayshift-jquery-plugin/">.arrayShift()</a> Places an element at a new index and shifts the rest of the affected elements. 

<h3>Logical</h3>
<a href="http://www.vertstudios.com/blog/equalto-jquery-plugin/">.equalTo()</a> - Determines the equality between jQuery objects
]]></content>
    <excerpt><![CDATA[We at Vert Studios absolutely love making custom jQuery plugins. Some plugins we create are large and robust, while others are simple and concise. Look through our list of plugins and JavaScript functions, and start incorporating them into your own projects!]]></excerpt>
  </item>
  <item>
    <title>.frontpush() jQuery Plugin</title>
    <link>http://www.vertstudios.com/blog/frontpush-jquery-plugin/</link>
    <pubdate>Tue, 10 Aug 2010 21:55:04 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1323</guid>
    <description></description>
    <content><![CDATA[<h2>.frontpush(array)</h2>

<strong>Description</strong>
Places the matched set of elements at the front of an array.

<a href="http://www.vertstudios.com/lib/js/blog/plugins/frontpush.zip">Download the ZIP File with Source and Demo</a>

<h3>Parameters:</h3>
<ul>
<li>array: The array that will be manipulated</li>
</ul>


Due to scope issues, the JavaScript array method .unshift() sometimes fails to function properly. This is often followed by an error in FireBug stating .unshift() is not a function. Sometimes the scope issue is extremely difficult to find, and it's easier to simply use this plugin to insert jQuery objects at the front of an array. 

<h2>Demos</h2>
<pre class="prettyprint">
&lt;html&gt; 
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;frontpush.jquery.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  var boxes = $(&quot;#box1&quot;);
  $(&quot;.box&quot;).frontpush(boxes);
  console.log(boxes); //Outputs  [div#box2.box, div#box3.box, div#box1]
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div id=&quot;box1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box2&quot;&gt;&lt;/div&gt; 
  &lt;div class=&quot;box&quot; id=&quot;box3&quot;&gt;&lt;/div&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>

<a href="http://www.vertstudios.com/lib/js/blog/plugins/frontpush.zip">Download the ZIP File with Source and Demo</a>]]></content>
    <excerpt><![CDATA[<strong>Description</strong>
Places the matched set of elements at the front of an array.]]></excerpt>
  </item>
  <item>
    <title>jQuery unshift is not a function – Solution!</title>
    <link>http://www.vertstudios.com/blog/jquery-unshift-not-a-function-solution/</link>
    <pubdate>Wed, 11 Aug 2010 01:13:45 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1344</guid>
    <description></description>
    <content><![CDATA[At times, jQuery can induce some scope issues when it comes to using the JavaScript array prototypes. One example in particular is the unshift() array prototype. In the same context as array.push(), Firebug may throw the error that <strong>unshift is not a function</strong>. Honestly, I can't account for why this happens, but in the event you need to use unshift for a jQuery object, I have created a jQuery plugin called <a href="http://www.vertstudios.com/blog/frontpush-jquery-plugin/">.frontpush()</a> that works around the issue. 

<h3>Bugs? Comments? Leave your feedback in the comments section below</h3>]]></content>
    <excerpt><![CDATA[At times, jQuery can induce some scope issues when it comes to using the JavaScript array prototypes. One example in particular is the unshift() array prototype. In the same context as array.push(), Firebug may throw the error that <strong>unshift is not a function</strong>. Honestly, I can't account for why this happens, but in the event you need to use unshift for a jQuery object, I have created a jQuery plugin called <a href="http://www.vertstudios.com/blog/frontpush-jquery-plugin/">.frontpush()</a> that works around the issue. 
]]></excerpt>
  </item>
  <item>
    <title>.getIndexOf() jQuery Plugin</title>
    <link>http://www.vertstudios.com/blog/getindexof-jquery-plugin/</link>
    <pubdate>Wed, 11 Aug 2010 20:06:38 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1350</guid>
    <description></description>
    <content><![CDATA[<h2>.getIndexOf(array)</h2>

<strong>Description</strong>
Returns the location of the matched set of elements in a specified array. Returns Boolean false if the matched set is not found in the array. 

<a href="http://www.vertstudios.com/lib/js/blog/plugins/getindexof/getindexof.zip">Download the ZIP File with Source and Demo</a>

<h3>Parameters:</h3>
<ul>
<li>array: The array that will be searched through</li>
</ul>

<h2>Demos</h2>


If you manipulate the structure of a jQuery wrapped set using array methods, the standard <a href="http://api.jquery.com/index/">.index()</a> of jQuery fails to adapt to the new structure.

In this example, the index number for each element is displayed in its respective box. Clicking <a href="http://www.w3schools.com/jsref/jsref_splice.asp">splice</a> will remove the first element of the jQuery wrapped set, and repopulate the boxes with their new index. 

<iframe src="http://www.vertstudios.com/lib/js/blog/plugins/getindexof/demo-jquery-this.html" width="300" height="100" scrolling="no">Your browser does not support iFrames.</iframe>


Notice that the index's do not change using jQuery(this).index() (See line 47)
<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a> 
<div class="codeDisplay">
  <pre class="prettyprint">
&lt;html&gt; 
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;getindexof.jquery.js&quot;&gt;&lt;/script&gt;
&lt;title&gt;GetIndexOf plugin&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
.box{
width: 30px;
height: 30px;
border: 1px solid #000000;
float: left;
margin-left: 10px;
}

button{
margin-top: 20px;
margin-left: 10px;
float: left;
width: 50px;
height: 30px;
}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  var boxes = $(&quot;.box&quot;);
  
  //store boxes into a variable in case user resets
  var storage = boxes.clone();

  $(boxes).each(function()
  {
    //Populate box with their index number
    $(this).html($(this).index());
  });
  
  $(&quot;#splice&quot;).click(function()
  {
    //Clear index numbers
    boxes.each(function(){$(this).html(&quot;&quot;);});
    
    //Get rid of first element in jQuery boxes object
    boxes.splice(0,1);
    
    $(boxes).each(function()
    {
      //Populate box with their index number
      $(this).html($(this).index());
    });
  });
  
  $(&quot;#reset&quot;).click(function()
  {
    boxes.remove();
    
    //Retrieve original object
    boxes = storage;
    
    $(&quot;#content&quot;).html(boxes);
    
    //Populate box with their index number
    $(boxes).each(function(){$(this).html($(this).index());});
    
    //store boxes into a variable in case user resets
    storage = boxes.clone();    
  });
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div id=&quot;content&quot;&gt;
  &lt;div class=&quot;box&quot; id=&quot;box1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box4&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;button style=&quot;clear:both;&quot; type=&quot;button&quot; id=&quot;splice&quot;&gt;Splice&lt;/button&gt;
  &lt;button type=&quot;button&quot; id=&quot;reset&quot;&gt;Reset&lt;/button&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>
</div>
</div>

The .getIndexOf method, however, accounts for the fact that the array structure has changed. (See line 49)

<iframe src="http://www.vertstudios.com/lib/js/blog/plugins/getindexof/demo.html" width="300" height="100" scrolling="no">Your browser does not support iFrames.</iframe>

<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a> 
<div class="codeDisplay">
  <pre class="prettyprint">
&lt;html&gt; 
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;getindexof.jquery.js&quot;&gt;&lt;/script&gt;
&lt;title&gt;GetIndexOf plugin&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
body{background-color: #FFFFFF;}

.box{
width: 30px;
height: 30px;
border: 1px solid #000000;
float: left;
margin-left: 10px;
}

button{
margin-top: 20px;
margin-left: 10px;
float: left;
width: 50px;
height: 30px;
}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  var boxes = $(&quot;.box&quot;);
  
  //store boxes into a variable in case user resets
  var storage = boxes.clone();

  $(boxes).each(function()
  {
    //Populate box with their index number
    $(this).html($(this).index());
  });
  
  $(&quot;#splice&quot;).click(function()
  {
    //Clear index numbers
    boxes.each(function(){$(this).html(&quot;&quot;);});
    
    //Get rid of first element in jQuery boxes object
    boxes.splice(0,1);
    
    $(boxes).each(function()
    {
      //Populate box with their index number
      $(this).html($(this).getIndexOf(boxes));
    });
  });
  
  $(&quot;#reset&quot;).click(function()
  {
    boxes.remove();
    
    //Retrieve original object
    boxes = storage;
    
    $(&quot;#content&quot;).html(boxes);
    
    //Populate box with their index number
    $(boxes).each(function(){$(this).html($(this).index());});
    
    //store boxes into a variable in case user resets
    storage = boxes.clone();    
  });
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div id=&quot;content&quot;&gt;
  &lt;div class=&quot;box&quot; id=&quot;box1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box4&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;button style=&quot;clear:both;&quot; type=&quot;button&quot; id=&quot;splice&quot;&gt;Splice&lt;/button&gt;
  &lt;button type=&quot;button&quot; id=&quot;reset&quot;&gt;Reset&lt;/button&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>
</div>
</div>
<a href="http://www.vertstudios.com/lib/js/blog/plugins/getindexof/getindexof.zip">Download the ZIP File with Source and Demo</a>
<h2>Dependencies</h2>
(Note: All dependencies are included in the source)
<a href="http://www.vertstudios.com/blog/equalto-jquery-plugin/">.equalTo()</a> - Tests if two jQuery objects are equal to eachother. ]]></content>
    <excerpt><![CDATA[<strong>Description</strong>
Returns the location of the matched set of elements in a specified array. Returns Boolean false if the matched set is not found in the array. ]]></excerpt>
  </item>
  <item>
    <title>.equalTo() jQuery Plugin</title>
    <link>http://www.vertstudios.com/blog/equalto-jquery-plugin/</link>
    <pubdate>Thu, 12 Aug 2010 21:54:35 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1380</guid>
    <description></description>
    <content><![CDATA[<h2>.equalTo(object)</h2>

<strong>Description</strong>
Returns boolean true if the wrapped set of elements is equal to object

<a href="http://www.vertstudios.com/lib/js/blog/plugins/equalto/equalto.zip">Download the ZIP File with Source and Demo</a>

<h3>Parameters:</h3>
<ul>
<li>object: A jQuery object being compared with the current wrapped set of elements</li>
</ul>

<h2>Demos</h2>

The normal equality operators == and === do not properly evaluate the equality between jQuery objects. 

In this example, a div is given a class "box" and id "box1". This div is selected by jQuery by its class and by its id.  Using the normal equality operators, the jQuery objects are determined to be unequal. 
<iframe src="http://www.vertstudios.com/lib/js/blog/plugins/equalto/demo-bad.html" width="300" height="80" scrolling="no">Your browser does not support iFrames.</iframe>
<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a>
<div class="codeDisplay">
  <pre class="prettyprint">
&lt;html&gt; 
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;equalto.jquery.js&quot;&gt;&lt;/script&gt;
&lt;title&gt;equalTo plugin&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
body{background-color: #FFFFFF;}
.box{width: 200px;height: 30px;border: 1px solid #000000;float: left;margin-left: 10px;text-align: center;}
button{float: left;margin: 10px 0px 0px 10px;clear: both;}
#result{float: left;margin-left: 10px;}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  $(&quot;#evaluate&quot;).click(function(){
    if($(&quot;#box1&quot;) ===  $(&quot;.box&quot;))
    {
      $(&quot;#result&quot;).html(&quot;#box = .box&quot;);
    }
    else
    {
      $(&quot;#result&quot;).html(&quot;#box does not = .box&quot;);
    }
  });
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div id=&quot;content&quot;&gt;
  &lt;div class=&quot;box&quot; id=&quot;box1&quot;&gt;id of #box, class of .box&lt;/div&gt;
  &lt;/div&gt;
  &lt;button type=&quot;button&quot; id=&quot;evaluate&quot;&gt;Evaluate&lt;/button&gt;
  &lt;p id=&quot;result&quot;&gt;&lt;/p&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>
</div>
</div>

Using the .equalTo() method, however, properly evaluates that $("#box1") and $(".box") are the same. 
<iframe src="http://www.vertstudios.com/lib/js/blog/plugins/equalto/demo.html" width="300" height="80" scrolling="no">Your browser does not support iFrames.</iframe>

<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a>
<div class="codeDisplay">
  <pre class="prettyprint">
&lt;html&gt; 
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;equalto.jquery.js&quot;&gt;&lt;/script&gt;
&lt;title&gt;equalTo plugin&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;
body{background-color: #FFFFFF;}
.box{width: 200px;height: 30px;border: 1px solid #000000;float: left;margin-left: 10px;text-align: center;}
button{float: left;margin: 10px 0px 0px 10px;clear: both;}
#result{float: left;margin-left: 10px;}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  $(&quot;#evaluate&quot;).click(function(){
    if($(&quot;#box1&quot;).equalTo(&quot;.box&quot;))
    {
      $(&quot;#result&quot;).html(&quot;#box = .box&quot;);
    }
    else
    {
      $(&quot;#result&quot;).html(&quot;#box does not = .box&quot;);
    }
  });
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div id=&quot;content&quot;&gt;
  &lt;div class=&quot;box&quot; id=&quot;box1&quot;&gt;id of #box, class of .box&lt;/div&gt;
  &lt;/div&gt;
  &lt;button type=&quot;button&quot; id=&quot;evaluate&quot;&gt;Evaluate&lt;/button&gt;
  &lt;p id=&quot;result&quot;&gt;&lt;/p&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>
</div>
</div>
]]></content>
    <excerpt><![CDATA[<strong>Description</strong>
Evaluates the equality between jQuery objects.]]></excerpt>
  </item>
  <item>
    <title>jQuery .swap() Plugin</title>
    <link>http://www.vertstudios.com/blog/swap-jquery-plugin/</link>
    <pubdate>Mon, 16 Aug 2010 09:56:22 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1417</guid>
    <description></description>
    <content><![CDATA[<h2>.swap(index1, index2)</h2>

<strong>Description</strong>
Swaps the elements within a jQuery object. 

<a href="http://www.vertstudios.com/lib/js/blog/plugins/swap/swap.zip">Download the ZIP File with Source and Demo</a>

<h3>Parameters:</h3>
<ul>
<li>index1: The first index of the jQuery object being swapped</li>
<li>index2: The second index of the jQuery object being swapped</li>
</ul>
Note: The first index starts at 0. 

<h2>Demos</h2>

Boxes of class "box" selected with jQuery via $(".box") are displayed with their respective index number. Choose two indexes to swap, and then click the swap button. Click "Toggle Index 0" to see that Index 0 will be toggled regardless of an element's starting position, indicating the elements of the jQuery object have indeed been swapped. 

<iframe src="http://www.vertstudios.com/lib/js/blog/plugins/swap/demo.html" width="250" height="250" scrolling="no">Your browser does not support iFrames.</iframe>
*** Please note that the .swap() method does not physically swap the element position styles, only their abstract position within the jQuery object. The index-based style positioning is handled by the fakeFloat method on line 34. 

<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a>
<div class="codeDisplay">
  <pre class="prettyprint">
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;swap.jquery.js&quot;&gt;&lt;/script&gt;
&lt;style type=&quot;text/css&quot;&gt;
body{background-color: #FFFFFF;}
.box{width: 30px;height: 30px;border: 1px solid #000000;position: absolute; top: 10px;}
#hideToggle{margin-top: 50px;}
button{margin-top: 10px;margin-left: 10px;clear: both;float: left;width: 150px;height: 30px;}
#firstIndex{clear: both;float: left;margin-left: 10px;}
#secondIndex{float: left;margin-left: 10px;}
#box1{background-color: #FFFF00;}
#box2{background-color: #CCCCCC;}
#box3{background-color: #009999;}
#box4{background-color: #FF0000;}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  var boxes = $(&quot;.box&quot;);
  
  $(boxes).each(function()
  {
    $(this).html($(this).index());
  });
  
  $(boxes).fakeFloat({margin: 10, offset: 20});
  
  $(&quot;#swapTrigger&quot;).click(function()
  {
    var index1 = $('input:radio[name=index1]:checked').val();
    var index2 = $('input:radio[name=index2]:checked').val();
    boxes = $(boxes).swap(index1,index2);
      
    $(boxes).fakeFloat({margin: 10, offset: 20, speed: 300}).each(function()
    {
      $(this).html($(this).getIndexOf(boxes));
    });
  });
  
  $(&quot;#hideToggle&quot;).toggle(function()
  {
    $(boxes[0]).hide();
    $(&quot;#swapTrigger&quot;).attr('disabled', 'disabled');
  },
  function()
  {
    $(boxes[0]).show();
    $(&quot;#swapTrigger&quot;).removeAttr('disabled');
  });
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div class=&quot;box&quot; id=&quot;box1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box4&quot;&gt;&lt;/div&gt;
  &lt;button type=&quot;button&quot; id=&quot;hideToggle&quot;&gt;Toggle index 0&lt;/button&gt;
  &lt;button type=&quot;button&quot; id=&quot;swapTrigger&quot;&gt;Swap&lt;/button&gt;
  &lt;div id=&quot;firstIndex&quot;&gt;
  &lt;b&gt;Swap Index&lt;/b&gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;0&quot; /&gt;0&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;1&quot; /&gt;1&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;2&quot; /&gt;2&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;3&quot; /&gt;3&lt;br /&gt;
  &lt;/div&gt;
  &lt;div id=&quot;secondIndex&quot;&gt;
  &lt;b&gt;With Index&lt;/b&gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;0&quot; /&gt;0&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;1&quot; /&gt;1&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;2&quot; /&gt;2&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;3&quot; /&gt;3&lt;br /&gt;
  &lt;/div&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>
</div>
</div>

<h4>Bugs? Comments? Leave your feedback below!</h4>
<!-- Start of StatCounter Code -->
<script type="text/javascript">
var sc_project=6420126; 
var sc_invisible=1; 
var sc_security="2834d5e4"; 
</script>

<script type="text/javascript"
src="http://www.statcounter.com/counter/counter_xhtml.js"></script><noscript><div
class="statcounter"><a title="statistics for vBulletin"
class="statcounter"
href="http://statcounter.com/vbulletin/"><img
class="statcounter"
src="http://c.statcounter.com/6420126/0/2834d5e4/1/"
alt="statistics for vBulletin" /></a></div></noscript>
<!-- End of StatCounter Code -->]]></content>
    <excerpt><![CDATA[<strong>Description</strong>
Swaps the elements within a jQuery object. ]]></excerpt>
  </item>
  <item>
    <title>.arrayShift() jQuery Plugin</title>
    <link>http://www.vertstudios.com/blog/arrayshift-jquery-plugin/</link>
    <pubdate>Sat, 21 Aug 2010 18:29:44 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1464</guid>
    <description></description>
    <content><![CDATA[<h2>.arrayShift(index, newLocation)</h2>

<strong>Description</strong>
Places an element of the jQuery object at a new location in the object-array and shifts all affected indexes of the array.

<a href="http://www.vertstudios.com/lib/js/blog/plugins/arrayshift/arrayshift.zip">Download the ZIP File with Source and Demo</a>

<h3>Parameters:</h3>
<ul>
<li>index: The index of the element you wish to relocate</li>
<li>newLocation: Where the element will be relocated to</li>
</ul>
Note: The first index starts at 0. index and newLocation must either be integers within the array range, or the keywords "first" and "last".
"first" - first index of the array
"last" - the last index of the array

<h2>Demos</h2>

Boxes of class "box" selected with jQuery via $(".box") are displayed with their respective index number. Choose an index you want to move, select where you would like it to be located, and then click the shift button. Click "Toggle Index 0" to see that Index 0 will be toggled regardless of an element's starting position, indicating the elements of the jQuery object have indeed been shifted. Use the color of the boxes to keep track of the elements as they shift. 

The arrayShift() method combined with the fakeFloat() method simplifies carousels by making positioning based on the array indexes. 

<iframe src="http://www.vertstudios.com/lib/js/blog/plugins/arrayshift/demo.html" width="250" height="250" scrolling="no">Your browser does not support iFrames.</iframe>
*** Please note that the .arrayShift() method does not physically swap the element position styles, only their abstract position within the jQuery object. The index-based style positioning is handled by the fakeFloat method on lines 32 and 40. 

<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a>
<div class="codeDisplay">
<pre class="prettyprint">
&lt;html&gt; 
&lt;head&gt; 
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;arrayshift.jquery.js&quot;&gt;&lt;/script&gt;
&lt;style type=&quot;text/css&quot;&gt;
body{background-color: #FFFFFF;}
.box{width: 30px;height: 30px;border: 1px solid #000000;position: absolute; top: 10px;}
#hideToggle{margin-top: 50px;}
button{margin-top: 10px;margin-left: 10px;clear: both;float: left;width: 150px;height: 30px;}
#shiftIndex{clear: both;float: left;margin-left: 10px;}
#toIndex{float: left;margin-left: 10px;}
#box1{background-color: #FFFF00;}
#box2{background-color: #CCCCCC;}
#box3{background-color: #009999;}
#box4{background-color: #FF0000;}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
  var boxes = $(&quot;.box&quot;);
  
  $.fn.fakeFloat.defaults = 
  {
    margin: 10,
    offset: 20,
  };
  
  $(boxes).each(function()
  {
    $(this).html($(this).index());
  });
  
  $(boxes).fakeFloat();
  
  $(&quot;#shiftTrigger&quot;).click(function()
  {
    var index1 = $('input:radio[name=index1]:checked').val();
    var index2 = $('input:radio[name=index2]:checked').val();
    boxes = $(boxes).arrayShift(index1,index2);
      
    $(boxes).fakeFloat({speed: 300}).each(function()
    {
      $(this).html($(this).getIndexOf(boxes));
    });
  });
  
  $(&quot;#hideToggle&quot;).toggle(function()
  {
    $(boxes[0]).hide();
    $(&quot;#swapTrigger&quot;).attr('disabled', 'disabled');
  },
  function()
  {
    $(boxes[0]).show();
    $(&quot;#swapTrigger&quot;).removeAttr('disabled');
  });
});
&lt;/script&gt;  
&lt;/head&gt; 
&lt;body&gt; 
  &lt;div class=&quot;box&quot; id=&quot;box1&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box2&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box3&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;box&quot; id=&quot;box4&quot;&gt;&lt;/div&gt;
  &lt;button type=&quot;button&quot; id=&quot;hideToggle&quot;&gt;Toggle first index&lt;/button&gt;
  &lt;button type=&quot;button&quot; id=&quot;shiftTrigger&quot;&gt;Shift&lt;/button&gt;
  &lt;div id=&quot;shiftIndex&quot;&gt;
  &lt;b&gt;Shift Index&lt;/b&gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;first&quot; /&gt;First&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;1&quot; /&gt;1&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;2&quot; /&gt;2&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index1&quot; value=&quot;last&quot; /&gt;Last&lt;br /&gt;
  &lt;/div&gt;
  &lt;div id=&quot;toIndex&quot;&gt;
  &lt;b&gt;To Index&lt;/b&gt;&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;first&quot; /&gt;First&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;1&quot; /&gt;1&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;2&quot; /&gt;2&lt;br /&gt;
  &lt;input type=&quot;radio&quot; name=&quot;index2&quot; value=&quot;last&quot; /&gt;Last&lt;br /&gt;
  &lt;/div&gt;
&lt;/body&gt; 
&lt;/html&gt; 
</pre>
</div>
</div>

<h4>Bugs? Comments? Leave your feedback below!</h4>]]></content>
    <excerpt><![CDATA[<strong>Description</strong>
Places an element of the jQuery object at a new location in the object-array and shifts all affected indexes of the array.]]></excerpt>
  </item>
  <item>
    <title>Reciprocal Twitter Follows – The New Reciprocal Links</title>
    <link>http://www.vertstudios.com/blog/reciprocal-twitter-follows-the-new-reciprocal-links/</link>
    <pubdate>Thu, 02 Sep 2010 19:36:53 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1479</guid>
    <description></description>
    <content><![CDATA[I've only been on Twitter for a few weeks, and while I am by no means a <a href="http://socialmediadouchebag.net/">social media guru</a>, I can already tell that a lot of people on Twitter have absolutely no idea what they're doing. Some people feel obligated to Retweet everything they see. Some people feel obligated to follow anyone mentioned in an Retweet. And, as this article will discuss, some people get so excited when someone follows them, they reciprocate the follow - no questions asked. What does this all lead to? Nothing. A whole lot of nothing. 

<h2>What is Reciprocal Linking?</h2>
Reciprocal linking, the act of coordinating with another webmaster to increase both sites' link profiles by linking them to each other, <a href="http://www.google.com/support/webmasters/bin/answer.py?hl=en&answer=66356">decreases a site's authority</a> when done in excess. However, Google tolerates a certain degree of reciprocal linking since, in some instances, reciprocal linking can benefit the user and/or emulate natural referral patterns. 

<h2>How does Reciprocal Linking relate to Twitter?</h2>
While excessive reciprocal linking decreases a site's authority in an algorithmic sense, excessive reciprocal following decreases a person's authority in a social sense. Twitter is nothing more than a branch of social media, and social media is just the use of networking to convince consumers to view your company as an authority. Whenever you follow someone on Twitter, you send the following implications to the world:  
<ol>
<li>I trust this person's authority</li>
<li>Since you're following me, you should trust my authority and follow this person also.</li>
</ol>

There is absolutely nothing wrong with sending these implications. However, when you send these implied messages in excess, the message becomes completely different. To demonstrate, let's take the messages stated above and replace the phrase "this person" with "most people"

<b>Message 1) "I trust most people's authority"</b>.

We have a few ways to describe a person who trusts most people's authority. We call these people
<ul>
<li>Gullible</li>
<li>Easy to deceive</li>
<li>Unable to think for themselves</li>
</ul>

Exhorting those qualities will not get you followed by anyone important. 

<b>Message 2) "Since you're following me, you should trust my authority and follow most people also."</b>.

As we've already established mindlessly following people just to build numbers does nothing, this implied messages you send out will set up your followers for social media failure. What do we call someone who claims to be an authority and sends you down the path of failure?
<ul>
<li>A scammer</li>
<li>Untrustworthy</li>
<li>Deceptive</li>
</ul>

Having these qualities associated with you or your business will hurt your brand and hurt your sales. 

You must harness and protect your authority. Take your actions on Twitter and place them in the context of real-life social standards. People of high authority do not endorse every opinion they hear, because endorsements become an extension of yourself. The sample principle apples to Twitter. 

<h2>What should you do when you see someone just has followed you?</h2>
<h3>1) Look at the topics of their Recent Tweets</h3>
Check out their recent tweets to see if what they say relates to your interests. Are their tweets and retweets relevant to your industry? Do they Retweet quality articles, or do they Retweet crappy list posts? Consider following the link to their site located in the about section. Does the site contain quality content? Ask yourself these questions before instinctively hitting the follow button.

<h3>2) Look at their frequency of Tweets</h3>
Don't follow someone who is going to fill up your screen with tweets. Look at their profile and see their tweet intervals. Truly authoritative sources will only tweet/retweet the content they value most. 

<h3>3) Realize Twitter isn't a Numbers Game</h3>
The ultimate goal in obtaining a following on Twitter is to drive traffic to your site. Many people get so caught up in their <em>quantity</em> of followers that they fail to assess whether these followers actually drive  <em>quality</em> traffic to their site. If the person who followed you has 30 following while they follow 1000 people, you can bet they're expecting you to mindlessly reciprocate. 

Now you should never rule anyone out just because they followed you. If you view their profile, read their content, and like what you see, follow them! But use these guidelines to ensure your authority is passed on to someone who deserves it. 

<h4>How do you go about getting quality followers?</h4>
Leave your feedback in the comments section below!]]></content>
    <excerpt><![CDATA[I've only been on Twitter for a few weeks, and while I am by no means a <a href="http://socialmediadouchebag.net/">social media guru</a>, I can already tell that a lot of people on Twitter have absolutely no idea what they're doing. Some people feel obligated to Retweet everything they see. Some people feel obligated to follow anyone mentioned in an Retweet. And, as this article will discuss, some people get so excited when someone follows them, they reciprocate the follow - no questions asked. What does this all lead to? Nothing. A whole lot of nothing. ]]></excerpt>
  </item>
  <item>
    <title>FREE Presentation – Self Promotion for Starving Artists</title>
    <link>http://www.vertstudios.com/blog/self-promotion-for-starving-artists/</link>
    <pubdate>Mon, 04 Oct 2010 02:43:21 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1513</guid>
    <description></description>
    <content><![CDATA[<h2>Attention All Artists</h2>
Whether your art takes the form of web design, painting, photography, jewelry, sweater-knitting or lego stacking, you deserve to profit from the time invested in mastering your craft. Justin Edwards, lead designer of <a href="http://www.vertstudios.com/">Vert Studios</a> in Tyler, Texas, will be giving a presentation entitled "Self Promotion for Starving Artists" on <strong>Wednesday, October 6th</strong> at <strong>Tyler Junior College</strong>.

<img src="http://www.vertstudios.com/images/starving_artist.jpg" alt="Self Promotion for Starving Artists provided by Vert Studios" />
<h2>What You'll Learn</h2>
After hearing the presentation, you'll be able to:
<ul>
  <li>Share your work</li>
  <li>Network with other artists</li>
  <li>Approach potential buyers/clients</li>
  <li>and <strong>Sell your work online</strong></li>
</ul>
Justin will provide you with the tools and techniques you need to take your success as an artist to the next level.
<h2>Event Details</h2>
<strong>Price:</strong> FREE!
<strong>Location:</strong> Tyler Junior College - Jenkins Art Department Lobby
<strong>Date:</strong> Wednesday October 6th, 2010
<strong>Time:</strong> 1:00PM - 2:00PM
<strong>Contact Information:</strong> For more information, please call (903) 920-9514, or email <a href="mailto:hi@vertstudios.com">hi@vertstudios.com</a>]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>New Facebook Picture Chat – Facebook Thinks We’re Idiots</title>
    <link>http://www.vertstudios.com/blog/new-facebook-picture-chat/</link>
    <pubdate>Sun, 17 Oct 2010 21:10:45 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1557</guid>
    <description></description>
    <content><![CDATA[Two similar but significant changes over the past week highlight the direction Facebook is moving when it comes to User Experience (how the user interacts with a web-based environment). 

<h2>Picturfication?</h2>
Facebook rolled out two separate changes to the extremely important chat interface. While some users simply log on Facebook and examine or comment other's profiles, many people's primary use of Facebook is its chat feature. Facebook chat consists of 3 main sections:
<ul>
<li>The sidebar friends list available on your "Home" page</li>
<li>The friends list always available on the bottom right portion of your screen</li>
<li>The chat box itself</li>
</ul>

Over the past week, Facebook has "Picturfied" the sidebar friends list and the chat box. Let's examine the changes in further detail. 

<h3>The Chat Box</h3>
Last week, the chat box looked like so:
<img src="http://tothepc.com/img/2010/04/facebook-chat-bold-underline.png" alt="Facebook Chat Box" title="Facebook Chat Box"/>
The components of the chat box included:
<ul>
<li>The name and picture of the person you're chatting with on top of the chat box</li>
<li>The name of the person who sent the last message in chat</li>
<li>An option to clear the chat history</li>
<li>Options to close or minimize the chat box on the top right</li>
<li>Time stamps</li>
<li>Option to close the chat box on the bottom right hand portion of the screen</li>
<li>The ability to browse through chat boxes using the tab key</li>
</ul>

The chat box was sufficient and provided all the tools necessary to execute a plain-text conversation. 

However, enter this week and the <strong>new Facebook chat box</strong>.
<img src="http://vertstudios.com/blog/images/facebook-chat/new-facebook-chat.png" alt="New Facebook Chat Box" title="New Facebook Chat Box" />
The changes include:
<ul>
<li>Removal of the minimize indicator (-) in the top right (The user is expected to know clicking on the blue bar's empty space minimizes the window)</li>
<li>Removal of the close indicator (x) in the top right</li>
<li><b>Replaced the name of the person in chat with their picture</b></li>
<li>Removed ability to browse through chat what with tab key</li>
</ul>

<h4>Observations</h4>
The central dogma of User Experience design is removing the unnecessary. Notice in the list of changes how many times I used the word "remove". Generally speaking, removing bits of information from view declutters the interface. While in theory the new Facebook chat box is more minimalist due to its decreased functionality, it actually appears <i>less</i> sophisticated and <i>more</i> cluttered due to its new picture-chat style. Facebook believes the average user needs a visual reminder of who they're talking to every time a message is exchanged. Seeing the profile picture along with the name once at the top of the chat box sufficed. Seeing profile pictures over and over again in chat is simply obnoxious (and mildly insulting to the average user's intelligence). 

<h3>The Sidebar Friends List</h3>
The sidebar friends list was only just recently introduced, and had simple yet useful features including the profile pictures, names, and availability of online friends.

<img src="http://vertstudios.com/blog/images/facebook-chat/facebook-old-sidebar-friends-list.png" alt="Old Facebook Friends Sidebar" title="Old Facebook Friends Sidebar" />

However, to keep consistent with the Picturfication theme, Facebook changed this interface as well. 
<img src="http://vertstudios.com/blog/images/facebook-chat/facebook-new-sidebar-friends-list.png" alt="New Facebook Friends Sidebar" title="New Facebook Friends Sidebar" />

<h4>Observations</h4>
Facebook has stripped everything away except a tiny thumbnail of the profile picture. Now the user can no longer see the names of their online friends without mousing over the thumbnails. Additionally, the green and gray availability icons are extremely hard to see since they reside within the thumbnails themselves. In the event a friend changes their profile picture or has a profile picture set to something other than their face, you may not realize they're online. 

<h2>Conclusion</h2>
While I whole-heartedly agree that a user should not have to work hard at all to enjoy the use of an interface, I believe Facebook has pushed this ideology to the extreme, incidentally diminishing the User Experience they aimed to enhance.

How do you feel about the new Facebook Chat changes? 
]]></content>
    <excerpt><![CDATA[Two similar but significant changes over the past week highlight the direction in which Facebook is moving when it comes to User Experience (how the user interacts with a web-based environment). 

<h2>Picturfication?</h2>
Facebook rolled out two separate changes to the extremely important chat interface. While some users simply log on Facebook and examine or comment other's profiles, many people's primary use of Facebook is its chat feature. Facebook chat consists of 3 main sections:
<ul>
<li>The sidebar friends list available on your "Home" page</li>
<li>The friends list always available on the bottom right portion of your screen</li>
<li>The chat box itself</li>
</ul>

Facebook has "Picturfied" the sidebar friends list and the chat box. Let's examine the changes in further detail. ]]></excerpt>
  </item>
  <item>
    <title>Why You Should Hire Professional Web Designers</title>
    <link>http://www.vertstudios.com/blog/why-you-should-hire-professional-web-designers/</link>
    <pubdate>Tue, 19 Oct 2010 03:23:15 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1570</guid>
    <description></description>
    <content><![CDATA[Due to the availability of information present on the web, many small business owners have decided to undertake the responsibility of creating a website for their business. On the surface, this approach makes sense to most business owners: Why hire professionals for $4,000 when you could read some tutorials yourself or buy a $20 template? While advocating the Do-It-Yourself approach to your business website seems like an efficient way to minimize cost and maximize revenue, <strong>poorly designed websites actually cost your company much more than professionally designed websites</strong>.
<img src="http://www.vertstudios.com/blog/wp-content/uploads/quick_fix1-300x230.jpg" alt="" title="quick_fix" width="300" height="230" class="aligncenter size-medium wp-image-1593" />

One of the easiest ways to lose a potential customer is a mediocre website. What does it actually mean to lose a potential customer? 

<h3>Loss of initial sales</h3>
If you fail to grab the interest and trust of a potential customer, they will not exchange their hard-earned money for your goods or services. If your website continually turns people off to your product, the amount of initial sales lost will begin to accumulate. Good websites convert visitors into customers, while mediocre websites simply cause the visitor to hit the back button and never return. Professional designers understand the form and function of the web and can implement visual strategies to increase conversions/sales. A website that fails to convert traffic into sales serves no purpose. 

<h3>Loss of sales to competitors</h3>
If a potential customer has a problem they need solved, they are going to pay someone to solve it. Your website is your first impression, and if the impression is unimpressive or uninspiring, potential customers will take their money elsewhere. These customers who have rejected your business as an option will not only take their money to your competitors, they will take their friend's and family's money to their competitors as well. The moment a potential customer turns away from your business due to its website, the website has just potentially cost you a generation's worth of loyal customers. 

<h2>The Time Cost of Designing a Website</h2>
Every business action taken has an implicit opportunity cost. Simply stated, each moment you spend doing something could be spent doing something else. If you are a manager, you should spend your time managing. If you are a painter, you should spend your time painting. If you are a music instructor, you should spend your time creating lessons for students. These painstakingly obvious truths stem from the economic idea of <a href="http://en.wikipedia.org/wiki/Comparative_advantage">comparative advantage</a>, or the idea that better products and services are created when individuals focus on their strong points. The web design process requires a considerable amount of time to execute correctly. Extensive testing, brainstorming, design, and development goes into the creation of effective websites. An accountant who makes a website, in most cases, simply becomes an accountant behind schedule with only an ineffective website to show for that lost time. When you undertake the creation of a website yourself without extensive experience, your business will suffers.

<h2>The Cost of an Ineffective Business Image</h2>
Sub-par websites, ranging from do-it-yourself projects to premium templates, all have one major similarity: their inability to fully capture the image of a business. One of the <a href="http://www.vertstudios.com/blog/5-principles-of-web-marketing/">5 Principles of Web Marketing</a> is knowing your customers and catering to their wants. A member of an exclusive country club wants to <i>feel</i> exclusive when he visits a website. A young child wants to <i>feel</i> happy when they visit <a href="http://www.nickjr.com/">Nick Jr.</a> online with their parents. A young adult wants to <i>feel</i> cool and relaxed when on <a href="http://www.facebook.com/">Facebook</a>. All these sites give their respective target audiences exactly what they want and expect. Crafting a design that encompasses the wants and expectations of your target audience takes immense skill, research, and experience. When customer expectations are satisfied, customer trust grows, leading to sales. However, when customer expectations are not met and that critical element of trust crumbles, customers become confused. 
<img src="http://www.vertstudios.com/blog/wp-content/uploads/canned-web-site1.jpg" alt="" title="canned-web-site" width="300" height="399" class="aligncenter size-full wp-image-1594" />
<b>Confused customers don't exist for very long</b>. 

Once a customer is unable to render the business image, they will take their business elsewhere.

<h2>Take care of your business: Hire a professional</h2>
A <a href="http://www.vertstudios.com/">professional web design company</a> can create a beautiful, functional website that lasts <i>as long as you need it to</i>. You may think you can't afford a professional website. The truth is you can't afford <i>NOT</i> to have a professional website. Settling for a mediocre website only hurts your business in the end. ]]></content>
    <excerpt><![CDATA[Due to the availability of information present on the web, many small business owners have decided to undertake the responsibility of creating a website for their business. On the surface, this approach makes sense to most business owners: Why hire professionals for $4,000 when you could read some tutorials yourself or buy a $20 template? While advocating the Do-It-Yourself approach to your business website seems like an efficient way to minimize cost and maximize revenue, <strong>poorly designed websites actually cost your company much more than professionally designed websites</strong>. ]]></excerpt>
  </item>
  <item>
    <title>What a Website&#039;s Price Says About its Design</title>
    <link>http://www.vertstudios.com/blog/what-a-websites-price-says-about-its-design/</link>
    <pubdate>Sat, 23 Oct 2010 17:52:47 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1602</guid>
    <description></description>
    <content><![CDATA[So you read our article on <a href="http://www.vertstudios.com/blog/why-you-should-hire-professional-web-designers/">why you should hire a professional web designer</a> and decided to examine the portfolios of local web designers. You call a few companies to get quotes, and the figures surprise you: The quotes range from $1,500 to $4,500 for the same project description! Why such a large difference? The answer lies in knowing exactly what a website's price says about its design. 

<h2>What is a $1,500 site?</h2>
What phrase comes to mind when you see a nice looking car being sold for $300 on the side of the road? 

<b>"What's wrong with it?"</b>

We are naturally skeptical when we see items of seemingly high value sold for low value. This is because we understand when something that should be expensive is sold for dirt cheap, the owner does not value the item as much as they want us to value it. If they don't value it, why should we? The exact same principle applies to web design. Unfortunately, most local companies have mastered the craft of selling a $300 "Hummer" to clients. A website around the $1,500 range implies at least one of the following defects.

<h3>Incompetence</h3>
An extremely low price can indicate an overall lack of confidence. The hourly rate of a web design company reflects how much they value their own work. Consider the following figures:
<ol>
<li>The average hourly rate of web design companies hovers between $80 and $100 an hour.</li>
<li>A standard informational site takes around 35 hours to complete when <b>started from scratch</b></li>
<li>a $1,500 website that takes 35 hours implies a 52% undercut of the market average</li>
</ol>
So why would a web design company, say ABC Software, decide to undercut the market by over 50%? Most web design companies have the same overhead, so most likely the reason for such a severe market undercut is the fact that ABC Software can't compete on quality. As stated in the 5 <a href="http://www.vertstudios.com/blog/5-principles-of-web-marketing/">web marketing principles</a>, a business that competes on price alone won't be around very long: There is always someone else willing to run themselves out of business faster.

<h3>Deception</h3>
On the opposite end of the spectrum, some web design companies may actually be "working" for an absurd $750 an hour! How is that? Some web design companies (<a href="http://www.vertstudios.com/blog/silversoap-media-web-design-tutorial/">even some local to Tyler, Texas</a>) claim to create fully custom websites, but they simply buy pre-designed and pre-coded templates, make minor adjustments, and resell them to you at up to a <b>2000% markup</b>! Their "skill-set" is composed of copying and pasting someone else's work. Why should you pay for that?

A popular template distribution website is <a href="http://themeforest.net/">ThemeForest.net</a>. The average price of a template ranges between $40 and $75. Not only do these templates misrepresent your business image, you could implement them yourself without the need for a $1,500 middle man. 

<h2>Protect Your Investment</h2>
<em>In the end, you will get what you pay for</em>. 

If you're going to spend money on a website at all, make sure that you do not compromise on quality. In order to protect your investment, educate yourself on the web design industry by <a href="http://www.vertstudios.com/blog/feed/">subscribing to the Vert Studios Blog</a>. We'll show you the tough questions you should ask your designer, ensuring you receive the highest quality product. 
]]></content>
    <excerpt><![CDATA[So you read our article on <a href="http://www.vertstudios.com/blog/why-you-should-hire-professional-web-designers/">why you should hire a professional web designer</a> and decided to examine the portfolios of local web designers. You call a few companies to get quotes, and the figures surprise you: The quotes range from $1,500 to $4,500 for the same project description! Why such a large difference? The answer lies in knowing exactly what a website's price says about its design. ]]></excerpt>
  </item>
  <item>
    <title>Facebook Clear Chat History Gone? SOLUTION!</title>
    <link>http://www.vertstudios.com/blog/facebook-clear-chat-history-gone-solution/</link>
    <pubdate>Mon, 25 Oct 2010 02:20:54 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1625</guid>
    <description></description>
    <content><![CDATA[Recently, Facebook has implemented some drastic <a href="http://www.vertstudios.com/blog/new-facebook-picture-chat/">changes to their chat interface</a>. Among these changes includes the apparent removal of the <strong>clear chat history feature</strong>. 

Then:
<img src="http://www.vertstudios.com/blog/images/facebook-clear-chat-history/before.png" alt="Facebook clear chat history" />

Now:
<img src="http://www.vertstudios.com/blog/images/facebook-clear-chat-history/after.png" alt="Facebook clear chat history gone" />

This has upset many Facebook chat users. However, the clear chat history is still available: <b>It's just poorly placed</b>.

<h2>To Access the Clear Chat History Feature</h2>
You must scroll all the way up to the top of the chat box. "Clear Chat History" can be seen in the top right corner.
<img src="http://www.vertstudios.com/blog/images/facebook-clear-chat-history/clear-chat-history.png" alt="Facebook clear chat history" />]]></content>
    <excerpt><![CDATA[Recently, Facebook has implemented some drastic <a href="http://www.vertstudios.com/blog/new-facebook-picture-chat/">changes to their chat interface</a>. Among these changes includes the apparent removal of the <strong>clear chat history feature</strong>. ]]></excerpt>
  </item>
  <item>
    <title>Silversoap Media Web Design Tutorial</title>
    <link>http://www.vertstudios.com/blog/silversoap-media-web-design-tutorial/</link>
    <pubdate>Thu, 28 Oct 2010 15:31:18 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1632</guid>
    <description></description>
    <content><![CDATA[Tired of your current job? Want to be a part of something new and cutting-edge? Look no further! 

The folks at <a href="http://www.silversoapmedia.com/" rel="nofollow">Silversoap Media</a> have employed a great system that yields <a href="http://www.vertstudios.com/blog/what-a-websites-price-says-about-its-design/">an insanely awesome ROI</a>!

After reading this simple step by step guide, you'll be able to set up your very own web design company. 

<h2>What you'll need</h2>
<ul>
<li>$55 Dollars on a debit/credit card</li>
<li><a href="http://www.youtube.com/watch?v=hq_PrxbnUkw">A will to survive</a></li>
</ul>

That's it! 

<h2>Getting Started</h2>
So now you're a professional web designer. Before you can start making loads of money, <b>you have to look the part</b>. But wait, what if you actually don't know how to design a website?

<h3>No problem! </h3>

You can be a professional web designer without knowing an ounce of design, thanks to our friends at <a href="http://themeforest.net">Themeforest.net</a>. Themeforest allows you to buy website templates, slap your logo on them, and call them your own creations. In school that was called cheating, but school never made anyone money, did it? 

<h3>Step 1: Buy yourself a template</h3>
Consider buying <a href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/full_screen_preview/74542">this template</a> that implores an awesome rotating box of pure-awesome. And it's only $40!
<a title="View the template on Themeforest.net" href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/74542"><img src="http://www.vertstudios.com/blog/images/silversoap/template-full.png" alt="Silversoap Media Template" /></a>

<h3>Step 2: Make extremely minor adjustments</h3>
You want people to think that this was created by your own craftsmanship. The best thing to do is make adjustments to the content, but leave the design the same. Let's take this step by step.

<h4>The Header</h4>
<h5>Original Template:</h5>
<a title="View the template on Themeforest.net" href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/74542"><img src="http://www.vertstudios.com/blog/images/silversoap/template-header.png" alt="Website Template" /></a>
<h5>With Adjustments:</h5>
<a title="View the template implementation at Silversoapmedia.com" href="http://www.silversoapmedia.com" rel="nofollow"><img src="http://www.vertstudios.com/blog/images/silversoap/silversoap-media-header.png" alt="Silversoap Media Web Design" /></a>

<h4>The Slider</h4>
<h5>Original Template:</h5>
<a title="View the template on Themeforest.net" href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/74542"><img src="http://www.vertstudios.com/blog/images/silversoap/template-slider.png" alt="Website Template" /></a>
<h5>With Adjustments:</h5>
<a title="View the template implementation at Silversoapmedia.com" href="http://www.silversoapmedia.com" rel="nofollow"><img src="http://www.vertstudios.com/blog/images/silversoap/silversoap-media-slider.png" alt="Silversoap Media Web Design" /></a>

<h4>The Content</h4>
<h5>Original Template:</h5>
<a title="View the template on Themeforest.net" href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/74542"><img src="http://www.vertstudios.com/blog/images/silversoap/template-content.png" alt="Website Template" /></a>
<h5>With Adjustments:</h5>
<a title="View the template implementation at Silversoapmedia.com" href="http://www.silversoapmedia.com" rel="nofollow"><img src="http://www.vertstudios.com/blog/images/silversoap/silversoap-media-content.png" alt="Silversoap Media Web Design" /></a>

<h4>The Footer</h4>
<h5>Original Template:</h5>
<a title="View the template on Themeforest.net" href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/74542"><img src="http://www.vertstudios.com/blog/images/silversoap/template-footer.png" alt="Website Template" /></a>
<h5>With Adjustments:</h5>
<a title="View the template implementation at Silversoapmedia.com" href="http://www.silversoapmedia.com" rel="nofollow"><img src="http://www.vertstudios.com/blog/images/silversoap/silversoap-media-footer.png" alt="Silversoap Media Web Design" /></a>

And finally we arrive at...
<h4>The Finished Product!!!</h4>
<a title="View the template implementation at Silversoapmedia.com" href="http://www.silversoapmedia.com" rel="nofollow"><img src="http://www.vertstudios.com/blog/images/silversoap/silversoap-media-full.png" alt="Silversoap Media Web Design" /></a>

That wasn't so bad! <del datetime="2010-10-28T19:46:42+00:00">Only 30 minutes</del>  and $40 have elapsed, and we already have a good looking website that establishes your credibility as a web designer. It's time for the next step.

<em>[editor's note: The fine people at <a href="http://www.l2-marketing.com" rel="nofollow">L2 Marketing</a>, frequent clients of Silversoap, were kind enough to call and tell us that we had no way of knowing how long the "design" process took them. This is true and so I have modified the post appropriately. I only know that it would have taken <em>us</em> 30 minutes - I have no way of knowing how long it took them...]</em>

<h3>Step 3: Market yourself as a professional</h3>
Convince family, friends, and business owners to visit your new website so they can see how great it looks. They'll surely be impressed by the 3D Flash box slider. After they've been wowed with your creativity, they'll surely tell <i>their</i> friends, family members, and business owners how awesome you are at web design. 

Pretty soon, someone with money will hear your name through the grapevine. At that point, they may commission you to create a website for them.

But wait, <strong>you still don't know how to actually design a website!</strong>

Relax! Themeforest has a large number of <a href="http://themeforest.net/category/">template categories</a> to choose from, ranging all the way from churches to food. 

<a title="View Template categories on Themeforest.net" href="http://themeforest.net/item/display-3-in-1-business-portfolio-wordpress-/74542"><img src="http://www.vertstudios.com/blog/images/silversoap/template-categories.png" alt="Website Template" /></a>

<h4>Step 4: Buy a template for your new client</h4>
Choose the template that best reflects your client's business image. If you don't know what a business image is or don't know how to determine an appropriate representation of one, that's alright. 

Suppose your client is in the catering industry. Simply look up the food category on Themeforest and find the template you like best. 

After you've purchased the template for $15, make the minor adjustments like you did to your own website, and slap the company's logo on it. 
<h5>Before:</h5>
<a title="View Template on Themeforest" href="http://themeforest.net/item/bon-apetit-restaurant-or-coffee-shop-template/70484"><img src="http://www.vertstudios.com/blog/images/silversoap/food-template-original.png" alt="Website Template" /></a><h5>After:</h5>
<a title="View Template Implementation at Corazoncateringtyler.com" href="http://corazoncateringtyler.com/"><img src="http://www.vertstudios.com/blog/images/silversoap/food-template-adjusted.png" alt="Corazon Catering Tyler" /></a>

A change in texture and some slight content adjustments should do the trick. 

So the client is extremely happy with the design. <del datetime="2010-10-28T19:46:42+00:00">Be sure not to disclose that the site is a template: This may cause the client to feel cheated. Why would you ever want to say something to make someone feel that way? </del>

<em>[editor's note: I've been told that the client we've used as an example was aware of the nature of the transaction. That's good at least. Now everyone else is too.]</em>

Chances are the template you purchased has been implemented hundreds of times by other aspiring web designers such as yourself. In the previous example, our food template has been implemented 158 times by other companies. 
<a title="View Template on Themeforest" href="http://themeforest.net/item/bon-apetit-restaurant-or-coffee-shop-template/70484"><img src="http://www.vertstudios.com/blog/images/silversoap/template-purchases.png" alt="Website Template" /></a>

Now it's time to move on to the final and most important step:

<h3>Step 5: Recover your investment</h3>
So far you've spent $55 on your company. It's time to recover that investment. Not everyone is tech-savvy enough to copy and paste someone else's code or Photoshop file. You should be properly compensated! Charge <a href="http://www.vertstudios.com/blog/what-a-websites-price-says-about-its-design/">between $1000-$1,500</a> for the website. This feels like a happy medium. It's not too cheap to where people think you didn't do any work (or that they could do it themselves). But it's also not too expensive, so more people can afford you. 

<h2>Congratulations, Web Designer!</h2>
You are now armed with all the knowledge you need to become a super awesome web designer! Simply repeat this set of processes over and over again until you dominate your local market. ]]></content>
    <excerpt><![CDATA[Tired of your current job? Want to be a part of something new and cutting-edge? Look no further! After reading this simple step by step guide, you'll be able to set up your very own web design company. ]]></excerpt>
  </item>
  <item>
    <title>Vert Studios Web Design Bookshelf</title>
    <link>http://www.vertstudios.com/blog/vert-studios-web-design-bookshelf/</link>
    <pubdate>Thu, 28 Oct 2010 08:32:09 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1720</guid>
    <description></description>
    <content><![CDATA[Justin and I both firmly advocate self-teaching as a necessity in the web design industry. No one is ever really finished learning web design or web development. Books serve as an excellent way to learn new concepts. Books are usually much more in-depth than a blog post or article, and also provide plenty of examples of real-world applications. 

For our fellow designers and developers, here is our web design/development bookshelf!

<h2>Beginner's Books</h2>
<ul>
<li><a href="http://www.amazon.com/gp/product/1590598393/ref=oss_product">Web Design and Marketing Solutions for Business Websites</a></li>
<li><a href="http://www.amazon.com/gp/product/0975841963/ref=oss_product">The Principles of Beautiful Web Design</a></li>
<li><a href="http://www.amazon.com/gp/product/0470096284/ref=oss_product">Web Design: The L Line</a></li>
</ul>


<h2>Design</h2>
<ul>
<li><a href="http://www.amazon.com/gp/product/1592534724/ref=oss_product">Layout Essentials: 100 Design Principles for Using Grids</a></li>
<li><a href="http://www.amazon.com/gp/product/3822840416/ref=oss_product">Web Design: Best Studios (Icons) </a></li>
<li><a href="http://www.amazon.com/gp/product/1592532616/ref=oss_product">Design Elements: A Graphic Style Manual</a></li>
<li><a href="http://www.amazon.com/gp/product/1592533876/ref=oss_product">Design Evolution: A Handbook of Basic Design Principles Applied in Contemporary Design</a></li>
<li><a href="http://www.amazon.com/gp/product/1568982496/ref=oss_product">Geometry of Design: Studies in Proportion and Composition</a></li>
<li><a href="http://www.amazon.com/gp/product/1592534473/ref=oss_product">Graphic Design, Referenced</a></li>
</ul>
<h2>Development</h2>
<ul>
<li><a href="http://www.amazon.com/gp/product/0764544055/ref=oss_product">Beginning JavaScript</a></li>
<li><a href="http://www.amazon.com/gp/product/0596802447/ref=oss_product">CSS: The Missing Manual</a></li>
<li><a href="http://www.amazon.com/gp/product/0596514085/ref=oss_product">JavaScript & DHTML Cookbook(2nd Edition)</a></li>
<li><a href="http://www.amazon.com/gp/product/0596005431/ref=oss_product">Web Database Applications with PHP & MySQL, 2nd Edition</a></li>
<li><a href="http://www.amazon.com/gp/product/0672325675/ref=oss_product">Sams Teach Yourself SQL in 10 Minutes (3rd Edition)</a></li>
<li><a href="http://www.amazon.com/gp/product/0135050707/ref=oss_product">Java Software Solutions: Foundations of Program Design</a></li>
<li><a href="http://www.amazon.com/gp/product/0538695641/ref=oss_product">Fundamentals of C++ and Data Structures: Advanced Course</a></li>
<li><a href="http://www.amazon.com/gp/product/1933988355/ref=oss_product">jQuery in Action</a></li>
<li><a href="http://www.amazon.com/gp/product/1590597273/ref=oss_product">Pro JavaScript Techniques</a></li>
<li><a href="http://www.amazon.com/gp/product/0131350641/ref=oss_product">Advanced Ajax: Architecture and Best Practices</a></li>
<li><a href="http://www.amazon.com/Beginning-PHP-MySQL-Commerce-Professional/dp/1590598644/ref=dp_ob_title_bk">Beginning PHP and MySQL E-Commerce: From Novice to Professional</a></li>
<li><a href="http://www.amazon.com/gp/product/0321450051/ref=oss_product">Problem Solving, Abstraction & Design Using C++</a></li>
</ul>
<h2>Marketing</h2>
<ul>
<li><a href="http://www.amazon.com/gp/product/0470567023/ref=oss_product">Smart Calling: Eliminate the Fear, Failure, and Rejection From Cold Calling</a></li>
<li><a href="http://www.amazon.com/gp/product/159555131X/ref=oss_product">Duct Tape Marketing: The World's Most Practical Small Business Marketing Guide</a></li>
<li><a href="http://www.amazon.com/gp/product/096673839X/ref=oss_product">The 33 Ruthless Rules of Local Advertising</a></li>
<li><a href="http://www.amazon.com/gp/product/0805078045/ref=oss_product">The Copywriter's Handbook, Third Edition: A Step-By-Step Guide To Writing Copy That Sells</a></li>
<li><a href="http://www.amazon.com/gp/product/1448614643/ref=oss_product">Get Found Now! </a></li>
<li><a href="http://www.amazon.com/gp/product/0132390027/ref=oss_product">Principles of Marketing, 12th Edition</a></li>
<li><a href="http://www.amazon.com/gp/product/0470224487/ref=oss_product">Search Engine Optimization: Your Visual Blueprint for Effective Internet Marketing</a></li>
</ul>
<h2>Photography</h2>
<ul>
<li><a href="http://www.amazon.com/gp/product/1552636143/ref=oss_product">Photography and the Art of Seeing</a></li>
<li><a href="http://www.amazon.com/gp/product/0321227999/ref=oss_product">How to Wow: Photoshop for Photography</a></li>
</ul>
<h2>Business</h2>
<ul>
<li><a href="http://www.amazon.com/gp/product/0470110120/ref=oss_product">How to Measure Anything: Finding the Value of "Intangibles" in Business </a></li>
</ul>]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Introduction to Logic: Part 1 – Negation, AND, and OR Statements</title>
    <link>http://www.vertstudios.com/blog/introduction-logic-part-1-negation-and-or-statements/</link>
    <pubdate>Mon, 01 Nov 2010 00:28:17 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1743</guid>
    <description></description>
    <content><![CDATA[Decision making remains an integral portion of even the most simple web applications. In order to design a program that provides accurate information, it's imperative that we web developers provide the computer with accurate commands. In this series of tutorials entitled "Introduction to Logic", we will dissect logical operators and learn how to properly apply them to our programs. This tutorial will define the three most basic logical operators: Negation, Conjunction, and Disjunction. 

<h2>Statements</h2>
Before we begin with the explication of logic, we must note that logic does not tolerate ambiguity or subjectivity. Logic is composed of a series of statements, where statement is defined as a sentence that can evaluate to true or false. 

Examples of statements include:
<ul>
<li>2 + 3 = 12 (Note that something not true can still be a statement)</li>
<li>The capital of Texas is Austin</li>
<li>3 is a prime number</li>
</ul>

Examples of non statements include:
<ul>
<li>Today is a pretty day (subjective)</li>
<li>Justin's beard is quite handsome (subjective)</li>
</ul>

<h2>Negation</h2>
For a statement p, the <em>negation of p</em> (denoted !p) is the logical opposite of p. The statement !p can be read "not p". 

<h3>Examples</h3>
p: 2 + 3 = 5
!p: 2 + 3 &ne; 5

p: Austin is the capital of Texas
!p: Austin is not the capital of Texas

Some examples using <a href="http://en.wikipedia.org/wiki/De_Morgan's_laws">De Morgan's laws</a>:
p: 5 - 1 &gt; 2
!p: 5 - 1 &le; 2

p: 2 + 8 &ge; 10
!p: 2 + 8 &lt; 10

<h3>Truth Table</h3>
Truth tables are tools used to view the possible logical outcomes of every possible combination of statements. In truth tables, T stands for a true statement while F stands for a false statement. 

The truth table for negation is as follows:
<table>
<tr>
<th>p</th>
<th>!p</th>
</tr>
<tr>
<td>T</td>
<td>F</td>
</tr>
<tr>
<td>F</td>
<td>T</td>
</tr>
</table>

As described earlier, the negation of a statement has the opposite truth value of the original statement. 

<h2>Conjunction (AND) Statements</h2>
The <em>conjunction</em> of statements p and q, denoted p &amp;&amp; q, is read "p AND q", and is true only when p and q are both true. 

<h3>Examples</h3>
p: 2 + 3 = 5
q: The earth is larger than the Moon
p &amp;&amp; q: 2 + 3 = 5 and the earth is larger than the moon. 

<b>p &amp;&amp; q is true.</b>

p: Bicycles have three wheels
q: 5 &lt; 10
p &amp;&amp; q: Bicycles have three wheels and 5 &lt; 10

<b>p &amp;&amp; q is false since Bicycles do not have three wheels.</b>

<h3>Truth Table</h3>
<table>
<tr><th>p</th><th>q</th><th>p&amp;&amp;q</th></tr>
<tr><td>T</td><td>T</td><td>T</td></tr>
<tr><td>T</td><td>F</td><td>F</td></tr>
<tr><td>F</td><td>T</td><td>F</td></tr>
<tr><td>F</td><td>F</td><td>F</td></tr>
</table>

As you can see, the only instance in which p &amp;&amp; q is true is when p and q are both individually true. 

<h2>Disjunction (OR) Statements</h2>
The <em>disjunction</em> of statements p and q, denoted p || q, is read "p OR q", and is true when at least one of p or q is true. 

<h3>Examples</h3>
p: 2 + 3 = 5
q: 5 + 3 = 2
p || q: 2 + 3 = 5 OR 5 + 3 = 2

<b>p || q is true since at 2 + 3 = 5.</b>

p: Africa is a country
q: 1 &gt; 2
p || q: Africa is a country or 1 &gt; 2. 

<b>p||q is false since neither p nor q is true</b>

p: Tyler is in Texas
q: Texas is in the United States
p || q: Tyler is in Texas or Texas is in the United States

<b>p || q is true since Tyler is in Texas and Texas is in the United States</b>

The previous example brings up an important point about the disjunction operator. This particular "or" is known as an "and/or", in contrast to an "exclusive or" (xor for short). With the disjunction operator, if p &amp;&amp; q is true, p || q is also true. However, in an "exclusive or", p xor q evaluates to true only when there exists at least one statement that is true but p&amp;&amp;q is false.

<h3>Truth Table</h3>
<table>
<tr><th>p</th><th>q</th><th>p || q</th></tr>
<tr><td>T</td><td>T</td><td>T</td></tr>
<tr><td>T</td><td>F</td><td>T</td></tr>
<tr><td>F</td><td>T</td><td>T</td></tr>
<tr><td>F</td><td>F</td><td>F</td></tr>
</table>

As you can see, the only instance in which p || q is false is when p and q are both individually false.  

]]></content>
    <excerpt><![CDATA[Decision making remains an integral portion of even the most simple web applications. In order to design a program that provides accurate information, it's imperative that we web developers provide the computer with accurate commands. In this series of tutorials entitled "Introduction to Logic", we will dissect logical operators and learn how to properly apply them to our programs. This tutorial will define the three most basic logical operators: Negation, Conjunction, and Disjunction. ]]></excerpt>
  </item>
  <item>
    <title>Yelp Hurting Local Businesses with Incorrectly Associated Reviews</title>
    <link>http://www.vertstudios.com/blog/yelp-hurting-local-businesses-incorrectly-associated-reviews/</link>
    <pubdate>Tue, 02 Nov 2010 00:19:07 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1768</guid>
    <description></description>
    <content><![CDATA[<h2>UPDATE: March 21, 2011</h2>
If you're willing to legally accuse the content creator (In this case Yelp) of defamation, Google has now made it easier to <a href="http://www.google.com/support/bin/request.py?contact_type=lr_courtorder">submit a court order</a> to remove particular pages from the index. For more details, see <a href="http://www.marketingpilgrim.com/2011/03/remove-negative-pages-google.html">Marketing Pilgrim</a>.
<div class="hr"></div>

<a href="http://www.yelp.com/" rel="nofollow">Yelp.com</a> is one of the most well known online business directories. Yelp has established a reputation as a consumer outlet due to the extensive number of business reviews their users provide on a daily basis. As stated on Yelp's homepage,
<blockquote>"Yelp is the fun and easy way to find and talk about great (and not so great) local businesses"</blockquote>

Consequently, Google Places has come to trust Yelp as an authority, and often implements business reviews from Yelp onto a business' <a href="http://www.vertstudios.com/blog/seo-google-local-places/">Google Places</a> page. 

While I am all for freedom of speech and the power of the consumer, a portion of Yelp's monetization strategy has proven to be not only illogical, but also damaging to innocent business owners. 

<h2>How Yelp makes money</h2>
Yelp makes money in two simple manners. First, they offer featured listings in their business directory. Business that wish to appear above local competitors can pay to do so. 

Secondly, and the origins of the foreshadowed mishapped, Yelp relies on high amounts of traffic to attract advertisers. Higher amounts of traffic naturally yields a higher bid between companies wishing to advertise. While there is absolutely nothing wrong with this business model, questions start to rise when you're willing to hurt the small businesses that form the very foundation of your company in order to gain more traffic. 

<h2>Yelp refuses to delete closed business listings</h2>
In order to inflate their numbers, Yelp does not remove the listings of companies that have been declared out of business. Why display the address, phone number, and reviews of a company that no longer exists? The only possible justification is to inflate the traffic statistics. Deleting a listing at all means a drop in traffic. Now multiply this by every single business that has gone under since Yelp's inception in 2004, and you're looking at a significant amount of traffic decrease. As described before, traffic directly relates to advertising revenue. It's understandable from an economic perspective as to <i>why</i> Yelp keeps these listings active. However, this approach is leading to an extremely negative consequence that Yelp does not seem to care about.

<h2>Google can't determine a closed business from an open one</h2>
Try to put yourself in the shoes of an algorithm designer. When viewing the HTML of a business website, what could possibly let you know that a business has closed? The phrase "This business is closed" easily could appear within a review planted by a competitor with the sole intent of throwing off Google's indexing of the site. Google does its best to prevent competing companies from damaging each others online presence, so this idea is a no-go.

One idea is looking for the phrase "closed" in a heading or title tag, but what if the name of the business in question involved the word "Closed"? How could you differentiate that "closed" from "closed" meaning out of business? It's extremely difficult to automate the idea of determining an open business from a closed one, and so far Google has not implemented such a feature. Thus, the most consistent way to associate a review with a Google Place listing is through physical address and phone number citations.

<h3>Why does this matter?</h3>
So what, Yelp doesn't want to delete the listings of closed businesses. What's the harm in them getting a little more traffic? The answer lies in the punch line of <a href="http://www.youtube.com/watch?v=7CU-poRQPr0">Demetri Martin</a>, one of my favorite comedians: "<strong>Location, location, location</strong>". The fact that Google uses building addresses to associate a web page to a Google Place profile can cause discrepancies. 

The location of a business that went under or was bought out could easily belong to a current business. 

<h4>Consider the following (real life) scenario</h4>

Let's say a restaurant was run by extremely incompetent management from 2005 to 2008. The users on Yelp really let the guy have it, bringing his restaurant rating down to 2 out of 5 stars (and rightfully so). Due to the poor quality of food and customer service, the business eventually went under. However, an entrepreneur decided to buy out the location of the bad restaurant and start his own restaurant. People loved the service and the food. So much, in fact, that his signature dish was featured in a national food publication. The guy really turned the place around.

However, due to the fact that Yelp and similar directories choose to keep closed business listings active, Google began to associate these negative reviews to the new restaurant. While most of the reviews between 2009 and 2010 were 5/5 stars, the numerous 1 and 2 star ratings from business review sites brought the new restaurants average rating down to 2.5 stars. Whenever users conducted local searches for businesses in his niche, his company would come up with significantly lower ratings than his competitors. The entrepreneur was paying the price for someone else's incompetency. 

While Google's citation standard is not perfect, it easily remains the current most consistent way to associate a website with a Google Place page. Addresses and Phone Numbers simply do not change that often. Local Search results frequently determine which companies get a searchers business, since reviews and location can be viewed right on the first search result page. Google's citation standard is extremely utilitarian. For the most part, it works fine.

<h2>Yelp doesn't give a damn</h2>
So the entrepreneur in the previous scenario came to us for help. I kindly emailed Yelp the following:
<blockquote>
To whom it may concern,

My name is Joseph McCullough, and I am representing (new business) of (business location).

(New business) now operates in the location where (old business) used to reside. As can be seen by the yelp listing, (old business) is out of business. However, the negative reviews (old business) recevied are being attributed to (new business) on Google since the addresses are the same. Since (old business) is closed and its listing is negatively affecting a respected establishment, I'm asking you to please remove the listing from your index.

Thank you so much!

Feel free to email me at joseph@vertstudios.com or call at 903 330 5057</blockquote>

Yelp's Response:
<blockquote>
Joseph-

Unfortunately, we cannot control what gets displayed on Google search. As such, we recommend you contact them directly regarding this issue. 
</blockquote>

<b>UPDATE*</b>
I sent a short email in response to the Yelp representative's rebuke. 
<blockquote>
Yes you can [control what gets displayed on Google search], by removing an irrelevant listing for a company no longer in business. It would reflect extremely highly on yelp if you would understand this simple situation.
</blockquote>

The response from Yelp:
<blockquote>
Unfortunately, we don't remove listings of closed businesses from our site. This kind of information is publicly available and its use is protected under the law. However, closed business listings eventually stop appearing in our search results, over time.
</blockquote>

Essentially: "Too bad, we can do what we want" 
<h2>Closing thoughts</h2>
It's always disappointing to see a business fail to correct a simple issue simply because they "<i>don't have to</i>". Yelp could easily remove the address and phone number of a closed business (who needs to know how to get to a closed business anyway? Or who plans on calling a company out of business?). However, they choose to keep the citation up in order to score more traffic and woo advertisers, with the justification that "We don't determine what shows up on Google." Actually, Yelp, you do.

<strong>What do you feel the best course of action should be for Yelp, Google, or the unfairly damaged business owner?</strong>
]]></content>
    <excerpt><![CDATA[In order to inflate their numbers, Yelp does not remove the listings of companies that have been declared out of business. Why display the address, phone number, and reviews of a company that no longer exists? The only possible justification is to inflate the traffic statistics. Deleting a listing at all means a drop in traffic. Now multiply this by every single business that has gone under since Yelp's inception in 2004, and you're looking at a significant amount of traffic decrease. As described before, traffic directly relates to advertising revenue. It's understandable from an economic perspective as to <i>why</i> Yelp keeps these listings active. However, this approach is leading to an extremely negative consequence that Yelp does not seem to care about.]]></excerpt>
  </item>
  <item>
    <title>Top 5 SEO Resources for Tyler Texas Businesses</title>
    <link>http://www.vertstudios.com/blog/top-5-seo-resources-tyler-texas-businesses/</link>
    <pubdate>Tue, 09 Nov 2010 01:18:04 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1788</guid>
    <description></description>
    <content><![CDATA[SEO is not magic, no matter how much some SEO scammers attempt to convince you otherwise. Search Engine Optimization is simply the implementation of the scientific method in relation to a search engine's algorithm: Hypothesize, experiment, analyze, conclude, and repeat until you find what the search engines like. However, unless you work as a full time SEO, you most likely don't have the time to experiment with on-site modifications and link building methods. In all honesty, one only needs very basic knowledge of search engine optimization techniques to rank above local Tyler competitors. Furthermore, knowing the basics of SEO prevents you from being scammed by shady SEO firms. To arm you with the basics of SEO, we've compiled a list of our 5 favorite SEO resources. 

<h2>1) SEOMoz</h2>
<a href="http://seomoz.org"><img src="http://vertstudios.com/blog/images/seo-resources/seomoz.png" alt="SEOmoz" /></a>
SEOMoz not only sports one of the most comprehensive <a href="http://guides.seomoz.org/beginners-guide-to-search-engine-optimization">Beginner's Guide to SEO</a>, they have some of the best SEO Software on the market. An invaluable tool that I use on a daily basis is the <a href="http://www.opensiteexplorer.org/">SEOMoz Open Site Explorer</a>, a tool that lets you analyze the backlinks of your competitors. Additionally, SEOMoz updates <a href="http://www.seomoz.org/blog">their SEO blog</a> frequently with extremely useful SEO strategies. SEOMoz sports an extremely enthusiastic community that shares ideas via <a href="http://www.seomoz.org/ugc">YOUmoz</a>. SEOMoz also offers a $99/month PRO membership option, which grants you access to exclusive content, tools, and best of all, the ability to ask SEO experts questions about your direct situation.  
<h2>2) SEOBook</h2>
<a href="http://www.seobook.com"><img src="http://vertstudios.com/blog/images/seo-resources/seobook.png" alt="SEOBook" /></a>
SEOBook, run by Aaron Wall, provides brilliant insights in the world of SEO. Aaron Wall specializes in applying economics and business principles to Google's search algorithm. Not only does Aaron cover the "how" of SEO through the <a href="http://www.seobook.com/blog">SEOBook blog</a>, but explains the "why" with plenty of data and deductive reasoning. Aaron, while happily working for ungodly amounts per hour consulting the largest firms, is still humble and kind enough to take the time to answer the questions/comments of everyday people wanting to learn SEO. If you're wanting to learn the basics of SEO, SEOBook is a great resource. On the opposite side of the spectrum, SEOBook provides the most exclusive tools and content for advanced SEOs. The premium membership costs $300/month, but if you understand the value of search data and the SEOBook forum, then you'll know $300/month is completely worth it.

<h2>3) Conversation Marketing</h2>
<a href="http://www.conversationmarketing.com"><img src="http://vertstudios.com/blog/images/seo-resources/conversation-marketing.png" alt="Conversation Marketing" /></a>
Can something like SEO be fun? Can something like SEO be funny also? I had my doubts before I stumbled upon Ian Lurie of <a href="http://www.conversationmarketing.com/">Conversation Marketing</a>. Not only does Ian provide great SEO techniques, he entertains you while doing it. Cynical, grumpy, and insightful Ian Lurie provides his audience with great tips concerning SEO and Social Media. Ian has an exclusive content package of his own called <a href="http://fatfreeguide.com/join/?aff=77">The Fat Free Guide</a> (affiliate). Currently, this content package is the <b>most cost effective package</b> on the market. It currently goes for only $7/month, and includes tips on copywriting, link building, on-site SEO, Google Analytics, and Q&A Credits with the big man himself.

<h2>4) SEOChat</h2>
<a href="http://www.seochat.com"><img src="http://vertstudios.com/blog/images/seo-resources/seo-chat.png" alt="SEO Chat" /></a>
<a href="http://www.seochat.com">SEOChat</a> easily contains more SEO content than any other site on the web. SEOChat boats an <a href="http://forums.seochat.com/">extremely active SEO forum</a> where you are free to ask questions at no cost. Be warned: since the advice on the SEOChat forum is free, you may very well get what you pay for. SEOChat also provides a substantial number of articles and tools for you to experiment with. By signing up for the newsletter, you'll be presented with a weekly SEO article, keeping you informed of any major changes in the world of SEO.

<h2>5) Success Works SEO Copywriting</h2>
<a href="http://www.seocopywriting.com"><img src="http://vertstudios.com/blog/images/seo-resources/success-works.png" alt="SEO Copywriting" /></a>
Heather Lloyd-Martin of <a href="http://www.seocopywriting.com/blog/">Success Works</a> is easily one of the most charismatic figures in Search Engine Optimization. As you delve more into SEO, you will begin to see the clear overlap between keyword optimization and copywriting. Copy that doesn't sell and keywords that don't bring paying visitors are equally useless. Heather teaches you how to find that perfect balance between pleasing people and pleasing search engines, helping you maximize traffic and conversions. Additionally, Heather's <a href="http://twitter.com/heatherlloyd">Twitter feed</a> has proven time after time to be the most useful 140 characters I see all day. For business owners aspiring to run their company blog effectively, Heather offers an <a href="http://www.seocopywriting.com/training/subscription-based-online-seo-copywriting-classes/">SEO Copywriting course</a> to help you write copy that sells to users <i>and</i> search engines. 

We've found these resources to be invaluable, and we hope you find them equally useful. ]]></content>
    <excerpt><![CDATA[SEO is not magic, no matter how much some SEO scammers attempt to convince you otherwise. Search Engine Optimization is simply the implementation of the scientific method in relation to a search engine's algorithm: Hypothesize, experiment, analyze, conclude, and repeat until you find what the search engines like. However, unless you work as a full time SEO, you most likely don't have the time to experiment with on-site modifications and link building methods. In all honesty, one only needs very basic knowledge of search engine optimization techniques to rank above local Tyler competitors. Furthermore, knowing the basics of SEO prevents you from being scammed by shady SEO firms. To arm you with the basics of SEO, we've compiled a list of our 5 favorite SEO resources. ]]></excerpt>
  </item>
  <item>
    <title>The Fear of Knowledge as applied to Web Development</title>
    <link>http://www.vertstudios.com/blog/fear-knowledge-applied-to-web-development/</link>
    <pubdate>Sun, 21 Nov 2010 00:10:07 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1850</guid>
    <description></description>
    <content><![CDATA[Hi, I'm Joseph.

And I just overcame a huge problem. 

You see, my entire career used to span around a love/hate relationship I couldn't seem to alleviate. I lived and breathed web development. I read, wrote, and occasionally dreamed about code. However, the reading portion of my web development passion began to gradually induce a sense of anxiety. Each article I read about a cutting edge jQuery plugin or PHP library began to make me increasingly uncomfortable. Innovation was something I loved!...or so I thought. I should have been <b>excited</b> over the fact that someone could create an infinite carousel <a href="http://joshcaza.com/jquery-infinite-carousel/">with only 5 lines of code</a> when my version took 190 lines of code. I should've been <b>excited</b> over the news of an Apache server alternative <a href="http://blogs.sitepoint.com/2010/11/19/lightning-fast-wordpress-with-php-fpm-and-nginx/">by name of nginx</a>. So why, instead of being excited, was I afraid? 

<h2>I had an Inordinate Fear of Knowledge</h2>
Doesn't make sense, right? Why would a developer not go <i>absolutely nuts</i> over the latest and greatest innovations in web technology? Why would a developer intentionally skip over Chris Coyier and SitePoint? Why would a developer completely ignore the existence of CSS3? 

<h3>The web was expanding, but I felt imaginary walls closing in</h3>

Our minds deal with stress in peculiar ways. Sometimes our minds "delete" memories of traumatic events - a process termed "repression". Sometimes our own guilt causes us to emphasize faults in other people - a process termed "displacement". The mind seems to shift perception in a polar-opposite direction to help us cope. In my case, I didn't want to feel obsolete. A sudden influx of client work caused me to fall behind with my RSS feed. By the time I emerged from the pile of work, I immediately felt overwhelmed with the amount of innovation and progress made over such a short period of time. I simply could not mentally cope with the amount of material I needed to learn to catch up with the web community.

<h3>I felt antiquated, obsolete - everything I hated</h3>

A mind that hates itself is obviously not healthy, so my instincts came to the rescue. To cope with my insecurities, I began subconciously ignoring any innovations other than my own. Cutting-edge PHP libraries and <a href="http://facedetection.jaysalvat.com/">a new jQuery facial recognition algorithm</a> filtered through my mind as utter bullshit. I became increasingly elitist. Instead of taking delight in self-improvement, I began to take joy in demoralizing those I considered inferior or useless. I became an internet bully. But it helped me cope. 

In the movies, usually a protagonist comes to accept their past after a specific incident triggers an epiphany. 

<h3>While I, on the other hand, simply had a random <br />"Oh shit" moment. </h3>

Oh shit, as in "this plugin is awesome!"
Oh shit, as in "Man, that slider would've been so much easier had I known about this technique"

And most importantly,
Oh shit, as in "<b>Enjoy what you can learn, when you can learn it</b>."

You can't learn everything, and that's really okay. Really. In fact, if you spent all your time learning, you'd never spend any time doing. And knowledge without application is High School. ]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Do You Know What You’re Using?</title>
    <link>http://www.vertstudios.com/blog/do-you-know-what-youre-using/</link>
    <pubdate>Fri, 26 Nov 2010 18:04:19 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1896</guid>
    <description></description>
    <content><![CDATA[Due to frequent crashes exhibited  by <a href="http://notepad-plus-plus.org/">Notepad++</a>, I've decided to try out another text editor named <a href="http://www.activestate.com/komodo-edit">Komodo</a>. Download and installation was easy. I thought about jumping right in and working on some ongoing projects. I mean it's a text editor, right? What's to learn or acclimate to? It was at this moment that I realized

<h2>We don't fully utilize the tools available to us</h2>
Most likely I would have had a satisfactory experience with Komodo without reading its documentation.  However, reading Komodo's documentation helped me clearly understand what it had to offer. Instead of having to adapt Komodo's features over time, I can fully implement Komodo's productivity-enhancing features into my workflow from the very beginning. That's the difference between a satisfactory experience and an <b>exceptional</b> experience. 

This epiphany on its own is not terribly insightful. However, when you apply this idea to the web development world, a more significant epiphany arises. 
<h3>We don't fully utilize programming languages</h3>
Why? Because we don't know what they have to offer. 

In today's fast-paced and beginner-friendly web development world, people tend to learn programming languages in code snippets. We come across a problem, Google it, copy and paste the solution, and ask questions later. While this practice may be a necessary evil when it comes to meeting deadlines, Google should not be a developer's first instinct. 

A large number of problems that ended up being Google'd could have been easily solved by the developer if they knew what functions they had in the arsenal. While I'm not discouraging developers to seek help when needed, it's important to note that there's almost always a better way to solve any problem. YOU could be the one to find that more elegant solution for the world to use. 

<h3>A simple challenge</h3>
Instead of reading A List Apart, Smashing Magazine, Mashable, etc, take a week to actually read through the official documentation of the languages that you use. Learn the ins and outs of the data structures, and read through every single function description. I guarantee you that you'll come across extremely useful functions you never knew existed. ]]></content>
    <excerpt><![CDATA[In today's fast-paced and beginner-friendly web development world, people tend to learn programming languages in code snippets. We come across a problem, Google it, copy and paste the solution, and ask questions later. While this practice may be a necessary evil when it comes to meeting deadlines, Google should not be a developer's first instinct. ]]></excerpt>
  </item>
  <item>
    <title>PHP Regex Class</title>
    <link>http://www.vertstudios.com/blog/php-regex-class/</link>
    <pubdate>Wed, 01 Dec 2010 05:35:19 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1934</guid>
    <description></description>
    <content><![CDATA[(Interested in client-side validation? Check out our <a href="http://www.vertstudios.com/blog/javascript-regex-class/">JavaScript Regex Class!</a>)

<h2>PHP Regex Class</h2>
The PHP Regex class provides methods for validating data. Currently, the class contains the following patterns (denoted as types in the class methods):
<ul>
<li>int: Integer</li>
<li>float: Float</li>
<li>mailstrings: Mail Strings (cc: to: bcc:, etc)</li>
<li>email: Email</li>
<li>html: HTML</li>
<li>url: URL</li>
<li>zip: Zip Code</li>
<li>alpha: Alphabetic Character</li>
<li>num: Number</li>
<li>bbcode: BB Code</li>
<li>usphone: Phone</li>
<li>usaddress: US Street Address</li>
<li>name: Name</li>
<li>fullname: Full Name(must be at least a first and a last name)</li>
<li>lastname: Last Name(allows for numerical suffixes such as "2nd")</li>
</ul>

<h3><a href="https://github.com/joequery/PHP-Regex-Class">Download the source on GitHub</a></h3>

The class is written so that you can easily add your own regular expression patterns. 

It's important to note that the Regex class consists of static methods. That means you do not need to create an instance of the Regex class to use the methods.

The class contains 4 methods as part of the main interface:

<h3>Regex::is($type,$value)</h3>
<b>Description</b>: returns boolean true if $value is an exact match with the pattern associated with $type. False if otherwise. 
<b>Examples:</b>
<pre class="prettyprint">
&lt;?php
echo Regex::is(&quot;email&quot;,&quot;hi@vertstudios.com&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::is(&quot;int&quot;,&quot;A 100 dollar bill&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Not Found
echo Regex::is(&quot;usphone&quot;,&quot;903-920-9514&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::is(&quot;zip&quot;,&quot;75701&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::is(&quot;float&quot;,57.10)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
?&gt;
</pre>

<h3>Regex::has($type,$value)</h3>
<b>Description</b>: returns boolean true if $value contains at least one instance of the pattern associated with $type. False if otherwise. 
<b>Examples:</b>
<pre class="prettyprint">
&lt;?php
echo Regex::has(&quot;email&quot;,&quot;our email: hi@vertstudios.com&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::has(&quot;int&quot;,&quot;A 100 dollar bill&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::has(&quot;html&quot;,&quot;Jolly Jolly&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Not Found
echo Regex::has(&quot;name&quot;,&quot;#@#$! Arthur&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::has(&quot;float&quot;,&quot;I'm tired. Aren't you?&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Not Found
?&gt;
</pre>

<h3>Regex::hasAny($types,$value)</h3>
$types is a string with various pattern types separated by a comma. Ex: "html,bbcode,int"

<b>Description</b>: returns boolean true if $value contains at least one instance of any pattern associated with $types. False if otherwise. 
<b>Examples:</b>
<pre class="prettyprint">
&lt;?php
echo Regex::hasAny(&quot;email,usphone&quot;,&quot;our email: hi@vertstudios.com&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::hasAny(&quot;html,bbcode&quot;,'&lt;a href=&quot;lolspam.html&quot;&gt;oeutaoeuaoeu&lt;/a&gt;')? &quot;Found&quot; : &quot;Not Found&quot;; //Found
echo Regex::hasAny(&quot;html,int,float&quot;,&quot;Jolly Jolly&quot;)? &quot;Found&quot; : &quot;Not Found&quot;; //Not Found
?&gt;
</pre>
(Note the convenient spam validation of a textarea form submission using Regex::hasAny("html,bbcode,mailstrings", $textarea) )

<h3>Regex::getDescription($type)</h3>
<b>Description</b>: returns a string describing $type

You'll see in the <a href="http://www.vertstudios.com/blog/src/php/regexclass.txt">source code</a> that there are two private arrays. $pattern takes the form "type" => "regexpattern", while $description takes the form "type" => "description". $description is where these strings are pulled from.*** 

If you use this class for form processing, it will be useful to get a nicely formatted description of the pattern type. 
<b>Example:</b>
<pre class="prettyprint">
$myform = array(&quot;name&quot; =&gt; &quot;Joseph&quot;, &quot;email&quot; =&gt; &quot;Joseph@@vertstudios.com&quot;,
                 &quot;usphone&quot; =&gt; &quot;9033305057&quot;, &quot;zip&quot; =&gt; &quot;75AA8&quot;);

//Iterate through the &quot;form&quot; and output which values are valid.
foreach($myform as $type =&gt; $value)
{
    echo Regex::getDescription($type) . &quot; is &quot; .
        (Regex::is($type,$value) ? &quot;valid&quot; : &quot;invalid&quot;) . &quot;&lt;br /&gt;&quot;;
}
//Output:
//Name is valid
//Email is invalid
//Phone is valid
//Zip Code is invalid
</pre>
(***One could argue that it would make more sense to have the $pattern and $description arrays combined into a multidimensional array, but I felt that it was simply easier to keep the arrays separate and update the two arrays as needed. )

<h3><a href="https://github.com/joequery/PHP-Regex-Class">Download the source on GitHub</a></h3>

<h4>Updates:</h4>
Discovered that if a type not found in the $pattern array was passed into a method, a match would always be found. This has been fixed. 

If you find any bugs or have any questions/suggestions, let us know in the comments below! ]]></content>
    <excerpt><![CDATA[The PHP Regex class provides methods for validating data.]]></excerpt>
  </item>
  <item>
    <title>JavaScript Regex Class</title>
    <link>http://www.vertstudios.com/blog/javascript-regex-class/</link>
    <pubdate>Tue, 07 Dec 2010 07:21:45 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=1985</guid>
    <description></description>
    <content><![CDATA[The Vert Studios <a href="http://www.vertstudios.com/blog/php-regex-class/">PHP Regex Class</a> comes to JavaScript! 

<b>Key Differences:</b>
While the method calls are identical between the PHP and JavaScript Regex classes (barring the static:: operator), the construction of the methods were quite different. JavaScript and PHP parse escape characters differently. 

<h2>JavaScript Regex Class</h2>
The JavaScript Regex class provides methods for validating data. Currently, the class contains the following patterns (denoted as types in the class methods):
<ul>
<li>int: Integer</li>
<li>float: Float</li>
<li>mailstrings: Mail Strings (cc: to: bcc:, etc)</li>
<li>email: Email</li>
<li>html: HTML</li>
<li>url: URL</li>
<li>zip: Zip Code</li>
<li>alpha: Alphabetic Character</li>
<li>num: Number</li>
<li>bbcode: BB Code</li>
<li>usphone: Phone</li>
<li>usaddress: US Street Address</li>
<li>name: Name</li>
<li>fullname: Full Name(must be at least a first and a last name)</li>
<li>lastname: Last Name(allows for numerical suffixes such as "2nd")</li>
</ul>

<h3><a href="http://vertstudios.com/blog/src/js/regex.txt">Download the source code</a></h3>

The class is written so that you can easily add your own regular expression patterns. 

It's important to note that the Regex class consists of static methods. That means you do not need to create an instance of the Regex class to use the methods.

The class contains 4 methods as part of the main interface:

<h3>Regex.is(type,value)</h3>
<b>Description</b>: returns boolean true if value is an exact match with the pattern associated with type. False if otherwise. 
<b>Examples:</b>
<pre class="prettyprint">
        console.log(Regex.is(&quot;email&quot;,&quot;hi@vertstudios.com&quot;));
        console.log(Regex.is(&quot;int&quot;,&quot;A 100 dollar bill&quot;));
        console.log(Regex.is(&quot;usphone&quot;,&quot;903-920-9514&quot;));
        console.log(Regex.is(&quot;zip&quot;,&quot;75701&quot;));
        console.log(Regex.is(&quot;float&quot;,57.10));
        
        //Output:
        //true
        //false
        //true
        //true
        //true
</pre>

<h3>Regex.has(type,value)</h3>
<b>Description</b>: returns boolean true if value contains at least one instance of the pattern associated with type. False if otherwise. 
<b>Examples:</b>
<pre class="prettyprint">
        console.log(Regex.has(&quot;email&quot;,&quot;our email: hi@vertstudios.com&quot;));
        console.log(Regex.has(&quot;int&quot;,&quot;A 100 dollar bill&quot;));
        console.log(Regex.has(&quot;html&quot;,&quot;Jolly Jolly&quot;));
        console.log(Regex.has(&quot;name&quot;,&quot;#@#$! Arthur&quot;));
        console.log(Regex.has(&quot;float&quot;,&quot;I'm tired. Aren't you?&quot;));
        
        //Output:
        //true
        //true
        //false
        //true
        //false
</pre>

<h3>Regex.hasAny(types,value)</h3>
types is a string with various pattern types separated by a comma. Ex: "html,bbcode,int"

<b>Description</b>: returns boolean true if value contains at least one instance of any pattern associated with types. False if otherwise. 
<b>Examples:</b>
<pre class="prettyprint">
        console.log(Regex.hasAny(&quot;email,usphone&quot;,&quot;our email: hi@vertstudios.com&quot;));
        console.log(Regex.hasAny(&quot;html,bbcode&quot;,'&lt;a href=&quot;lolspam.html&quot;&gt;oeutaoeuaoeu&lt;/a&gt;'));
        console.log(Regex.hasAny(&quot;html,int,float&quot;,&quot;Jolly Jolly&quot;));
        
        //Output
        //true
        //true
        //false
</pre>
(Note the convenient spam validation of a textarea form submission using Regex.hasAny("html,bbcode,mailstrings", textarea) )

<h3>Regex.getDescription(type)</h3>
<b>Description</b>: returns a string describing type

You'll see in the <a href="http://vertstudios.com/blog/src/js/regex.txt">source code</a> that there are two objects, pattern and description. pattern takes the form type: "regexpattern", while description takes the form type: "description". description is where these strings are pulled from.*** 

The purpose of this method is mainly for convenient automation. 
<b>Example:</b>
<pre class="prettyprint">
        var myform = {name: &quot;Joseph&quot;, email: &quot;Joseph@@vertstudios.com&quot;,
                         usphone: &quot;9033305057&quot;, zip: &quot;75AA8&quot;};
        
        //Iterate through the &quot;form&quot; and output which values are valid.
        for(var i in myform)
        {
            console.log( Regex.getDescription(i) + &quot; is &quot; +
                       (Regex.is(i, myform[i]) ? &quot;valid&quot; : &quot;invalid&quot;) );
        }
        //Output:
        //Name is valid
        //Email is invalid
        //Phone is valid
        //Zip Code is invalid
</pre>


<h3><a href="http://vertstudios.com/blog/src/js/regex.txt">Download the source code</a></h3>

If you find any bugs or have any questions/suggestions, let us know in the comments below! ]]></content>
    <excerpt><![CDATA[The Vert Studios <a href="http://www.vertstudios.com/blog/php-regex-class/">PHP Regex Class</a> comes to JavaScript! ]]></excerpt>
  </item>
  <item>
    <title>Word Lens iPhone App Review</title>
    <link>http://www.vertstudios.com/blog/word-lens-iphone-app-review/</link>
    <pubdate>Fri, 17 Dec 2010 11:07:17 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2000</guid>
    <description></description>
    <content><![CDATA[<a href="http://itunes.apple.com/us/app/word-lens/id383463868">Word Lens</a> is an iPhone app that lets you translate in real time using your iPhone's camera. The idea seemed excellent, and the youtube video was extremely convincing.

<object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/h2OfQdYrHRs?fs=1&amp;hl=en_US"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/h2OfQdYrHRs?fs=1&amp;hl=en_US" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></embed></object>

<h2>Cost</h2>
You can visit the app store and download the app for free. However, in a similar fashion to <a href="http://www.rememberthemilk.com/services/iphone/">Remember the Milk</a> task manager, the app itself serves only as an empty shell. You have to purchase the translation libraries, currently at $4.99 each. 

<h2>Ease of Use</h2>
Word Lens is easily the most intuitive app you'll find. Once you open up Word Lens, the iPhone camera takes hold of the screen. Simply hold the camera up to text that you wish to translate. Since the translator works in real time, it requires you to hold the phone extremely steady. The slightest movement can cause words to change. 

When you feel you have the camera steady, you can press the Pause button, and it takes a temporary snapshot of the words you translated.
<img src="http://www.vertstudios.com/blog/images/word-lens/img6.jpg" alt="Word Lens iPhone App" />

<h2>Effectiveness</h2>
Now to the good part. In order to test the app out for myself, I simply did a Google search for <a href="http://www.google.com/images?q=spanish+signs&um=1&ie=UTF-8&source=og&sa=N&hl=en&tab=wi&biw=1920&bih=1085">Spanish Signs</a> and ran a few experiments. 

<p style="margin-top: 10px;">
<img src="http://www.vertstudios.com/blog/images/word-lens/schoolsign-spanish.jpg" alt="Spanish Sign" />
<img src="http://www.vertstudios.com/blog/images/word-lens/img1.jpg" alt="Word Lens iPhone App Translation" />
</p>

<p style="margin-top: 10px;">
<img src="http://www.vertstudios.com/blog/images/word-lens/spanish_lrg_please_wash.jpg" alt="Spanish Sign" />
<img src="http://www.vertstudios.com/blog/images/word-lens/img2.jpg" alt="Word Lens iPhone App Translation" />
</p>

<p style="margin-top: 10px;">
<img src="http://www.vertstudios.com/blog/images/word-lens/G2376.png" alt="Spanish Sign" />
<img src="http://www.vertstudios.com/blog/images/word-lens/img3.jpg" alt="Word Lens iPhone App Translation" />
</p>

<p style="margin-top: 10px;">
<img src="http://www.vertstudios.com/blog/images/word-lens/Parking-By-Permit-Only-Sign-K-2341.gif" alt="Spanish Sign" />
<img src="http://www.vertstudios.com/blog/images/word-lens/img4.jpg" alt="Word Lens iPhone App Translation" />
</p>

While the grammar is not perfect and random words can appear, it's still understandable. A tourist who knows no Spanish can use Word Lens to make their navigation much less stressful. This app will be particularly useful in regards to public signs. Word Lens should be given the benefit of the doubt in these tests due to refresh rate discrepancies with my monitor. 

It's important to note that Word Lens is not very accurate when it comes to picking up handwriting, but Word Lens discloses this when you first open the app. 
<img src="http://www.vertstudios.com/blog/images/word-lens/img5.jpg" alt="Word Lens iPhone App" />

<h2>Final Thoughts</h2>
I'm thoroughly convinced this app will only get better with time. For $4.99, you can get the Spanish to English translation dictionary for Word Lens. This app will have many practical uses. It's definitely worth the investment.]]></content>
    <excerpt><![CDATA[<a href="http://itunes.apple.com/us/app/word-lens/id383463868">Word Lens</a> is an iPhone app that lets you translate in real time using your iPhone's camera. The idea seemed excellent, and the youtube video was extremely convincing.

<object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/h2OfQdYrHRs?fs=1&amp;hl=en_US"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/h2OfQdYrHRs?fs=1&amp;hl=en_US" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></embed></object>]]></excerpt>
  </item>
  <item>
    <title>jQuery Sticky Scroller / Position:Fixed Plugin</title>
    <link>http://www.vertstudios.com/blog/jquery-sticky-scroller-position-fixed-plugin/</link>
    <pubdate>Fri, 31 Dec 2010 08:24:55 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2014</guid>
    <description></description>
    <content><![CDATA[The jQuery sticky scroll effect is a trending effect that has great user experience capabilities. One of the most cited examples of the sticky scroller effect is found at <a href="http://www.blueskyresumes.com/about-us/">Blue Sky Resumes</a>. 

While the effect at Blue Sky is pretty neat, we see that it doesn't leave many options. 90% of sticky scroller plugins only give the developer the ability to end the scrolling object at a certain point. I felt that there was a large opportunity gap that we need to fill.

<h2>STOP! Before you read any further</h2>
This plugin is intended to solve a very specific problem: Triggering callbacks at certain intervals of scrolling with a fixed object. If you would like to simply switch an item from position: fixed to position:absolute/static based on how far you've scrolled, or any other simple scroll callbacks, you need to check out <a href="http://imakewebthings.github.com/jquery-waypoints/">jQuery Waypoints</a>. 

<h2>Improving the Sticky Scroller</h2>

So how do we make the sticky scroller more versatile? 
<ol>
<li>Allow the object to scroll a specified margin from the top of the browser window</li>
<li>Allow the object to begin the scroll effect after the users scrolls a certain amount</li>
<li>Take the starting point of the effect and the ending point of the effect and create a grid of indexes between them</li>
<li>Use these indexes to trigger callbacks that respond to indexes of jQuery ojects</li>
</ol>

<h2>Demo</h2>
View our <a href="http://vertstudios.com/blog/demo/stickyscroller/demo.php">simple demo</a> which showcases the capabilities sticky scrollers have when combined with the previously stated ideas. 

In the demo, you'll see the skeletal framework of what could potentially be an extremely engaging experience when fused with some creativity and skillful design. 

<h2>Download</h2>
<a href="http://www.vertstudios.com/blog/demo/stickyscroller/StickyScroller.zip">Download the Zip File</a>
(Currently revamping the code, GitHub link will be posted back here soon). 

<h2>CSS</h2>
The only major requirement for CSS is that the scrolling object be absolutely positioned without an absolutely/relatively positioned parent.

<h2>Constructor</h2>
<h3>StickyScroller(obj, options)</h3>
obj: The jQuery selector for the object that will be scrolling. Note that only ONE object should be selected.
<b>Options: An object containing one or more of the following object members</b>
start: At what vertical position of the scrollbar the object will actually begin scrolling (in pixels)
end: At what vertical position of the scrollbar the object will stop scrolling (in pixels)
margin: How many pixels below the browser window the object will be fixed while scrolling (in pixels)
interval: The length of each index (in pixels)
range: Length of a range of pixels starting at the top of interval. Convenient for callbacks.

This diagram of the demo may help you understand the more abstract options. 
<img src="http://www.vertstudios.com/blog/demo/stickyscroller/diagram.jpg" alt="jQuery Sticky Scroller" />

Note: "limbo" is the state the scroller is in when it's outside of the range but still within the interval associated with the range. This property isn't set by the developer. It's the calculated difference between the interval and the range.

To instantiate a StickyScroller, use the <i>new</i> operator. 
The call to the StickyScroller class in the demo is:
<pre class="prettyprint">
        var scroller = new StickyScroller(&quot;#scrollbox&quot;,
        {
            start: 300,
            end: 1800,
            interval: 300,
            range: 100,
            margin: 100
        });
</pre>

So what you observed was after scrolling down 300px, the sticky scroller effect began by keeping the div "scrollbox" 100px below the top of the browser window. After the initial 300px to initiate the scroller, every 300px scrolled initiates a callback. After scrolling 1800px total, the effect stops and the scrolling object stays put. 

<h2>Public Methods</h2>
Public methods are functions that can be called by instantiations of the StickyScroller class using the dot operator. For the following public function documentations, consider the instantiation of the <a href="<a href="http://vertstudios.com/blog/demo/stickyscroller/demo.php">demo</a>:
<pre class="prettyprint">
        var scroller = new StickyScroller(&quot;#scrollbox&quot;,
        {
            start: 300,
            end: 1800,
            interval: 300,
            range: 100,
            margin: 100
        });
</pre>

<h3>Accessor Methods</h3>
Each option member has an accessor method that returns the property value to the calling environment. 
<pre class="prettyprint">
scroller.getStart(); //300
scroller.getEnd(); //1800
scroller.getInterval();//300
scroller.getRange(); //100
scroller.getMargin();//100
</pre>

Additionally, you can get the current index and previous index
<pre class="prettyprint">
scroller.getIndex();
scroller.getOldIndex();
</pre>

<h3>Callbacks</h3>
The callback functions for the StickyScroller work similar to all the callback functions of jQuery you've grown to love, such as <a href="http://api.jquery.com/click/">.click()</a>. However, instead of passing an anonymous function to the callback, you have the choice to pass current index to the callbacks as well. (Alternatively you could just use scroller.getIndex() in the function body). These callbacks, combined with <a href="http://api.jquery.com/eq/">jQuery's .eq() method</a> (as seen in the demo), can pack quite the UX punch. The callback functions available at this time are:
<ul>
<li>onScroll()</li>
<li>onNewIndex()</li>
<li>onLimbo()</li>
</ul>

<h4>onScroll(func)</h4>
<b>Description</b>: Executes whenever the user scrolls, regardless of position on the screen. 
<b>Example</b>:
<pre class="prettyprint">
//Will cause an alert every single time the user scrolls. 
//Please don't do this in a real project!
scroller.onScroll(function()
{
     alert(&quot;This is rather spammy!&quot;);
});
</pre>

<h4>onNewIndex(func)</h4>
<b>Description</b>: Executes whenever the user scrolls to a new index. This should be used over onScroll as much as possible.
<b>Example</b>:
<pre class="prettyprint">
//Add a class to the div with a class &quot;box&quot; that corresponds to the new index
scroller.onNewIndex(function(index)
{
     $(&quot;div.box&quot;).eq(index).addClass(&quot;active&quot;);
});
</pre>

<h4>onLimbo(func)</h4>
<b>Description</b>: Executes whenever the user scrolls beyond the range of the current index, but is not yet to the next index. This callback is useful for removing/adding classes to reset a group of elements back to a normal state while the user scrolls to the next index.
<b>Example</b>:
<pre class="prettyprint">
//Removes the &quot;active&quot; class from each div with the class of &quot;box&quot;
scroller.onLimbo(function()
{
     $(&quot;div.box&quot;).removeClass(&quot;active&quot;);
});
</pre>

<h3>inRange()</h3>
<b>Description</b>: Determines if the scroller is in interval range. For more explanation on what the range is, refer to the diagram above. 
<b>Example</b>:
<pre class="prettyprint">
//Every scroll, see if the scroller is in the range. 
scroller.onScroll(function(index)
{
     //If in range, add the blue class. If not, remove the blue class.
     if(scroller.inRange())
     {
          $(&quot;div.box&quot;).eq(index).addClass(&quot;blue&quot;);
     }
     else
     {
          $(&quot;div.box&quot;).eq(index).removeClass(&quot;blue&quot;);
     }
});
</pre>

<h3>.distanceFrom(index)</h3>
<b>Description</b>: Returns the shortest distance in pixels between the scroller and an index. 
<b>Example</b>:
<pre class="prettyprint">
//Get the shortest distance in pixels from index 2. 
scroller.distanceFrom(2);
</pre>

<h3>.closestIndex()</h3>
<b>Description</b>: Returns the closest index that is not the current index
<b>Example</b>:
<pre class="prettyprint">
//Hide the div with class box associated with the closest index
$(&quot;div.box&quot;).eq(scroller.closestIndex()).hide();
</pre>

<h3>.firstIndex()</h3>
<b>Description</b>: Returns the first index (0). This method exists simply for readability purposes. 
<b>Example</b>:
<pre class="prettyprint">
//Show the first div with class &quot;box&quot;
$(&quot;div.box&quot;).eq(scroller.firstIndex()).show();
</pre>

<h3>.lastIndex()</h3>
<b>Description</b>: Returns the last index. 
<b>Example</b>:
<pre class="prettyprint">
//Show the last div with class &quot;box&quot;
$(&quot;div.box&quot;).eq(scroller.lastIndex()).show();
</pre>

<h2>Download</h2>
<a href="https://github.com/joequery/jQuery-Position-Fixed-Sticky-Scroller">Download the source on GitHub</a>

<h2>Notes</h2>
The purpose of this plugin, and all my plugins, is to serve as a canvas for your own creativity. Please let me know if there is some limitation in the code that prevents you from realizing your vision. 

<h3>Jan 8, 2011: Firefox</h3>
This effect sucks with Firefox. There's a significant delay in position calculation when switching from position: absolute to position: fixed. Additionally, altering the top value to be $(window).scrollTop() + specified margin yields a really choppy animation in Firefox. If anyone can provide a workaround, that'd be great. ]]></content>
    <excerpt><![CDATA[Free jQuery Plugin that enables an object to appear fixed for a specified range.]]></excerpt>
  </item>
  <item>
    <title>A jQuery Development Pattern</title>
    <link>http://www.vertstudios.com/blog/jquery-development-pattern/</link>
    <pubdate>Sat, 01 Jan 2011 20:57:14 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2104</guid>
    <description></description>
    <content><![CDATA[After dealing with jQuery for about 7 months, I've finally settled into my own style of plugin development. This article will discuss what I feel are the shortcomings of the current jQuery development pattern, and my alternative: the class based plugin development pattern.

<h2>Shortcomings of the Current Plugin Pattern</h2>
<h3>The Plugin Pattern Clutters the Arguments</h3>
It's not uncommon to see a plugin that takes multiple objects and multiple anonymous functions in as arguments. The result is extremely cluttered, borderline unreadable syntactical soup. For instance, take this example, provided in the documentation of the most popular <a href="http://docs.jquery.com/Plugins/validation">jQuery validation</a> plugin:
<pre class="prettyprint">
  $(&quot;form&quot;).validate({
    invalidHandler: function(e, validator) {
      var errors = validator.numberOfInvalids();
      if (errors) {
        var message = errors == 1
          ? 'You missed 1 field. It has been highlighted below'
          : 'You missed ' + errors + ' fields.';
        $(&quot;div.error span&quot;).html(message);
        $(&quot;div.error&quot;).show();
      } else {
        $(&quot;div.error&quot;).hide();
      }
    },
    onkeyup: false,
    submitHandler: function() {
      $(&quot;div.error&quot;).hide();
      alert(&quot;submit! use link below to go to the other step&quot;);
    },
    messages: {
      password2: {
        required: &quot; &quot;,
        equalTo: &quot;Please enter the same password as above&quot;  
      },
      email: {
        required: &quot; &quot;,
        email: &quot;Please enter a valid email address, example: you@yourdomain.com&quot;,
        remote: jQuery.validator.format(&quot;{0} is already taken, please enter a different address.&quot;)  
      }
    },
    debug:true
  });
</pre>
As the code user's needs grow, so does the complexity of the plugin instantiation. It's easy to get lost in the sea of curly braces, especially once conditional statements and objects within objects are thrown into the equation. From lines 19-23, you can see that the plugin actually goes 3 layers deep in objects.

<h4>Solution</h4>
Keep the plugin instantiation for the most basic settings. Use public methods to take care of the more complex customizations. The easiest way to accomplish this adjustment is to use JavaScripts "new" operator in conjunction with some <a href="http://www.1stwebdesigner.com/design/object-oriented-basics-javascript/">object-oriented principles</a>. If the plugin had been authored using a class(prototype) model, the equivalent configuration would look like so:
<pre class="prettyprint">
  var form = new validate(&quot;form&quot;, 
  {
    onkeyup: false,
    debug: true
  });
  
  form.invalidHandler(function(e, validator) 
  {
    var errors = form.numberOfInvalids();
    if (errors) 
    {
      var message = errors == 1
        ? 'You missed 1 field. It has been highlighted below'
        : 'You missed ' + errors + ' fields.';
      $(&quot;div.error span&quot;).html(message);
      $(&quot;div.error&quot;).show();
    } 
    else 
    {
      $(&quot;div.error&quot;).hide();
    }
  });
  
  form.submitHandler(function() 
  {
    $(&quot;div.error&quot;).hide();
    alert(&quot;submit! use link below to go to the other step&quot;);
  });
    
  form.message(&quot;password2&quot;, 
  {
    required: &quot; &quot;,
    equalTo: &quot;Please enter the same password as above&quot;
  });
  
  form.message(&quot;email&quot;,
  {
    required: &quot; &quot;,
    email: &quot;Please enter a valid email address, example: you@yourdomain.com&quot;,
    remote: jQuery.validator.format(&quot;{0} is already taken, please enter a different address.&quot;)  
  });
</pre>
The separation of handlers and basic configuration promotes readability and organization. Additionally, the start and end of configuration options are now explicitly clear. Adjusting or removing configurations would be extremely easy. These conveniences also extend to the plugin source itself.

<h3>Many Complex Plugins Simply Do Too Much</h3>
As a plugin becomes increasingly complex, it becomes increasingly difficult to preserve the reason why plugins are developed in the first place: ease of use in projects. Remember that the plugin should conform to the wishes of the developer, not the other way around. Many plugin developers strive to make their plugin work with an empty argument call, such as $("selector").myplugin();. There's an underlying notion amongst developers that an empty argument call equates to ultimate ease of use, and this is rarely the case. A complex plugin with an empty argument call usually means the code user has to alter large quantities of HTML and/or CSS. At that point, the zero argument call is nothing but meaningless flare. Notice my emphasis on "complex plugins". A simple plugin, such as a plugin that fades in elements in sequence, could benefit greatly from an empty argument call. My main point is

<b>Do not devoid the plugin user of all responsibility.</b>

If you adequately document your plugin, it is up to the plugin user to implement it correctly. There are going to be some developers that will fail to use your code successfully. That's okay. What's not okay is absolving the plugin user of responsibility to the extent that they can no longer customize the plugin implementation to fit their specific needs. No one knows the full capabilities of their code. I'm sure John Resig, creator of jQuery, has been surprised at what's been created by the development community with his code. You might think the plugin you're authoring is only good for a certain situation, but another developer with a different mindset might find it useful in another situation. The moment you hard-code your situation into the plugin, you eliminate other, possibly better, ideas. 

The ultimate goal of your plugin should be to make a developer's idea easy to execute. That idea might be brilliant. That idea might be terrible. Either way, your job is to make that idea simple to put in motion. 

<h2>Class Based Plugin Development Pattern</h2>
Now that we've discussed the shortcomings of the current plugin development pattern, lets discuss an alternative: the class-based plugin development pattern. 
 
This pattern requires you to know the <a href="http://www.1stwebdesigner.com/design/object-oriented-basics-javascript/">object oriented basics of JavaScript</a>. Whether you decide to implement this pattern or not, I highly encourage you to learn the object oriented fundamentals found in that article. 

<h3>Defining the Plugin</h3>
Defining the plugin with the class-based pattern is similar to the normal plugin pattern. 

Normal plugin pattern:
<pre class="prettyprint">
jQuery.fn.myPlugin = function()
{
     //Code stuff goes here!
};
</pre>

Class-based plugin pattern
<pre class="prettyprint">
function myPlugin()
{
     //Code stuff goes here!
}
</pre>

<h3>Function Header and Default Values</h3>
Since you're creating a plugin, chances are you're wanting to manipulate an element that can be represented by a jQuery selector. Thus, the most natural function header is
<pre class="prettyprint">
function myPlugin(obj, options)
{
     //Code stuff goes here!
}
</pre>
Where obj represents the jQuery selector or jQuery object for the element(s) you wish to manipulate, and options is an object with properties that will be used in the plugin. 

This brings up a question: <b>Why not have obj just be a property of options?</b> In many instances, you want default values to be values associated with the CSS properties of the elements in question. However, object members can't refer to other object members in the definition of the object. This is simply because at the time the object is being populated with values, it does not yet exist to refer to itself. 
<pre class="prettyprint">
    var test1 = {val1: 10, val2: 5+test1.val1};
    alert(test1.val2); //Error, val1 undefined
    
    var test2 = {val1: 10, val2: 5+val1};
    alert(test2.val2); //Error, val1 undefined

    var test3 = {val1: 10, val2: 5+this.val1};
    alert(test3.val2); //Error, val2 Not a number
</pre>

For default values, jQuery extend works perfectly. Lets say our plugin options takes in 3 properties: x, y, and z. jQuery extend allows us to fill in our options with default values in the event they aren't specified in the function call.
<pre class="prettyprint">
function myPlugin(obj, options)
{
    //------------------------------------------------------------
    // Set default property values
    //------------------------------------------------------------
    var defaults = {
    x:0,
    y: 0,
    z: 0
    },  settings = jQuery.extend(defaults,options);
}
</pre>

The settings object is the options object populated with the values of default in the instance a value from options is missing. For example, if we passed in {x: 5, y:10} as our options object, settings.x would be 5, settings.y would be 10, and settings.z would be 0. Since z was not specified in the options object, the value of z associated with the defaults object was placed in the settings object.

Throughout the plugin, you should refer to the option values via the settings object. 

<h3>Constructor Methods</h3>
If you have any events that you would like to take place once the plugin is initiated, you should have those executed immediately after declaring your default values. For example, if we wanted to make our jQuery selected object have an absolute position at coordinates (x,y), 

<pre class="prettyprint">
function myPlugin(obj, options)
{
    //------------------------------------------------------------
    // Set default property values
    //------------------------------------------------------------
    var defaults = {
    x:0,
    y: 0,
    z: 0
    },  settings = jQuery.extend(defaults,options);

    //Do this immediately 
    $(obj).css({'position': 'absolute', 
                    'left': settings.x, 
                    'top': settings.y});
}
</pre>
<h3>Private Methods and Properties</h3>
Private methods are functions that can only be called within the plugin definition. Similarly, private properties are properties that can only be accessed within the plugin definition. Private methods are useful for calculations and callbacks. Private methods promote readability for those viewing/maintaining the code. Since JavaScript exhibits function scope, private methods and properties can be created by simply using the "var" statement.
<pre class="prettyprint">
function myPlugin(obj, options)
{
    //------------------------------------------------------------
    // Set default property values
    //------------------------------------------------------------
    var defaults = {
    x:0,
    y: 0,
    z: 0
    },  settings = jQuery.extend(defaults,options);

    //Do this immediately 
    $(obj).css({'position': 'absolute', 
                    'left': settings.x, 
                    'top': settings.y});
    
     //Cannot be accessed by calling environment
     var callback = function()
     {
          alert(&quot;Callbacked!&quot;);
     };
}
</pre>
<h3>Public Methods</h3>
Public methods are functions that can be accessed by the calling environment. Notice that public properties are not listed, as most of the time public properties are poor programming practice. You don't want the values inside the plugin to be altered by the outside without validation. 

Public methods are extremely useful for initiating actions, setting values, validation of arguments, and my personal favorite, altering callbacks.  To make a method public, you attribute it to the plugin itself with the "this" keyword.

Lets say we want our plugin to allow the user to move the elements in the selected jQuery object to a certain coordinate. After the element has moved, we want a custom callback to occur.
<pre class="prettyprint">
function myPlugin(obj, options)
{
    //------------------------------------------------------------
    // Set default property values
    //------------------------------------------------------------
    var defaults = {
    x:0,
    y: 0,
    z: 0
    },  settings = jQuery.extend(defaults,options);

    //Do this immediately 
    $(obj).css({'position': 'absolute', 
                    'left': settings.x, 
                    'top': settings.y});
    
     //Cannot be accessed by calling environment
     var callback = function()
     {
          alert(&quot;Callbacked!&quot;);
     };

     //Replace the callback with a custom callback
     this.callback = function(func)
     {
          callback = func;
     };

     //Animate the element to a coordinate, then do the callback
     this.move = function(x,y)
     {
          //Make sure the values are positive.
          x = Math.abs(x);
          y = Math.abs(y);

          $(obj).stop(true,true).animate({'left': x, 'top': y}, 500, 
          function() {
          callback(); 
          });          
     };
}
</pre>
<h3>Calling the Plugin</h3>
Now that we have our Plugin defined, it's time to call it. Plugins under this pattern will be called using the "new" operator, and it must be assigned to a variable. While this might feel awkward at first, you'll grow comfortable with this instantiation over time.

<pre class="prettyprint">
var item = new myPlugin(&quot;#box&quot;, 
{
     x: 20,
     y: 30
});
</pre>
Once this statement is executed, the constructor of the plugin occurs. Thus, the element with a div ID of "box" will be positioned absolutely with left value at 20 and top value at 30.

In order to access public method, use the "." operator along with the name of the variable used.
<pre class="prettyprint">
$(document).ready(function()
{
     var item = new myPlugin(&quot;#box&quot;,
     {
          x: 20,
          y: 30
     });

    var x = 0;
    var y = 0;
     
    //Alters the default callback function
    item.callback(function()
    {
        $(&quot;#box&quot;).html(&quot;Left: &quot; + x + &quot;&lt;br /&gt;Top: &quot; + y);
    });

    //Moves box when clicked
    $(&quot;#box&quot;).click(function()
    {
       item.move(x, y);
       x += 10;
       y += 10;
    });
});
</pre>
<h3>Demo of our little plugin</h3>
So we've spent some time creating this little plugin, and you might be attached after all this work. I understand! Feel free to <a href="http://vertstudios.com/blog/demo/pattern/patterndemo.php">view this plugin in action</a> and <a href="http://vertstudios.com/blog/demo/pattern/patterndemo.txt">download the source code</a>. 

Note how our plugin by itself is not hard-coded to move the element every time it's clicked and display the coordinates in the element. All that was done outside of the plugin. It's that type of versatility that makes me really enjoy this development pattern.

<h3>A Real Example</h3>
To see this development pattern in action, check out my <a href="http://www.vertstudios.com/blog/jquery-sticky-scroller-position-fixed-plugin/">jQuery sticky scroller</a> plugin. 

<h2>Feedback</h2>
If you have any feedback or suggestions, please leave them in the comments below! 

]]></content>
    <excerpt><![CDATA[Discusses an alternate development pattern to jQuery plugins.]]></excerpt>
  </item>
  <item>
    <title>Introduction to Logic: Part 2 – Constructing Truth Tables</title>
    <link>http://www.vertstudios.com/blog/introduction-logic-part-2-constructing-truth-tables/</link>
    <pubdate>Mon, 03 Jan 2011 02:05:36 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2182</guid>
    <description></description>
    <content><![CDATA[This article continues assuming you've read the <a href="http://www.vertstudios.com/blog/introduction-logic-part-1-negation-and-or-statements/">Introduction to Logic: Part 1</a>, where we discussed negation, conjunction, and disjunction statements. 

<h2>Truth Table Construction</h2>
We read that each of the previous statements have their own truth table. A truth table is a visual tool that helps us see the logical outcomes of every possible combination of statements. 

For the following example, let p,q, and r be statements.
<pre class="prettyprint">p &amp;&amp; [(q || r) &amp;&amp; (r || p)]</pre>

<h3>Number of combinations</h3>
The total number of possible outcomes is equal to 2^n, where n is equal to the number of statements. In this example we have three statements in the form of p, q, and r. Thus the number of combinations is 2^3, or 8. 

<h3>Organizing the table</h3>
When creating the truth table, it's extremely important that you keep it organized. My method for constructing organized truth tables is:
<ul>
     <li>Begin with statements themselves</li>
     <li>Place the simplest compound statements to the left of the table, and move progressively to the more complex compound statements</li>
</ul>
So for our example of <b>p && [(q || r) && (r || p)]</b>, here's how you should construct the truth table:
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>
</table>

Note that the last column will always end up being the original series of statements. 

So the first thing we must do is populate the p,q, and r columns with all the possible combinations of True and False. There is a simple pattern you can follow that makes populating these columns extremely easy. In this example, we have 8 combinations since we have 3 statements. For one statement column, alternate between True and False every 4 statements. The next statement column, alternate between True and False every 2 statements. For the last statement column, alternate between True and False every statement. 

So for p,q, and r, the initial truth table population would look like so:
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
    </tr>
    
    <tr>
        <td>T</td>
        <td>T</td>
        <td>T</td>
    </tr>
    <tr>
        <td>T</td>
        <td>T</td>
        <td>F</td>
    </tr>
    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
    </tr>
    <tr>
        <td>T</td>
        <td>F</td>
        <td>F</td>
    </tr>
    <tr>
        <td>F</td>
        <td>T</td>
        <td>T</td>
    </tr>
    <tr>
        <td>F</td>
        <td>T</td>
        <td>F</td>
    </tr>
    <tr>
        <td>F</td>
        <td>F</td>
        <td>T</td>
    </tr>
    <tr>
        <td>F</td>
        <td>F</td>
        <td>F</td>
    </tr>
</table>

<h3>Filling in the table</h3>
So now we know how to populate the initial fields. Now we get down to the meat of the situation: Evaluating the compound statements to complete the truth table. The great thing about how we organized the truth table is that we can solve simple compound statements and use the solutions to solve complex compound statements. Let's walk through the population of a row.

For the sake of demonstration, let's choose a more complex combination: p is true, q is false, r is true. 
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
</table>

Now we move on to the next column, q || r. Since r is true, q || r is true. 
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td></td>
        <td></td>
        <td></td>
    </tr>
</table>

Similarly, r || p is true
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td></td>
        <td></td>
    </tr>
</table>

Since q || r and r || p are both true, then the statement (q || r) && (r || p) is also true.
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td></td>
    </tr>
</table>

Since p is true and (p || q) && (r || p) is true, then the statement p && [(p||q) && (r || p)] is true.
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
    </tr>
</table>

<h3>Final Product</h3>
Repeating this process for all 8 combinations, the following truth table is produced:
<table>
    <tr>
        <th>p</th>
        <th>q</th>
        <th>r</th>
        <th>q || r</th>
        <th>r || p</th>
        <th>(q || r) && (r || p)</th>
        <th>p && [(q || r) && (r || p)]</th>
    </tr>

    <tr>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
    </tr>

    <tr>
        <td>T</td>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
    </tr>

    <tr>
        <td>T</td>
        <td>F</td>
        <td>F</td>
        <td>F</td>
        <td>T</td>
        <td>F</td>
        <td>F</td>
    </tr>

    <tr>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>F</td>
    </tr>

    <tr>
        <td>F</td>
        <td>T</td>
        <td>F</td>
        <td>T</td>
        <td>F</td>
        <td>F</td>
        <td>F</td>
    </tr>

    <tr>
        <td>F</td>
        <td>F</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>T</td>
        <td>F</td>
    </tr>

    <tr>
        <td>F</td>
        <td>F</td>
        <td>F</td>
        <td>F</td>
        <td>F</td>
        <td>F</td>
        <td>F</td>
    </tr>
</table>

<h2>Feedback</h2>
Have any questions concerning truth tables? Leave us a comment below!]]></content>
    <excerpt><![CDATA[Creating truth tables is an invaluable tool for tracking your logic flow. We discuss how to create and organize a truth table. ]]></excerpt>
  </item>
  <item>
    <title>Remember The Milk iPhone App Review</title>
    <link>http://www.vertstudios.com/blog/remember-the-milk-iphone-app-review/</link>
    <pubdate>Tue, 04 Jan 2011 08:09:52 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2214</guid>
    <description></description>
    <content><![CDATA[No matter what industry you work in, (or even if you're too young to work), task management is a critical component to every day life. Task management not only increases productivity by serving as a reminder of what needs to be done, but task management also serves as a motivational tool for those who are goal-oriented. 

When it comes to task management, I recommended <a href="http://rememberthemilk.com/">Remember The Milk</a>. Remember The Milk(RTM) started off as a simple web application in <a href="http://web.archive.org/web/20051124024804/http://rememberthemilk.com/">2005</a>. While RTM was a decent utility on its own, an online to-do list didn't appeal to many. What if you were away from your computer? Well, now that the web-based application has <a href="http://www.rememberthemilk.com/services/iphone/">made its way to the iPhone</a>, its appeal and usefulness have increased exponentially. 

<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-cow.jpg" alt="Remember The Milk" />

<h2>Cost</h2>
While the application itself is "free", you must have a Remember The Milk PRO account to use the app. A PRO account costs $25/year, but I guarantee that you will find the service to be worth much more than $25. Those without a PRO membership can try the app for free for 14 days with no credit-card entry. 

<h2>Ease of Use</h2>
The ideal task management app allows for extremely fast task entry and sorting without compromising task detail. Remember The Milk accomplishes this rare feat. 

The application interface allows for four different sorts:
<h3>1) Tasks Due Today</h3>
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-today.jpg" alt="Remember The Milk" />
The interface displays the task name, the time it's due (if specified), and the associated category.

<h3>2) Tasks Due Tomorrow</h3>
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-tomorrow.jpg" alt="Remember The Milk" />
In the event you want to look ahead (or the rare event you've finished all your tasks due today), Remember The Milk allows you to conveniently view the tasks scheduled for the next day. 

<h3>3) Tasks Due This Week</h3>
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-week.jpg" alt="Remember The Milk" />
In case you need to look further ahead in the week to schedule appointments around your to-do list, RTM allows you to do that just as easily. 

<h3>4) Tasks Due by Lists</h3>
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-lists.jpg" alt="Remember The Milk" />
If you need to isolate tasks by their associated lists, RTM makes the process extremely simple. In case you need to focus on school, chores, or work for the day, you can filter out all other task lists and focus solely on what you need. 

<h3>Creating Tasks</h3>
Task Creation is extremely simple and extremely fast. 

You start by pressing the + button, or for extremely fast entry, the text input on the top of the screen. 
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-create1.jpg" alt="Remember The Milk" />

The buttons below the text input correlate to different fields, such as date, priority, etc. Simply type your task name and add all the fields you wish. 
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-create-2.jpg" alt="Remember The Milk" />
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-create-3.jpg" alt="Remember The Milk" />

<h2>More Features</h2>
RTM's app badge by default displays how many tasks remain for the current day. You can change the settings to no badge or the number of incomplete tasks total.
<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-home.jpg" alt="Remember The Milk" />

To see more features including Google Calendar integration, RSS feeds, and more, check out Remember The Milks <a href="http://www.rememberthemilk.com/help/guide/">Getting Started guide</a>.

<h2>Conclusion</h2>
To those who appreciate the value of great task management, the $25/year fee will be nothing compared to the value Remember The Milk provides. To those who may be skeptical, I invite you to try out the App's 14 day free trial. As always, you're welcome to leave your questions or comments below! ]]></content>
    <excerpt><![CDATA[When it comes to task management, I recommended <a href="http://rememberthemilk.com/">Remember The Milk</a>. Remember The Milk(RTM) started off as a simple web application in <a href="http://web.archive.org/web/20051124024804/http://rememberthemilk.com/">2005</a>. While RTM was a decent utility on its own, an online to-do list didn't appeal to many. What if you were away from your computer? Well, now that the web-based application has <a href="http://www.rememberthemilk.com/services/iphone/">made its way to the iPhone</a>, its appeal and usefulness have increased exponentially. 

<img style="display: block; margin: 0px auto;" src="http://www.vertstudios.com/blog/images/remember-the-milk/remember-the-milk-cow.jpg" alt="Remember The Milk" />]]></excerpt>
  </item>
  <item>
    <title>Introduction to Regular Expressions</title>
    <link>http://www.vertstudios.com/blog/introduction-to-regular-expressions/</link>
    <pubdate>Wed, 05 Jan 2011 09:49:54 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2248</guid>
    <description></description>
    <content><![CDATA[Regular expressions are a mysterious, extremely useful programming tool. The syntax of Regular Expressions(RegEx) can be extremely daunting for those starting out. Additionally, I've found a lot of RegEx intro guides to be extremely vague, which personally turned me off to learning RegEx for many months. For a while, my "knowledge base" of RegEx consisted of copying and pasting Regular Expression snippets as needed. However, this guide will introduce you to the basics of Regular Expressions in a hopefully extremely accessible manner. 

<h2>What are Regular Expressions Good For? </h2>
Regular Expressions, by definitions, are symbolic patterns that describe text. Regular Expressions serve many extremely useful purposes, including:
<ul>
<li>Formatting text</li>
<li>Extracting substrings from a string</li>
<li>Finding and replacing characters that are not strictly formatted</li>
<li>Validating form data</li>
<li>Matching text patterns</li>
</ul>

When it comes to web development, form validation tends to be the primary reason why a developer turns to Regular Expressions. Hopefully this tutorial, and an upcoming tutorial discussing the use of Regular Expressions in your work flow, will shake off the notion that Regex == Form Validation. 

<h2>Conventions in this Article</h2>
For this tutorial, we'll use a generic syntax. Note that languages deal with escape characters and back references differently. Remember that whenever you're applying this knowledge to your language of choice. For your reference:
<ul>
<li><a href="http://php.net/manual/en/function.preg-replace.php">PHP Regex Syntax</a></li>
<li><a href="http://www.regular-expressions.info/javascript.html">JavaScript Regex Syntax</a></li>

Regular expression patterns will be denoted with forward slashes (//). 
<h2>Thinking Like a RegEx Engine</h2>
Using Regular Expression requires a great amount of abstract thinking. The most important concept to understand is how a RegEx engine works. You'll find it easier to think about Regular Expressions if you, as silly as it sounds, pretend you're a robot! 

For example, "cat" to us means a furry, lovable creature. 
<img style="display: block; margin: 0px auto;" alt="Cat" src="http://www.solarnavigator.net/animal_kingdom/animal_images/cat_yawning_canine_teeth.jpg" />

But instead of seeing "cat" as a word, think of cat as the character 'c', followed immediately by the character 'a', followed immediately by the character 't'. In Regular Expressions, the position of each character is extremely important. 

<h2>Regular Expression Syntax</h2>
Now that we have the hypothetical-philosophical-BS out of the way, let's make some regular expressions! 

<h3>Literal Characters</h3>
Literal characters are simply characters without any modifications. Unless you specify otherwise, the RegEx engine will treat all characters as case-sensitive. Thus the pattern /a/ matches the last character in "Agenda", but not the first character, 'A'. 

Lets say we were parsing some HTML, and we wanted to know if there was an image tag anywhere in the file. We could use the pattern /&lt;img/ since we know that there shouldn't be a space between the open bracket and the element name in HTML. 
<a href="http://bit.ly/ihTSSu">See img tag example</a>

<h4>Escaping Special Characters</h4>
There are numerous characters set aside for special operations in Regular Expressions. These characters include:
<ul>
<li>[</li>
<li>]</li>
<li>(</li>
<li>)</li>
<li>?</li>
<li>*</li>
<li>+</li>
<li>^</li>
<li>$</li>
<li>\</li>
<li>.</li>
<li>{</li>
<li>}</li>
</ul>
If you want to express the literal version of these characters, precede the character with a backslash \. That means to represent a backslash itself, you will need two backslashes. 

For example, lets say you were looking for hotwire.com in a text file. The pattern /hotwire.com/ does indeed match the string "hotwire.com", but also matches "hotwirehcom", "hotwireLcom", etc, because the . symbol un-escaped can represent ANY character. The correct pattern would be /hotwire\.com/. 
<a href="http://bit.ly/eWJsRV">See hotwire.com example</a> 

<h3>Character Classes</h3>
Literal characters are hard-coded and stoic. Consequently, literal characters on their own usually don't provide much utility to the developer. However, the dynamic nature of character classes opens up a world of possibilities. 

Character classes are characters denoted between square brackets that represent a number of options for a particular character slot. 

For example, the pattern /h[ao]t/ matches "hat" and "hot". The characters 'a' and 'o' are said to be within a character class. No matter how many characters are in the character class, only one will be used. The RegEx engine iterates through every character in the character class to see if there is a potential match with the string being tested. Thus, /h[abcdefghijklmnopqrstuvxxyz]t/ will still match "hat" and "hot", but will now also match "hbt", "hct", etc. 

Character classes only take up one character "slot". Thus, it's quite common to see one character class after another character class. 

As another example, take the pattern /h[ao][pt]/. This pattern matches:
<ul>
<li>hap</li>
<li>hat</li>
<li>hot</li>
<li>hop</li>
</ul>
<a href="http://bit.ly/hNBGn3">See example</a>

<h4>Ranges in Character Classes</h4>
Within a character class, you can define a range of characters for the RegEx engine to match using the - operator. 

For example, the pattern /[a-c][0-2]/ matches: 
<ul>
<li>a0</li>
<li>a2</li>
<li>b2</li>
<li>c1</li>
</ul>
And more. 

Additionally, multiple ranges can be specified within one character class. It's important to remind yourself that no matter what, only one character will be matched by the character class. 

The pattern /[a-zA-Z0-9]/ matches a single alphanumeric character. The pattern is equivalent to /[abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]/

Since - indicates a range of characters, it is a special character within character classes. There are two ways of escaping the - in the event you need to use the character as a possible match within the character class.
<ol>
<li>Escape the - with a backslash. (\-)</li>
<li>Have the - at the very end. </li>
</ol>

So a pattern for simple 1 digit mathematical expressions would be /[0-9][*/+-][0-9]/
The pattern would match
<ul>
<li>1+1</li>
<li>3-5</li>
<li>5*9</li>
</ul>
And more. 
<a href="http://bit.ly/gmEsmH">See math expression example</a>

<h4>Special Characters in Character Classes</h4>
Character classes have their own distinct set of special characters, separate from the special characters listed above. The special characters for character classes are:
<ul>
<li>\ (escape character)</li>
<li>^ (negation)</li>
<li>- (range)</li>
<li>] (character class end)</li>
</ul>

To have the character class match any of these as literal characters, they must be preceded with a backslash (\). 
<a href="http://bit.ly/fEl9zk">See example for escaping special characters</a>

<h4>Character Class Negation</h4>
At times you may want to select all characters except a specified few. In that case, placing a caret (^) immediately after the opening bracket of the character class means the character class will match any characters except the remaining characters in the character class.

For example, the pattern /hi[^a-zA-Z0-9]/ matches:
<ul>
<li>hi!</li>
<li>hi$</li>
<li>hi,</li>
</ul>
<a href="http://bit.ly/fHe0uk">See negated character class example</a>

<h4>Predefined Character Classes</h4>
Most languages come with many useful predefined character classes. 
<table>
<tr><th>Predefined character class</th><th>Matches</th></tr>
<tr><td>\d</td><td>A digit</td></tr>
<tr><td>\w</td><td>An alphanumeric character or underscore</td></tr>
<tr><td>\s</td><td>A whitespace character</td></tr>
<tr><td>\D</td><td>A non digit</td></tr>
<tr><td>\W</td><td>A non alphanumeric character or underscore</td></tr>
<tr><td>\S</td><td>A non whitespace character</td></tr>
</table>

<h3>Quantifiers</h3>
So far we've discussed literals and character classes, both of which only match a single character. What if we want to have the same character class repeated? That's where quantifiers come in. 

<table>
<tr><th>Quantifier</th><th>Description</th></tr>
<tr><td>?</td><td>0 or 1 occurrences (optional)</td></tr>
<tr><td>*</td><td>0 or more occurrences</td></tr>
<tr><td>+</td><td>1 or more occurrences</td></tr>
<tr><td>{x}</td><td>Exactly x number of occurrences</td></tr>
<tr><td>{x, y}</td><td>Between x and y number of occurrences</td></tr>
<tr><td>{x,}</td><td>At least x number of occurrences</td></tr>
</table>

If you're wanting to quantify a group of literals, you will need to wrap them in parenthesis. 

For example, the pattern /(piggy ?){3}/ matches 
<ul>
<li>piggy piggy piggy</li>
<li>piggypiggypiggy</li>
<li>piggypiggy piggy</li>
</ul>
The question mark indicates that the space after the y is optional. However, the pattern of a p followed by i, followed by g, followed by g, followed by y, followed by an optional space, must be repeated 3 times. 

So how would we match the format of the following US phone number: <b>903-555-5555</b>? 
We observe that the phone number is 3 digits, followed by a dash, followed by 3 digits, followed by a dash, followed by 4 digits. Thus, the pattern would be /\d{3}-\d{3}-\d{4}/
<a href="http://bit.ly/fRMAge">See phone number example</a>

<h4>Bar operator</h4>
Additionally, if you wish to choose between different sequences of multiple characters, the bar operator (|) serves as a means to extract one of the sequences. 
For example, the pattern /Do not (eat|hit|fight|scratch) the cat/ matches
<ul>
<li>Do not eat the cat</li>
<li>Do not hit the cat</li>
<li>Do not fight the cat</li>
<li>Do not scratch the cat</li>
</ul>
<a href="http://bit.ly/gUySV4">See the cat example</a>

<h2>Resources</h2>
There are some great resources for learning regular expressions on the web. As you've seen throughout the article, I've referenced <a href="http://regexpal.com">RegexPal</a> many times. RegexPal is an invaluable tool for testing your regular expressions.

As for books, I highly recommend the e-book available from <a href="http://www.regular-expressions.info/print.html">Regular-Expressions.info</a>. For only $5, you can get one of the most comprehensive publications on Regular Expressions available.

<h2>Next Article</h2>
My next article over RegEx will cover back-references and anchors, two critical concepts related to Regular Expressions. Be sure to <a href="http://www.vertstudios.com/blog/feed/">subscribe</a> so you don't miss it!
]]></content>
    <excerpt><![CDATA[Regular expressions are a mysterious, extremely useful programming tool. The syntax of Regular Expressions(RegEx) can be extremely daunting for those starting out. Additionally, I've found a lot of RegEx intro guides to be extremely vague, which personally turned me off to learning RegEx for many months. For a while, my "knowledge base" of RegEx consisted of copying and pasting Regular Expression snippets as needed. However, this guide will introduce you to the basics of Regular Expressions in a hopefully extremely accessible manner. ]]></excerpt>
  </item>
  <item>
    <title>Back References, Quantifiers, and Anchors in RegEx</title>
    <link>http://www.vertstudios.com/blog/back-references-quantifiers-and-anchors-in-regex/</link>
    <pubdate>Fri, 07 Jan 2011 10:18:34 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2308</guid>
    <description></description>
    <content><![CDATA[This article will cover some intermediate concepts concerning regular expressions. If you're not acquainted with the basics of regex, check out our article, <a href="http://www.vertstudios.com/blog/introduction-to-regular-expressions/">Introduction to Regular Expressions</a>. 

When you begin delving further into regular expressions, you find just how useful they are. The combination of back references, quantifiers, and anchors causes RegEx to be one of the most powerful tools in your arsenal. 

<h2>Conventions</h2>
Throughout this article, all patterns will be delimited by slashes (/pattern/). Note that the slashes are not part of the pattern, but merely indicate where the pattern begins and ends. That's why you will not see the slashes in RegexPal examples provided throughout the article. For convenience, in some examples involving anchors, ^$ match at line breaks. In other words, each new line for those examples simulates a different string. Be sure to keep this in mind while learning the concepts. 

<h2>Quantifiers(Revisited)</h2>
Our introduction to regular expressions article discussed the basics of quantifiers. For your convenience, here is the table from that article.

<table>
<tr><th>Quantifier</th><th>Description</th></tr>
<tr><td>?</td><td>0 or 1 occurrences (optional)</td></tr>
<tr><td>*</td><td>0 or more occurrences</td></tr>
<tr><td>+</td><td>1 or more occurrences</td></tr>
<tr><td>{x}</td><td>Exactly x number of occurrences</td></tr>
<tr><td>{x, y}</td><td>Between x and y number of occurrences</td></tr>
<tr><td>{x,}</td><td>At least x number of occurrences</td></tr>
</table>

Also recall that in order to apply a quantifier or bar operator to a sequence of characters, you'll need to use parenthesis. 
The pattern /face(b|cr)ook/ matches 
<ul>
<li>facebook</li>
<li>facecrook</li>
</ul>
<a href="http://bit.ly/h4YqBt">See the facebook example</a>

<h3>Example: Constructing an Email Pattern</h3>
Quantifiers are extremely useful when combined with character classes. Consider the most basic email address: Name1@domain.com
We'll define an email address as:
<blockquote>
2 or more alphanumeric characters,
followed by the @ symbol,
followed by 2 or more alphanumeric characters,
followed by a period,
followed by at least 2 alphabetic characters. 
</blockquote>
(This definition of an email pattern should not be used in a real application. This simple and strict definition is just easier to learn with. )

So valid email addresses would be joseph@vertstudios.com, myEmail9090@haha1.com
The following would be invalid email addresses: j0$eph@@vertstudios.com,  justin@vertstudios

Using our quantifier definitions, let's build this pattern line by line using our definition. 

<h4>2 or more alphanumeric characters</h4>
An alphanumeric character is any letter of the alphabet (both lowercase and upper case) or any number between 0 and 9. This can be represented by [a-zA-Z0-9]. Refer to the introduction article if you're unfamiliar with ranges in character classes. 

So we need an alphanumeric character to repeat at least twice. Referring to the quantifier table above, we see that the last row contains the quantifier that suits this need. So, in order to specify at least two alphanumeric characters, the pattern would be <pre class="prettyprint">/[a-zA-Z0-9]{2,}/</pre>

<h4>followed by the @ symbol</h4>
Since the @ symbol is not a special character, adding the symbol immediately after our previous pattern will require the @ character to be placed after the alphanumeric characters.
<pre class="prettyprint">/[a-zA-Z0-9]{2,}@/</pre>

<h4>followed by 2 or more alphanumeric characters</h4>
Notice we already defined the  pattern for 2 or more alphanumeric characters. Simply append that to what we have so far. 
<pre class="prettyprint">/[a-zA-Z0-9]{2,}@[a-zA-Z0-9]{2,}/</pre>

<h4>followed by a period</h4>
Since a period is a special character, we must escape it. 
<pre class="prettyprint">/[a-zA-Z0-9]{2,}@[a-zA-Z0-9]{2,}\./</pre>


<h4>followed by at least 2 alphabetic characters</h4>
Now we want at least 2 alphabetic characters. This will represent the com, edu, etc. This pattern will be similar to our alphanumeric pattern used earlier, but without the numbers in the character class. After including this pattern, we arrive at our final product. 
<pre class="prettyprint">/[a-zA-Z0-9]{2,}@[a-zA-Z0-9]{2,}\.[a-zA-Z]{2,}/</pre>

<a href="http://bit.ly/fdgY6i">View our email example</a>

<h3>Negated Character Classes and Quantifiers</h3>
One of the most amazing 1-2 punches you can throw as a developer using RegEx is the union of negated character classes and quantifiers. 


<h4>Example: Matching HTML Elements</h4>
Say you wanted to match all the opening and closing tags of some HTML. There are a TON of characters that are allowed to be in an HTML document, so attempting to match the tags through a normal character class would be extremely cumbersome. However, we can easily avoid this issue by logically analyzing an HTML tag. 

<h5>What is an HTML tag?</h5>
HTML tags begin with &lt; and end with &gt;. For example, the line break tag &lt;br /&gt;. Since &gt; denotes the end of the tag, it makes sense to say that everything in between &lt; and &gt; is a character that is not &gt;. Thus, in order to match the contents of an HTML tag, the following pattern is used:
<pre class="prettyprint">/&lt;[^&gt;]+&gt;/</pre>
This pattern says: 
"Match a &lt; followed by one or more of any character that is not a &gt;, followed by &gt;. "
<a href="http://bit.ly/icEs4I">See Match all HTML Tags Example</a>


If you wanted to be a bit more specific and find XHTML non-paired tags (such as &lt;link /&gt; and &lt;img /&gt;) you could modify the pattern to include the slash before the closing tag. 
<pre class="prettyprint">/&lt;[^&gt;]+/&gt;/</pre>
<a href="http://bit.ly/hHTeFU">See Self-closing XHTML tags Example</a>

Using the logic of these examples, you can expand your regular expressions into tools of absolute efficiency. 
<h2>Anchors</h2>
Sometimes where you want to begin and end the search for a pattern is as important as the content of the pattern itself. This is especially true concerning validation of user input. Consider our regex for an email that we created earlier:
<pre class="prettyprint">/[a-zA-Z0-9]{2,}@[a-zA-Z0-9]{2,}\.[a-zA-Z]{2,}/</pre>

If we were processing user input from a form through JS or PHP, the following would match the pattern:
<ul>
<li>joseph@vertstudios.com</li>
<li>joseph@vertstudios.com IS A LOSER</li>
<li>(<a href="http://en.wikipedia.org/wiki/Cross-site_scripting">XSS</a> Here!) joseph@vertstudios.com</li>
</ul>

Without implementing an anchor, our pattern can be applied anywhere in the string we're testing. 
<a href="http://bit.ly/eG2tPE">See email regex without anchors</a>

<h3>Start of String Anchor</h3>
When used at the beginning of the pattern and outside of a character class, the caret (^) "matches" the position before the first character in the string being tested. In other words, the pattern will find a match only if the first character after ^ is matched. Unlike how /[a-z]/ matches a lowercase letter, the caret does not represent a value (unless <a href="http://www.regular-expressions.info/anchors.html">multi-line mode</a> is enabled).

For example, /^a/ matches the first character in the string "about" since the first character in the string "about" is the lowercase letter a. /^c/ does NOT match anywhere in the string "acute" since c is not the first character of the string. 

As another example, say you want to match strings that have only alphanumeric characters, but begin with a letter. The pattern would be
<pre class="prettyprint">/^[a-zA-Z][a-zA-Z0-9]*/</pre>
<a href="http://bit.ly/giGDlL">See beginning anchor example</a> Note: ^$ match at line breaks to simulate multiple strings

<h3>End of String Anchor</h3>
Similar to the start of string anchor, when the dollar sign symbol ($) is placed at the end of the pattern and outside of a character class, it matches the position after the last character in the string tested. In other words, the pattern will find a match only if the pattern ends with the character before $. Similar to the caret, $ does not explicitly represent a character unless multi-line mode is enabled. 

For example, /[0-9]$/ matches "h20" since the last character is a number. However, that pattern will not match the string "You have 5 dollars" since it does not end in a digit. 
<a href="http://bit.ly/eotWor">See ending anchor example</a> Note: ^$ match at line breaks to simulate multiple strings

<h3>Combining the Anchors</h3>
By placing the ^ at the beginning of the Regex pattern and $ at the end, you're essentially saying that the string being tested against the pattern must not only contain the pattern, it can't contain any more than what the pattern specifies. It has to match the pattern exactly: Nothing more, nothing less. 

As an example, let's examine the following pattern:
<pre class="prettyprint">/^[0-9]{3,} +[a-zA-Z .]+$/</pre>
This pattern reads: A string that begins with at least 3 numbers, followed by 1 or more spaces, ending with 1 or more alphanumeric characters, spaces, or periods. 
Look familiar? 

Consider the string "1725 North Haynie Avenue". It starts with at least 3 numbers, followed by a space, ending with a sequence of alphabetic characters and spaces. 
We see that the regex pattern can be interpreted as a very loose definition for a US street address. 

<h4>Combining Anchors is Imperative for Validation</h4>
If you are validating user input from a form, you <b>MUST</b> use both anchors. Let's consider our Email example again. Recall how an email address contained anywhere in our test string would trigger a match. Thus, a bot or mischievous developer can embed more than the characters of an email address into the form field. To prevent this, we adjust our regex to include anchors.

Before:
<pre class="prettyprint">/[a-zA-Z0-9]{2,}@[a-zA-Z0-9]{2,}\.[a-zA-Z]{2,}/</pre>
<a href="http://bit.ly/eG2tPE">See email validation without anchors</a>

After:
<pre class="prettyprint">/^[a-zA-Z0-9]{2,}@[a-zA-Z0-9]{2,}\.[a-zA-Z]{2,}$/</pre>
<a href="http://bit.ly/fPQszu">See email validation with anchors</a>

Note the differences in the two examples: Before the anchors were in place, every string matched the pattern. However, after the anchors were placed in the pattern, only the top string matched an email address. 

Make sure to mind your anchors, otherwise the usefulness of the rest of your pattern can easily be nullified. 

<h2> Back References </h2>
Now that we've discussed quantifiers and anchors, let's combine our current knowledge with the concept of back references. Back references allow you to refer to the characters matched earlier in the regex pattern definition. Back references are always defined using parenthesis. For this tutorial, the backslash (\) will be used to call back references. Check the syntax of your development language to see how to call back references.

For example, consider the regex pattern <pre class="prettyprint">/^([0-9])\s*=\s*\1$/</pre>
The pattern reads: Match a string that begins with a single digit, followed by 0 or more spaces, followed by the equals sign, followed by 0 or more spaces, ending with the digit matched at the beginning of the string.
The following strings match the pattern:
<ul>
<li>1=1</li>
<li>2= 2</li>
<li>3 = 3</li>
</ul>
The following strings do not match the pattern:
<ul>
<li>10 = 10</li>
<li>5=3</li>
</ul>
<a href="http://bit.ly/h1feby">See equality back-reference example</a>

Note that what we wrapped what we wanted to refer back to in parenthesis. To refer to the matched characters later in the pattern, we use \ and the number that corresponds to the reference. Reference numbers begin with 1, and usually go up to 9.  The first set of parenthesis starting from the left is referred to with a 1. The next set, 2, and so on.

To demonstrate the usage of multiple back references, consider this pattern that describes the <a href="http://en.wikipedia.org/wiki/Commutativity">commutative property</a>. <pre class="prettyprint">/^([0-9])\+([0-9])=\2\+\1$/</pre>
The pattern reads: Match a string that begins with a single digit, followed by a plus sign, followed by a single digit, followed by an equal sign, followed by the second digit matched, followed by a plus sign, ending with the first digit matched.

This pattern will match
<ul>
<li>5+3=3+5</li>
<li>2+1=1+2</li>
<li>9+7=7+9</li>
</ul>

This pattern will not match
<ul>
<li>9+3=2+1</li>
<li>9=9</li>
<li>3+3=3+3+0</li>
</ul>
<a href="http://bit.ly/dUtBuN">See commutative property example</a>

<h2>Next Article</h2>
My next article over Regex will describe the use of Regular Expressions in IDEs. It will provide plenty of great examples over combining all the concepts discussed in this article. Be sure to <a href="http://www.vertstudios.com/blog/feed">Subscribe</a> so you don't miss it! ]]></content>
    <excerpt><![CDATA[When you begin delving further into regular expressions, you find just how useful they are. The combination of back references, quantifiers, and anchors causes RegEx to be one of the most powerful tools in your arsenal. ]]></excerpt>
  </item>
  <item>
    <title>IDE Friday: A New Series from Vert Studios</title>
    <link>http://www.vertstudios.com/blog/ide-friday-new-series/</link>
    <pubdate>Sat, 08 Jan 2011 10:05:25 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2400</guid>
    <description></description>
    <content><![CDATA[We're excited to announce that starting next Friday, Vert Studios will begin the IDE Friday series. 

<h2>What Will it Cover?</h2>
IDE Friday will offer reviews of various IDEs, along with specific tutorials for each. We'll venture into well known IDEs, as well as some development environments that have not yet hit mainstream.

<h2>Who Can Benefit?</h2>
Designers and Developers alike can benefit from IDE Friday. The topics discussed will not be specific to a language, so anyone using some form of text document can benefit from the tutorials offered.

<h2>What will IDE Friday do for Me?</h2>
IDE Friday will teach you how to greatly improve productivity in your development environment. We hope that by following IDE Friday, you'll learn a new concept that makes work life during the week more productive, and ultimately more enjoyable. We'll be discussing macros, commands, snippets, regular expressions, and other invaluable tools for aiding your work flow. 

<h2>Isn't a Text Editor just a Text Editor?</h2>
No way! IDEs have so many tools available to the developer/designer that shamefully go unused! Many time saving features are completely ignored, simply because we have a tendency to see that blinking text scroller and <b>GO GO GO</b>. 

<h2>Subscribe</h2>
We're looking forward to sharing this unique series with the web design and web development community. <a href="http://www.vertstudios.com/blog/feed/">Subscribe to the blog</a> so you don't miss a post! Also, if you have a particular IDE you'd like reviewed, let us know in the comments below!
]]></content>
    <excerpt><![CDATA[We're excited to announce that starting next Friday, Vert Studios will begin the IDE Friday series. 
IDE Friday will offer reviews of various IDEs, along with specific tutorials for each. We'll venture into well known IDEs, as well as some development environments that have not yet hit mainstream.]]></excerpt>
  </item>
  <item>
    <title>Vert 2.0, A Redesign Case Study Close to Home</title>
    <link>http://www.vertstudios.com/blog/vert-redesign-case-study/</link>
    <pubdate>Mon, 10 Jan 2011 10:51:42 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2466</guid>
    <description></description>
    <content><![CDATA[Welcome to the new Vert Studios website. <a href="http://twitter.com/vertjustin">Justin</a> and I have been working on the redesign since we merged back in July 2010. It's such a great feeling to know the world can finally see the product of your hard work. The project was dynamic, as our vision for Vert Studios changed quite frequently throughout the project. We'd like to share our thought process behind the redesign. 

<h2>The Need for Change</h2>
When considering whether or not you should redesign a website, the most important question you should ask yourself is "Why?". A redesign for redesign's sake usually leads to disappointment. Do you want to increase conversion rates? Are users confused by the layout? Does the current site cause your business to be perceived as outdated? If you don't have a definite answer as to why you want to redesign a website, you might want to consider making small adjustments instead of redesigning. 

In the case of Vert Studios, there were two main reasons why the site needed to be redesigned.
<h3>Along came a JoeQuery</h3>
Originally, Vert Studios was a one-man shop run by Justin Edwards. At the time, I was running my own sole proprietorship by the name of McCullough Designs. In the summer of 2010, Justin and I met up for coffee to chat about web design. We discussed the markets, our competitors, our strengths, and our weaknesses. It was evident that Justin lacked development skills, and it was (more than) evident that I lacked design skills. After a few more chats, we decided we could provide higher quality work if we worked together. So in July of 2010, we merged under Vert Studios.

What does that have to do with a redesign?

The moment I joined Vert Studios, the personality of the company changed. Though Justin and I do have many things in common, we differ on many levels.
<ul>
<li>Justin's a Mac. I'm a PC.</li>
<li>Justin can apply a pop-culture reference to any situation.</li>
<li>Justin's been featured in an art show. My artistic ability stops at stick figure.</li>
</ul>

Justin did a great job of showing his artistic personality through the Vert website.
<img src="http://www.vertstudios.com/blog/images/vert-redesign/monitor.jpg" title="Old Vert Studios website" alt="Original Vert Studios Site" />

But while paintbrush strokes and a plant portrayed Justin's personality, it no longer portrayed the personality of the company as a whole. Since we believe web design should represent exactly who you are, keeping the verdant website would go against our own design philosophy. We had to find a middle ground that blended Justin's artistic personality with my extremely techy personality. 

In summary, the clash between the web design's presentation of our business image and our actual business image sparked the need for a redesign. 

<h3>Look What I Can Do!</h3>
Every designer knows design is composed of form and function. Every developer knows that you should never implement programming tools "just because". We agree with these ideas 100%. However, Justin and I felt that a little extra flare would help showcase our technical capabilities. I'm one of the only developers in East Texas that develops jQuery plugins. In order to show potential clients how that adds value to them, we obviously needed to let them experience the power of jQuery themselves. As Justin's strength lies in design, the most technical item on his site was a pre-packaged jQuery slideshow. We decided that we needed a website that would allow for many custom jQuery plugin implementations. We came up with some cool ideas. While "cool" is not "innovative user experience design engagement 2.0", we felt that as long as "cool" was always accompanied by "useful", potential clients could benefit from seeing our cool, quirky ideas put into action. The site simply did not have the visual structure that would allow for seamless jQuery effects.

<h2>The Company Personality</h2>
In order to produce an effective design, we had to establish what goals our design needed to achieve. To establish the goals, we came up with a list of adjectives that describe and do NOT describe our company. 
<h3>Describes Vert Studios</h3>
While we came up with many words to describe ourselves and the Vert persona, the words boiled down to
<ul>
<li>Quirky</li>
<li>Competitive</li>
</ul>
<h3>Does NOT Describe Vert Studios</h3>
Similarly, there are many characteristics that we did NOT want Vert to embody. The main ones were
<ul>
<li>Corporate</li>
<li>Tame</li>
<li>Boring</li>
</ul>

We wanted to avoid the suit-and-tie-corporate-web-2.0 persona at all costs. Some businesses feel that they must <a href="http://www.vertstudios.com/blog/its-ok-for-your-business-to-have-a-personality/">sacrifice their personality</a> in order to gain trust, respect, and ultimately clients. That is completely untrue. In order to let potential clients know it's okay for their website to have personality, our website had to <em>overflow </em> with it. 

Let's examine how our design, development, and copy achieved our goal of representing a quirky and competitive web design company.
<h2>Quirky</h2>
<em>quirky — adj. containing many individual peculiarities of character.</em>

<h3>Design</h3>
The irregular polygon reiterated throughout the entire site, which we have termed "The Bubble", promotes the theme of quirkiness. 
<img src="http://www.vertstudios.com/blog/images/vert-redesign/bubble1.jpg" alt="Vert Studios Bubble" />
<img src="http://www.vertstudios.com/blog/images/vert-redesign/bubble3.jpg" alt="Vert Studios Bubble" />
<img src="http://www.vertstudios.com/blog/images/vert-redesign/bubble4.jpg" alt="Vert Studios Bubble" />

Notice how the polygon very closely resembles a rectangle. That is, however, until the last "moment", when the shape deviates to a right triangle. This peculiarity and deviation from angular uniformity mirrors our core value of "be different".

<h3>Development</h3>
Quirky + jQuery = FUN. Most of the jQuery quirkiness takes place on the <a href="http://www.vertstudios.com/work.php">work page</a>.   I told Justin that I really wanted to break away from the <a href="http://www.lokeshdhakar.com/projects/lightbox2/">Lightbox</a> style portfolio showcase. We decided a scrolling effect would be effective, but instead of a <a href="http://www.vertstudios.com/blog/jquery-sticky-scroller-position-fixed-plugin/">sticky scroller</a>, I authored another plugin that triggers a callback each time the user scrolls a specified number of pixels. In this case, the text in "The Bubble" changes as it moves, and the image that correlates with the position fades to full opacity. This leads to a unique, engaging, and overall fun experience. 

When the user browses to the end of the work page, they are (pleasantly) surprised with a contact form, with the "Name" input field conveniently focused. We've noticed through analytics that quote requests usually come directly after a visit to our work page. To prevent the user from needing to scroll all the way up, then find and the contact link, we simply placed a form right by the work that motivated the action to contact us.

<img src="http://www.vertstudios.com/blog/images/vert-redesign/workform2.jpg" alt="Vert Studios Work Form" />
Note the "If you're afraid to be different, this link is for you". I invite you to scroll to the bottom of the work page and <a href="http://www.vertstudios.com/work.php">try it out yourself</a> ;)

The form validates both on the client and server side thanks to our <a href="http://www.vertstudios.com/blog/javascript-regex-class/">JavaScript</a> and <a href="http://www.vertstudios.com/blog/php-regex-class/">PHP</a> Regex Libraries, and a versatile validation plugin that we'll be releasing soon. On the client side, an example for the current field with focus will appear in the bubble. 
<img src="http://www.vertstudios.com/blog/images/vert-redesign/workform1.jpg" alt="Vert Studios Work Form" />

I had a lot of fun with the site development, which was the whole point. We're a fun company, and we're not afraid to show it. 

<h3>Copywriting</h3>
First and foremost, we'd like to thank <a href="http://twitter.com/agirlnamedelise">Elise Brooking</a> for her phenomenal writing skills. While we ultimately had to make some adjustments for the sake of design, she was able to give us a rock solid foundation to work with. 

Our favorite quirky phrases include: 
<ul>
<li>We love cookies, but hate the cutter. (<a href="http://www.vertstudios.com/about.php">About</a>)</li>
<li>See what our work has to say. <b>WARNING:</b> It might get loud. (Navigation)</li>
<li>So go ahead, let your competition have that cookie cutter template while you turn up the heat with new business. They'll just be left with crumbs. (<a href="http://www.vertstudios.com/about.php">About</a>)</li>
</ul>

<h2>Competitive</h2>
<em>competitive — adj. having a strong desire to compete or to succeed.</em>

<h3>Design</h3>
Justin and I strive to be the best at what we do. We take hours out of the week to read tutorials, explore new ideas, and create jQuery plugins, all for the sake of creating a better product. The best way to represent our competitive nature was to simply showcase our work such that it's immediately subject to scrutiny. 
<img src="http://www.vertstudios.com/blog/images/vert-redesign/work1.jpg" alt="Vert Studios Work Page" />

Instead of the typical thumbnails or plain text link, we put our work out in large screen shots. We don't attempt to hide behind a client's name. It doesn't matter if you did So-and-So's website if it looks awful. We're confident in the quality of our work, so we let the world see it with no constraints. 

<h3>Development</h3>
One major differentiating factor between Vert Studios and other local web design companies is our blog. It's easily the most updated web design blog in East Texas. It not only showcases our expertise, it provides valuable <a href="http://www.vertstudios.com/blog/client-resources">client resources</a> for prospects. We have articles that describe how web design works, red flags for scam indicators, and much more.  Thus, we decided to implement a carousel on the home page that displays recent blog posts by pulling from our <a href="http://www.vertstudios.com/blog/feed">RSS feed</a>. 

<img src="http://www.vertstudios.com/blog/images/vert-redesign/from-the-blog.jpg" alt="Vert Studios, from the blog" />
We'll be publishing the jQuery used to power the carousel in the near future. But for the developers curious how to parse an RSS feed, PHP makes it super easy.

<div class="codeToggle">
<a href="#" class="codeTrigger">Click to toggle source code</a>
<div class="codeDisplay">
<pre class="prettyprint">
                       &lt;?php
                        date_default_timezone_set('America/Chicago');
                        
                        //Credit to http://www.cybercoded.com/parse/parse.txt
                        $url = &quot;rss.xml&quot;;
                        $rss =  simplexml_load_file($url);
            
                        //Set up a counter. We only want 6 snippets.
                        $count = 0;
                        $numPosts = 6;
                        
                        //Length of the description
                        $descLength = 90;
                        
                        foreach ($rss-&gt;channel-&gt;item as $item)
                        {
                                
                                echo $item;
                                if (++$count == $numPosts)
                                {
                                    break;
                                }
                                
                                $href = $item-&gt;link;
                                $title = $item-&gt;title;
                                $description = $item-&gt;description;
                                $date = new DateTime($item-&gt;pubdate);
                                $date = $date-&gt;format('n/j/y');
                $comments = $item-&gt;comments;
                                                                
                                //Remove links
                                $pattern = '/&lt;a\b[^&gt;]*&gt;([^&lt;]+)&lt;\/a&gt;/';
                                $replacement = '${1}';
                                $description = preg_replace($pattern, $replacement, $description);
                                
                                if (strlen($description) &gt;= $descLength)
                                {
                                    //Get substring
                                    $description = substr($description, 0, $descLength);
                                    
                                    //Get the last word, replace with Ellipse
                                    $description = substr($description, 0, strrpos($description, &quot; &quot;));
                                    $description .= &quot;...&quot;;
                                }
                                
                                //Add a first class for CSS purposes 
                                if($count == 1)
                                {
                                    echo '&lt;div class=&quot;post_snippet first&quot;&gt;';
                                }
                                else
                                {
                                    echo '&lt;div class=&quot;post_snippet&quot;&gt;';
                                }
                                
                                
                                //Prevent moderate titles from bumping into dismiss button.
                                if( strlen($title)&gt;18 &amp;&amp; strlen($title)&lt;25 )
                                {
                                    echo &quot;&lt;h4&gt;&lt;a href=\&quot;$href\&quot;&gt;$title&lt;/a&gt;&lt;br /&gt; - $date&lt;/h4&gt;&quot;;
                                }
                                else
                                {
                                    echo &quot;&lt;h4&gt;&lt;a href=\&quot;$href\&quot;&gt;$title&lt;/a&gt; - $date&lt;/h4&gt;&quot;;
                                }
                                echo &quot;&lt;p&gt;$description&lt;/p&gt;&quot;;
                                echo &quot;&lt;p class=\&quot;read_more\&quot;&gt;&lt;a href=\&quot;$href\&quot;&gt;Read More&lt;/a&gt; | &lt;a href=\&quot;$comments\&quot;&gt;View Comments&lt;/a&gt;&lt;/p&gt;&quot;;
                                echo '&lt;/div&gt;';                                
    
                        } 
                        ?&gt;
</pre>
</div>
</div>


<h3>Copywriting</h3>
We're not afraid of losing on quality. Our work speaks volumes about our capabilities, and this blog speaks volumes about how much effort we pour into our craft. Instead of hiding our competition from prospects, we let them know immediately we're not afraid if they browse. In fact, we encourage it. 
<img src="http://www.vertstudios.com/blog/images/vert-redesign/competitors.jpg" alt="Vert Studios competitors" />
(Found on the <a href="http://www.vertstudios.com/">Home page</a>.)

Here are some other phrases that display confidence and competitiveness. 
<ul>
<li>We take the time to learn the latest technologies as they appear - staying step ahead of our competition, and allowing you to do the same.(<a href="http://www.vertstudios.com/about.php">About</a>)</li>
<li>The word "template" doesn't exist in our vocabulary. We know what it means to stand out from the crowd.(<a href="http://www.vertstudios.com/about.php">About</a>)</li>
<li>Great design is one thing. Elegant programing is another. Luckily we do both.(<a href="http://www.vertstudios.com/services.php">Services</a>)</li>
</ul>

<h2>Coming Soon</h2>
Although we're extremely excited about the launch of our new site, we still have plenty of work left to do. We're already beginning to work on a mobile version of the site. Many graphics and JavaScript files are way too CPU intensive for a mobile browser. 

<h2>What do you think of the new site?</h2>
Let us know in the comments below! ]]></content>
    <excerpt><![CDATA[Welcome to the new Vert Studios website. <a href="http://twitter.com/vertjustin">Justin</a> and I have been working on the redesign since we merged back in July 2010. It's such a great feeling to know the world can finally see the product of your hard work. The project was dynamic, as our vision for Vert Studios changed quite frequently throughout the project. We'd like to share our thought process behind the redesign. ]]></excerpt>
  </item>
  <item>
    <title>Double Squares Solution: Facebook Hacker Cup</title>
    <link>http://www.vertstudios.com/blog/double-squares-solution-facebook-hacker-cup/</link>
    <pubdate>Wed, 12 Jan 2011 04:06:52 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2579</guid>
    <description></description>
    <content><![CDATA[Now that the qualification round of the Facebook Hacker Cup has ended, I figured I'd post my solution to the Double Squares problem. As this one involved some fun math, it was my favorite. I hope you all made it through!

<h2>Problem</h2>
Double Squares
A double-square number is an integer X which can be expressed as the sum of two perfect squares. For example, 10 is a double-square because 10 = 3<sup>2</sup> + 1<sup>2</sup>. Your task in this problem is, given X, determine the number of ways in which it can be written as the sum of two squares. For example, 10 can only be written as 3<sup>2</sup> + 1<sup>2</sup> (we don't count 1<sup>2</sup> + 3<sup>2</sup> as being different). On the other hand, 25 can be written as 5<sup>2</sup> + 0<sup>2</sup> or as 4<sup>2</sup> + 3<sup>2</sup>.

Input
You should first read an integer N, the number of test cases. The next N lines will contain N values of X.
Constraints
0 ≤ X ≤ 2147483647
1 ≤ N ≤ 100
Output
For each value of X, you should output the number of ways to write X as the sum of two squares.

<h2>Provided Input File</h2>
<pre class="prettyprint">
20
1148284322
1538292481
2147483644
4225
2
415485223
2147483642
801125
1369439656
148208125
421330820
25
2147483647
65
874566596
4
625058908
326122507
1941554117
3
</pre>

<h2>Source Code</h2>
<pre class="prettyprint">
&lt;?php
//------------------------------------------------------------
// File: doublesquare.php
// Purpose: Double Square question
// Author: Joseph McCullough (@joe_query) 
// Last Updated: Jan 07, 2011
//------------------------------------------------------------

//------------Input and Output File Definitions--------------//
//Open input file
$input = fopen(&quot;input.txt&quot;, &quot;r&quot;);

//Open output file
$output = fopen(&quot;output.txt&quot;, &quot;w&quot;);

//Get number of iterations, via the first line in the input file
$iterations = fgets($input);
$iterationCounter = 0;
//------------------------------------------------------------//

//-------------------Perfect Square Variables-----------------//
//val: The value being tested
//difference: The difference between two perfect squares
//squares: Arrays containing the squares that add to val
//first: The first square to be subtracted
//------------------------------------------------------------//    
$difference;

//While we have a line and we haven't passed the iterationCounter
while ($iterationCounter &lt; $iterations &amp;&amp; $val = fgets($input))
{
    $val = intval($val);
    $first = floor( sqrt($val) );
    
    //Clear array
    $squares = array();
    
    //Iterate through each perfect square less than or equal to $first until 0,
    //or until the first repeat value is found in $squares array
    for($i=$first; $i&gt;=0; $i--)
    {
        $difference = $val - pow($i, 2);
        if( isPerfectSquare($difference) )
        {
            //Take square root of difference for convenience
            $difference = sqrt($difference);
            
            //Make sure this value pair has not already been recorded. If it has
            //been, break from the loop. If not, push values to the array.
            if( !(in_array($difference, $squares) || in_array($i,$squares)) )
            {
                array_push($squares, $i, $difference);
            }
            else
            {
                break;            
            }
        }
    }
    
    //Output the number of perfect square combinations to make $val
    fwrite($output, sizeof($squares)/2 . &quot;\n&quot;);
    $iterationCounter++;
}

//Close our files. 
fclose ($input);
fclose ($output);

//Function that determines if a value has a perfect square
//$int: Value being tested. 
function isPerfectSquare($int)
{
    $temp = sqrt($int);
    
    //If $temp is an integer, it's a perfect square. Must chcek $temp against
    //the truncated version of itself since sqrt returns a double. 
    return $temp == intval($temp);
}
?&gt;
</pre>
<h2>Output</h2>
This output was declared correct by the Hacker Cup judges. Woohoo!
<pre class="prettyprint">
1
2
0
5
1
0
0
16
4
40
4
2
0
2
1
1
0
0
1
0
</pre>

<h2>Your Algorithm</h2>
If you participated in the Hacker Cup, I'm curious to know how you went about the problem. That's one of the amazing things about programming: So many different ways to think about any given problem. Leave your comments below! ]]></content>
    <excerpt><![CDATA[Now that the qualification round of the Facebook Hacker Cup has ended, I figured I'd post my solution to the Double Squares problem. As this one involved some fun math, it was my favorite. I hope you all made it through!]]></excerpt>
  </item>
  <item>
    <title>The Vert Web Design Dictionary</title>
    <link>http://www.vertstudios.com/blog/web-design-dictionary/</link>
    <pubdate>Wed, 12 Jan 2011 20:41:43 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2596</guid>
    <description></description>
    <content><![CDATA[If you're looking to hire a web design company, look through these terms so you won't get confused by web design jargon. If you're a web designer, refer prospects here so they'll be able to communicate with you better. This post won't cover every web related term - only the bare minimum to get designer and client on the same page. 

<style type="text/css">
a[name]{
font-size: 1.2em;
margin: 20px 0px 10px 0px;
display: block;
text-decoration: none;
} 
</style>

<h2>Web Design Terms</h2>
<a name="accessibility">Accessibility</a>The practice of coding websites to be useful for people with physical impairments and older browsers. 

<a name="backend">Back-end</a>Opposite of <a href="#frontend">Front-end</a>. The back-end of a website is where <a href="#server-side">server-side</a> programming takes place. Common tasks performed on the back-end include shopping carts, user account logins, <a href="#validation">validation</a>, and registration.

<a name="browser">Browser</a>Software that interprets <a href="#html">HTML</a> and <a href="#server">server</a> messages, allowing the user to view a website. Common browsers include Google Chrome, FireFox, and Safari. Some people consider Internet Explorer a browser. We don't. 

<a name="client-side">Client-side Programming</a>Opposite of <a href="#server-side">Server-side Programming</a>. Client side programming involves giving the client (usually a <a href="#browser">browser</a>) instructions on storing, retrieving, and outputting data. Animations and effects can be achieved using client-side programming languages such as <a href="#javascript">JavaScript</a>

<a name="conversion">Conversion</a>A visitor is said to convert when they engage in a predetermined action that relates to a primary or secondary objective of the website. Common examples of conversions are purchases, subscriptions to RSS feeds, Retweets, twitter follows, Facebook likes, quote requests, etc. 

<a name="conversion-rate">Conversion Rate</a>A percentage of visitors that <a href="#conversion">convert</a>. If 1 in 20 visitors convert, the website has a conversion rate of 5%. 

<a name="css">CSS</a>A <a href="#client-side">client-side</a> language that is used to layout a website in the <a href="#browser">browser</a>.

<a name="database">Database</a>A structure used to store potentially large amounts of data. A <a href="#server-side">server-side</a> programming language is required to display information from a database onto a web page. 

<a name="domain">Domain Name</a>A virtual address for a website. Example domains include: 
<ul>
vertstudios.com
wikipedia.org
google.com
</ul>

<a name="frontend">Front-end</a>The front end of a website is where <a href="#client-side">Client-side programming</a> takes place. Creating the front-end of a website usually consists of <a href="#slice">slicing</a> a <a href="#psd">PSD</a>, coding with <a href="#html">HTML</a> and <a href="#css">CSS</a>, and touching up with some <a href="#javascript">JavaScript</a>. 

<a name="html">HTML</a>Hyper Text Markup Language. It's the core language that enables <a href="#browser">browsers</a> to interpret text, images, audio, video, everything you see in a browser. 

<a name="hosting">Hosting</a>Storing files on a <a href="#server">server</a>. Hosts charge for the electricity needed to keep servers running 24/7, and the cost of storage itself. 

<a name="javascript">JavaScript</a>A <a href="#client-side">client-side</a> programming language responsible for many neat effects that take place in the <a href="#browser">browser</a>. Two common uses of JavaScript are animation and <a href="#validation">validation</a>. More importantly, JavaScript is the fuel for many web application interfaces, such as <a href="http://mail.google.com">Gmail</a> and <a href="http://www.rememberthemilk.com">Remember The Milk</a>. 

<a name="mockup">Mock-up</a>An image preview of a website. You can not interact with mock-ups like you can a normal website, simply because they are just static images that indicate the direction of the design.

<a name="psd">PSD</a>Photo Shop Document. Photo Shop is software used by many designers to create <a href="#mockup">mock-ups</a> of websites along with other illustrations. 

<a name="roi">ROI</a><b>R</b>eturn <b>O</b>n <b>I</b>nvestment. The total amount of money your investment has earned you minus the cost of the investment. 

<a name="server">Server</a>Not to be confused with one who brings you food at Chilis. A server is a just a computer that stores and delivers data to other computers. When your website is being stored on a server, it is said to be "<a href="#hosting">hosted</a>" on that server. 

<a name="server-side">Server-side Programming</a>Opposite of <a href="#client-side">Client-side Programming</a>. Server side programming involves directly communicating with the server in order to store, retrieve, or output data. 

<a name="slice">Slice</a>To code a web page to resemble a <a href="#psd">PSD</a> using <a href="#client-side">Client-side</a> languages including <a href="#html">HTML</a>, <a href="#css">CSS,</a> and <a href="#javascript">JavaScript</a>. 

<a name="validation">Validation</a>Involves using <a href="#client-side">client-side</a> and <a href="#server-side">server-side</a> programming languages to make sure data received from a contact form is accurate. Serves as an effective method for decreasing spam. 

<a name="wordpress">Wordpress</a>A popular blogging platform that is extremely user friendly. ]]></content>
    <excerpt><![CDATA[If you're looking to hire a web design company, look through these terms so you won't get confused by web design jargon. If you're a web designer, refer prospects here so they'll be able to communicate with you better. This post won't cover every web related term - only the bare minimum to get designer and client on the same page. ]]></excerpt>
  </item>
  <item>
    <title>Introduction to Logic: Part 3 – Useful Tautologies</title>
    <link>http://www.vertstudios.com/blog/introduction-to-logic-useful-tautologies/</link>
    <pubdate>Thu, 13 Jan 2011 19:09:21 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2661</guid>
    <description></description>
    <content><![CDATA[Tautologies are extremely useful when it comes to crafting conditional statements in your programs. They can simplify and condense your logical statements by large amounts when implemented successfully. 

<h2>Biconditional Statements</h2>
Tautologies are defined as logically equivalent statements, or more formally, biconditional statements. So a biconditional statement actually consists of two statements. 

The notation p&harr;q states that p and q are logically equivalent. Two statements are logically equivalent if for every possible combination of True and False, the ending logical value is the same.  Using a truth table, we can identify if two statements are logically equivalent. For example, let's take a tautology that is obvious.

p&harr;~(~p)

The negation of the negation of p is obviously equivalent to p, but let's use the truth table to show this. 
<table>
<tr><th>p</th><th>~p</th><th>~(~p)</th></tr>
<tr><td>T</td><td>F</td><td>T</td></tr>
<tr><td>F</td><td>T</td><td>F</td></tr>
</table>

Remember, the beautiful thing about the truth table is that you can refer to columns you've already filled in. So for the ~(~p) column, all we have to do is negate the ~p column. 

Since the values of p and ~(~p) are equal for every combination, we can say p&harr;~(~p), or p and ~(~p) are logical equivalent. 

Let's take a less obvious example. ~(p || q)&harr;(~p) && (~q). 
<table>
<tr><th>p</th><th>q</th><th>p||q</th><th>~(p||q)</th><th>~p</th><th>~q</th><th>(~p) && (~q)</th></tr>
<tr><td>T</td><td>T</td><td>T</td><th>F</th><td>F</td><td>F</td><th>F</th></tr>
<tr><td>T</td><td>F</td><td>T</td><th>F</th><td>F</td><td>T</td><th>F</th></tr>
<tr><td>F</td><td>T</td><td>T</td><th>F</th><td>T</td><td>F</td><th>F</th></tr>
<tr><td>F</td><td>F</td><td>F</td><th>T</th><td>T</td><td>T</td><th>T</th></tr>
</table>

We see that for every combination of True and False for p and q, the columns for ~(p||q) and (~p) && (~q) are the same. Thus, these statements are logically equivalent. 

To put tautologies into context, consider the compound statement "My iPhone is not wet or broken". An equivalent statement would be "My iPhone is not wet and my iPhone is not broken". This is a pretty intuitive statement, and it applies the tautology we just proved.

<h2>Useful Tautologies</h2>
Now that we've discussed what makes a tautology and how to prove one, here's a reference for useful tautologies you can implement throughout your program. Remember tautologies go "either direction". So you can convert a logical statement in the form of the left side of the arrows to the right side, and vice versa. 
<table>
<tr><td align="right">~(p || q)</td><td>&harr;</td><td align="left">(~p) && (~q)</td></tr>
<tr><td align="right">~(~p)</td><td>&harr;</td><td align="left">p</td></tr>
<tr><td align="right">(p || q) || r</td><td>&harr;</td><td align="left">p || (q || r)</td></tr>
<tr><td align="right">(p && q) || (p && r)</td><td>&harr;</td><td align="left">p && (q || r)</td></tr>
<tr><td align="right">p || (q && r)</td><td>&harr;</td><td align="left">(p || q) && (p || r)</td></tr>
<tr><td align="right">(p && q) && r</td><td>&harr;</td><td align="left">p && (q && r)</td></tr>
<tr><td align="right">~(p && q)</td><td>&harr;</td><td align="left">(~p) || (~q)</td></tr>
</table>]]></content>
    <excerpt><![CDATA[Tautologies are extremely useful when it comes to crafting conditional statements in your programs. They can simplify and condense your logical statements by large amounts when implemented successfully. ]]></excerpt>
  </item>
  <item>
    <title>IDE Friday: Using Regular Expressions in IDEs</title>
    <link>http://www.vertstudios.com/blog/using-regular-expressions-in-ides/</link>
    <pubdate>Sat, 15 Jan 2011 03:23:16 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2698</guid>
    <description></description>
    <content><![CDATA[Welcome to the first article in our IDE Friday series. Today, we'll be discussing the use of Regular Expressions in your IDE of choice. If you're unfamiliar with Regular Expressions, check out our tutorial series, beginning with the <a href="http://www.vertstudios.com/blog/introduction-to-regular-expressions/">Introduction to Regular Expressions</a>. 
 
<h2>Wait, isn't RegEx just for Form Validation?</h2> 

Many developers new to the world of Regular Expressions think that RegEx's sole purpose is for validating user input through a contact form. While of course RegEx is great for user input validation, it is in no way confined to that single task. 
 
<h2>RegEx as a Text Editing Tool</h2> 

Many IDE's and programming-oriented text editors have a Find and Replace functionality. Additionally, these Find and Replaces generally have an option for Regular Expression searches. 
 

Such as Notepad++<br /> 
<img src="http://www.vertstudios.com/blog/images/regex-ide/notepadpp.jpg" alt="Notepad++" />
 

And Komodo<br /> 
<img src="http://www.vertstudios.com/blog/images/regex-ide/komodo.jpg" alt="Komodo" />
 
<h2>Conventions</h2> 

In most IDEs/editors, special characters in the "Find" field need to be escaped. Characters in the "Replace" field do not need to be escaped except for the backslash '\'. This is because the backlash is used to refer to <a href="http://www.vertstudios.com/blog/back-references-quantifiers-and-anchors-in-regex/">back-references</a>. Keep in mind the entire text file is the string being tested, so the typical anchors are not needed. If you see a blank replacement, that's intentional! 
 
<h2>Find/Find and Replace Snippets</h2> 

The focal point of this article is providing useful snippets of find and replace code to make life easier when making large adjustments. Some snippets involve more than one step. When we cover macros, we'll show how to combine the multi-step patterns into a single executable command.
 
<h3>1) Clear all console.log() calls</h3> 

When debugging JavaScript, you may track your variables using console.log(). This RegEx eliminates the calls from the source. 
 
<pre class="prettyprint"> 
Find:\s*console.log\([^)]+\);?
Replace:
</pre> 
<h3>2) Make Relative Paths Absolute</h3> 

At times, you might want to take a relative path in an HTML document and make it absolute. This becomes especially useful when you're referencing JS files, images, and other pages from multiple directories.
 
<pre class="prettyprint"> 
Find:(src|href)=[&quot;'](\.\.\/)*([a-zA-Z0-9][a-zA-Z0-9\/_.-]+)\.([a-z]+)[&quot;']
Replace:\1=&quot;http://www.yourdomain.com/\3.\4&quot;
</pre> 

Example:
 
<pre class="prettyprint"> 
&lt;img src=&quot;../../images/image1.jpg&quot; alt=&quot;Image 1&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;../lib/js/js1.js&quot;&gt;&lt;/script&gt;
&lt;a href=&quot;index.php&quot;&gt;Home page&lt;/a&gt;
 
After Find and Replace All:
&lt;img src=&quot;http://www.yourdomain.com/images/image1.jpg&quot; alt=&quot;Image 1&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.yourdomain.com/lib/js/js1.js&quot;&gt;&lt;/script&gt;
&lt;a href=&quot;http://www.yourdomain.com/index.php&quot;&gt;Home page&lt;/a&gt;
</pre> 
<h3>3) Check for Non-Absolute Paths</h3> 

In the event you want all your paths to be absolute, this can ensure that you've done so correctly.<br /> 
*Assume absolute paths begin with http. 
 
<pre class="prettyprint"> 
Find:(src|href)=['&quot;][^h]
</pre> 
<h3>4) Add minified JavaScript File Reference</h3> 

This regex pattern allows you to transform a JavaScript file call with the pattern "filename.js" to "filename.min.js"
 
<pre class="prettyprint"> 
Find:&lt;script(.+)src=('|&quot;)([a-zA-Z0-9_.-]+)\.js\2
Replace:&lt;script\1src=\2\3.min.js\2
</pre> 
<h3>A Simple HTML Whitespace Remover</h3> 

This is by no means the most ideal HTML whitespace remover, but it demonstrates how powerful simple RegEx can be when implemented in a text editor.
 
<pre class="prettyprint"> 
Find:(&lt;[^&gt;]+&gt;)\s*
Replace:\1
</pre> 

Before:
 
<pre class="prettyprint"> 
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot; lang=&quot;en&quot;&gt; 
 
    &lt;head&gt;
      &lt;script type=&quot;text/javascript&quot;&gt;
            //Credit: Doug Neiner - http://dougneiner.com/
            document.documentElement.className += &quot; js&quot;
        &lt;/script&gt;
        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
    &lt;meta name=&quot;description&quot; content=&quot;View our web design services, and learn the approach we take in creating the most effective website for your business.&quot; /&gt;
    &lt;meta name=&quot;google-site-verification&quot; content=&quot;36dXXZZompgqJf0oUzUyoTOKJzW1wQ8uAVOJBpYimR8&quot; /&gt;
    &lt;meta name = &quot;viewport&quot; content = &quot;width=device-width, maximum-scale=1.0, initial-scale = 1, user-scalable = no&quot; /&gt;
    &lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt; 
 
    &lt;title&gt;Services | Vert Studios&lt;/title&gt; 
 
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/reset.css&quot; /&gt;
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/js.css&quot; /&gt;
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/text.css&quot; /&gt;
    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/main.css&quot; /&gt;
    &lt;link rel=&quot;apple-touch-icon&quot; href=&quot;apple-touch-icon.png&quot;/&gt; 
 
    &lt;/head&gt; 
 
    &lt;body id=&quot;services&quot;&gt; 
 
    &lt;div id=&quot;wrapper&quot;&gt; 
 
            &lt;div id=&quot;header&quot;&gt;
        &lt;div id=&quot;vertStudios&quot;&gt;&lt;a href=&quot;http://www.vertstudios.com/&quot;&gt;Vert Studios&lt;img src=&quot;http://www.vertstudios.com/images/vert_logo_header.png&quot; alt=&quot;Vert Logo&quot; /&gt;&lt;/a&gt;&lt;/div&gt; 
 
        &lt;ul id=&quot;main_nav&quot;&gt; 
 
          &lt;li&gt;
            &lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/about.php&quot;&gt;About&lt;/a&gt;&lt;/h5&gt;
            &lt;p&gt;We're a small web design company with big ideas in Tyler, Texas.&lt;/p&gt;
                      &lt;/li&gt; 
 
          &lt;li&gt;
            &lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/work.php&quot;&gt;Work&lt;/a&gt;&lt;/h5&gt;
            &lt;p&gt;See what our work has to say. &lt;b&gt;WARNING&lt;/b&gt;: &lt;br /&gt;It might get loud.&lt;/p&gt;
                      &lt;/li&gt; 
 
          &lt;li class=&quot;active&quot; &gt;
            &lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/services.php&quot;&gt;Services&lt;/a&gt;&lt;/h5&gt;
            &lt;p&gt;We design web sites that don't suck. We're quite proud of that.&lt;/p&gt;
            &lt;img src=&quot;images/nav_current.png&quot; alt=&quot;&quot; /&gt;         &lt;/li&gt; 
 
          &lt;li&gt;
            &lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/blog/&quot;&gt;Blog&lt;/a&gt;&lt;/h5&gt;
            &lt;p&gt;Read our articles on design, code, SEO, and the state of the web.&lt;/p&gt;
          &lt;/li&gt; 
 
          &lt;li&gt;
            &lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/contact.php&quot;&gt;Contact&lt;/a&gt;&lt;/h5&gt;
            &lt;p&gt;You've got ideas. Get in touch, and we'll put them into action.&lt;/p&gt;
                      &lt;/li&gt; 
 
        &lt;/ul&gt; 
 
      &lt;/div&gt; 
 
      &lt;div id=&quot;content&quot;&gt; 
 
        &lt;div id=&quot;sub_page_intro&quot;&gt; 
 
          &lt;h1&gt;Services&lt;/h1&gt;
          &lt;p&gt;We offer superior quality, functionality, and results for the following:&lt;/p&gt;
          &lt;ul&gt;
            &lt;li&gt;Web Design&lt;/li&gt;
            &lt;li&gt;Web Application Development&lt;/li&gt;
            &lt;li&gt;Mobile Web Design&lt;/li&gt;
            &lt;li&gt;Mobile Web Apps&lt;/li&gt;
          &lt;/ul&gt;
          &lt;img src=&quot;http://www.vertstudios.com/images/pointer.png&quot; alt=&quot;&quot; class=&quot;pointer&quot; /&gt;
        &lt;/div&gt; 
 
        &lt;div class=&quot;sub_page_1 clearfix&quot;&gt; 
 
          &lt;h2&gt;We Take a Strategic Approach&lt;/h2&gt;
          &lt;p&gt;&lt;em&gt;We identify your needs and provide results based on what's best for you.&lt;/em&gt;&lt;/p&gt;
          &lt;p&gt;In today's fast-paced world, a lot of focus is put on efficiency and instant-gratification. While we are efficient, we believe in first taking the time to clearly define what approach will best work for you and your company.&lt;/p&gt;
          &lt;p&gt;We address your current website challenges, identify problems, and deliver solutions that will make your business stand out from the competition.&lt;/p&gt;
          &lt;h3&gt;To Combine Form &amp;amp;amp; Function&lt;/h3&gt;
          &lt;p&gt;&lt;em&gt;Great design is one thing.&lt;br/&gt;Elegant programing is another.&lt;br/&gt;Luckily we do both.&lt;/em&gt;&lt;/p&gt;
          &lt;p&gt;There is nothing worse than losing hundreds of potential customers because of a poorly designed website. Is your layout beautiful, but lacking an engaging user experience? Is your content outstanding, but design amateurish? Our business is solving these problems to grow yours - both aesthetically and technically.&lt;/p&gt; 
 
        &lt;/div&gt; 
 
        &lt;div id=&quot;tertiary&quot;&gt; 
 
                    &lt;div id=&quot;what_now&quot;&gt;
            &lt;h2&gt;What Now?&lt;/h2&gt;
                        &lt;p&gt;To see our capabilities in action, check out &lt;a href=&quot;work.php&quot;&gt;our work&lt;/a&gt;.&lt;/p&gt;
                        &lt;p&gt;Interested in keeping up with web design or East Texas? Follow us on Twitter: &lt;a href=&quot;http://www.twitter.com/vertstudios&quot;&gt;@vertstudios&lt;/a&gt;, and subscribe to the &lt;a href=&quot;http://www.vertstudios.com/blog/&quot;&gt;Vert Studios Blog&lt;/a&gt;.&lt;/p&gt;
          &lt;/div&gt; 
 
        &lt;/div&gt;&lt;!--END tertiary--&gt; 
 
      &lt;/div&gt;&lt;!--END content--&gt; 
 
      &lt;div id=&quot;footer&quot;&gt; 
 
                &lt;div class=&quot;hr&quot;&gt;&lt;hr /&gt;&lt;/div&gt;
                &lt;p&gt; 903-920-9514 |
                    &lt;a href=&quot;mailto:hi@vertstudios.com&quot;&gt;hi@vertstudios.com&lt;/a&gt; |
                    &lt;a href=&quot;http://www.twitter.com/vertstudios&quot;&gt;@vertstudios&lt;/a&gt;&lt;/p&gt; 
 
      &lt;/div&gt; 
 
    &lt;/div&gt;&lt;!--END wrapper--&gt; 
 
      &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;http://www.vertstudios.com/vertlib.min.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;http://www.vertstudios.com/lib/js/jsCSS.js&quot;&gt;&lt;/script&gt; 
 
        &lt;!-- Start of StatCounter Code --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
var sc_project=6105522;
var sc_invisible=1;
var sc_security=&quot;e204ad62&quot;;
&lt;/script&gt; 
 
&lt;script type=&quot;text/javascript&quot;
src=&quot;http://www.statcounter.com/counter/counter_xhtml.js&quot;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;div
class=&quot;statcounter&quot;&gt;&lt;a title=&quot;free web stats&quot;
class=&quot;statcounter&quot;
href=&quot;http://www.statcounter.com/free_web_stats.html&quot;&gt;&lt;img
class=&quot;statcounter&quot;
src=&quot;http://c.statcounter.com/6105522/0/e204ad62/1/&quot;
alt=&quot;free web stats&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/noscript&gt;
&lt;!-- End of StatCounter Code --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    var gaJsHost = ((&quot;https:&quot; == document.location.protocol) ? &quot;https://ssl.&quot; : &quot;http://www.&quot;);
    document.write(unescape(&quot;%3Cscript src='&quot; + gaJsHost + &quot;google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E&quot;));
    &lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    try {
    var pageTracker = _gat._getTracker(&quot;UA-12513899-1&quot;);
    pageTracker._trackPageview();
    } catch(err) {}
&lt;/script&gt;
    &lt;/body&gt; 
 
&lt;/html&gt;
</pre> 

After:
 
<pre class="prettyprint"> 
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot; lang=&quot;en&quot;&gt;&lt;head&gt;&lt;script type=&quot;text/javascript&quot;&gt;//Credit: Doug Neiner - http://dougneiner.com/
            document.documentElement.className += &quot; js&quot;
        &lt;/script&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;&lt;meta name=&quot;description&quot; content=&quot;View our web design services, and learn the approach we take in creating the most effective website for your business.&quot; /&gt;&lt;meta name=&quot;google-site-verification&quot; content=&quot;36dXXZZompgqJf0oUzUyoTOKJzW1wQ8uAVOJBpYimR8&quot; /&gt;&lt;meta name = &quot;viewport&quot; content = &quot;width=device-width, maximum-scale=1.0, initial-scale = 1, user-scalable = no&quot; /&gt;&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;&lt;title&gt;Services | Vert Studios&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/reset.css&quot; /&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/js.css&quot; /&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/text.css&quot; /&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://www.vertstudios.com/lib/css/main.css&quot; /&gt;&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;apple-touch-icon.png&quot;/&gt;&lt;/head&gt;&lt;body id=&quot;services&quot;&gt;&lt;div id=&quot;wrapper&quot;&gt;&lt;div id=&quot;header&quot;&gt;&lt;div id=&quot;vertStudios&quot;&gt;&lt;a href=&quot;http://www.vertstudios.com/&quot;&gt;Vert Studios&lt;img src=&quot;http://www.vertstudios.com/images/vert_logo_header.png&quot; alt=&quot;Vert Logo&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;ul id=&quot;main_nav&quot;&gt;&lt;li&gt;&lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/about.php&quot;&gt;About&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;We're a small web design company with big ideas in Tyler, Texas.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/work.php&quot;&gt;Work&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;See what our work has to say. &lt;b&gt;WARNING&lt;/b&gt;: &lt;br /&gt;It might get loud.&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;active&quot; &gt;&lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/services.php&quot;&gt;Services&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;We design web sites that don't suck. We're quite proud of that.&lt;/p&gt;&lt;img src=&quot;images/nav_current.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;&lt;li&gt;&lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/blog/&quot;&gt;Blog&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;Read our articles on design, code, SEO, and the state of the web.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;h5&gt;&lt;a href=&quot;http://www.vertstudios.com/contact.php&quot;&gt;Contact&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;You've got ideas. Get in touch, and we'll put them into action.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div id=&quot;content&quot;&gt;&lt;div id=&quot;sub_page_intro&quot;&gt;&lt;h1&gt;Services&lt;/h1&gt;&lt;p&gt;We offer superior quality, functionality, and results for the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Web Design&lt;/li&gt;&lt;li&gt;Web Application Development&lt;/li&gt;&lt;li&gt;Mobile Web Design&lt;/li&gt;&lt;li&gt;Mobile Web Apps&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;http://www.vertstudios.com/images/pointer.png&quot; alt=&quot;&quot; class=&quot;pointer&quot; /&gt;&lt;/div&gt;&lt;div class=&quot;sub_page_1 clearfix&quot;&gt;&lt;h2&gt;We Take a Strategic Approach&lt;/h2&gt;&lt;p&gt;&lt;em&gt;We identify your needs and provide results based on what's best for you.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;In today's fast-paced world, a lot of focus is put on efficiency and instant-gratification. While we are efficient, we believe in first taking the time to clearly define what approach will best work for you and your company.&lt;/p&gt;&lt;p&gt;We address your current website challenges, identify problems, and deliver solutions that will make your business stand out from the competition.&lt;/p&gt;&lt;h3&gt;To Combine Form &amp;amp;amp; Function&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Great design is one thing.&lt;br/&gt;Elegant programing is another.&lt;br/&gt;Luckily we do both.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;There is nothing worse than losing hundreds of potential customers because of a poorly designed website. Is your layout beautiful, but lacking an engaging user experience? Is your content outstanding, but design amateurish? Our business is solving these problems to grow yours - both aesthetically and technically.&lt;/p&gt;&lt;/div&gt;&lt;div id=&quot;tertiary&quot;&gt;&lt;div id=&quot;what_now&quot;&gt;&lt;h2&gt;What Now?&lt;/h2&gt;&lt;p&gt;To see our capabilities in action, check out &lt;a href=&quot;work.php&quot;&gt;our work&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Interested in keeping up with web design or East Texas? Follow us on Twitter: &lt;a href=&quot;http://www.twitter.com/vertstudios&quot;&gt;@vertstudios&lt;/a&gt;, and subscribe to the &lt;a href=&quot;http://www.vertstudios.com/blog/&quot;&gt;Vert Studios Blog&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;!--END tertiary--&gt;&lt;/div&gt;&lt;!--END content--&gt;&lt;div id=&quot;footer&quot;&gt;&lt;div class=&quot;hr&quot;&gt;&lt;hr /&gt;&lt;/div&gt;&lt;p&gt;903-920-9514 |
                    &lt;a href=&quot;mailto:hi@vertstudios.com&quot;&gt;hi@vertstudios.com&lt;/a&gt;|
                    &lt;a href=&quot;http://www.twitter.com/vertstudios&quot;&gt;@vertstudios&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;!--END wrapper--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.vertstudios.com/vertlib.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.vertstudios.com/lib/js/jsCSS.js&quot;&gt;&lt;/script&gt;&lt;!-- Start of StatCounter Code --&gt;&lt;script type=&quot;text/javascript&quot;&gt;var sc_project=6105522;
var sc_invisible=1;
var sc_security=&quot;e204ad62&quot;;
&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;
src=&quot;http://www.statcounter.com/counter/counter_xhtml.js&quot;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;div
class=&quot;statcounter&quot;&gt;&lt;a title=&quot;free web stats&quot;
class=&quot;statcounter&quot;
href=&quot;http://www.statcounter.com/free_web_stats.html&quot;&gt;&lt;img
class=&quot;statcounter&quot;
src=&quot;http://c.statcounter.com/6105522/0/e204ad62/1/&quot;
alt=&quot;free web stats&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;!-- End of StatCounter Code --&gt;&lt;script type=&quot;text/javascript&quot;&gt;var gaJsHost = ((&quot;https:&quot; == document.location.protocol) ? &quot;https://ssl.&quot; : &quot;http://www.&quot;);
    document.write(unescape(&quot;%3Cscript src='&quot; + gaJsHost + &quot;google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E&quot;));
    &lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;try {
    var pageTracker = _gat._getTracker(&quot;UA-12513899-1&quot;);
    pageTracker._trackPageview();
    } catch(err) {}
&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;
</pre> 

<h2>A Real Life Scenario</h2>
Interestingly enough, as I was writing this article, my crappy ISP decided to let my connection drop while I was saving the draft. I had frequently previewed the post, so the post was available in HTML form. Unfortunately, the last draft that was saved was about an hour old. Regular Expressions to the rescue!

<h3>The Problem</h3>
The HTML that Wordpress generates is difficult to read. While I could have copied and pasted the HTML of the preview directly into the Wordpress editor, every character was escaped, and every blank line was wrapped in a paragraph tag. Since this article is relatively advanced, I may need to make some revisions in the future. However, revisions would be a nightmare if I had to deal with this type of text:

<pre class="prettyprint">
&lt;p&gt;Welcome to the first article in our IDE Friday series. Today, we&amp;#8217;ll be discussing the use of Regular Expressions in your IDE of choice. If you&amp;#8217;re unfamiliar with Regular Expressions, check out our tutorial series, beginning with the &lt;a href=&quot;http://www.vertstudios.com/blog/introduction-to-regular-expressions/&quot;&gt;Introduction to Regular Expressions&lt;/a&gt;. &lt;/p&gt; 
&lt;h2&gt;Wait, isn&amp;#8217;t RegEx just for Form Validation?&lt;/h2&gt; 
&lt;p&gt;Many developers new to the world of Regular Expressions think that RegEx&amp;#8217;s sole purpose is for validating user input through a contact form. While of course RegEx is great for user input validation, it is in no way confined to that single task. &lt;/p&gt; 
&lt;h2&gt;RegEx as a Text Editing Tool&lt;/h2&gt; 
&lt;p&gt;Many IDE&amp;#8217;s and programming-oriented text editors have a Find and Replace functionality. Additionally, these Find and Replaces generally have an option for Regular Expression searches. &lt;/p&gt; 
&lt;p&gt;Such as Notepad++&lt;br /&gt; 
&lt;img src=&quot;http://www.vertstudios.com/blog/images/regex-ide/notepadpp.jpg&quot; alt=&quot;Notepad++&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;And Komodo&lt;br /&gt; 
&lt;img src=&quot;http://www.vertstudios.com/blog/images/regex-ide/komodo.jpg&quot; alt=&quot;Komodo&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Conventions&lt;/h2&gt; 
&lt;p&gt;In most IDEs/editors, special characters in the &amp;#8220;Find&amp;#8221; field need to be escaped. Characters in the &amp;#8220;Replace&amp;#8221; field do not need to be escaped except for the backslash &amp;#8216;\&amp;#8217;. This is because the backlash is used to refer to &lt;a href=&quot;http://www.vertstudios.com/blog/back-references-quantifiers-and-anchors-in-regex/&quot;&gt;back-references&lt;/a&gt;. Keep in mind the entire text file is the string being tested, so the typical anchors are not needed. &lt;/p&gt; 
&lt;h2&gt;Find/Find and Replace Snippets&lt;/h2&gt;
</pre>

<h3>Pattern Recognition</h3>
The first step to solving this problem was to recognize the pattern between the HTML output and what I had been typing in the Wordpress editor. Then I simply needed to make Regular Expressions that represented the patterns. 
<table>
<tr><th width="200">Problem</th><th>Regular Expression Solution</th></tr>
<tr><td>New Lines in the editor came out as paragraph tags</td><td>
<pre class="prettyprint">
Find:&lt;/?p&gt;
Replace: \n
</pre>
</td></tr>
<tr><td>code brackets came out as a &lt;pre&gt; tag with different classes</td><td>
<pre class="prettyprint">
Find:&lt;(/|)pre[^&gt;]*&gt;
Replace:[\1code]
</pre>
</td></tr>
<tr><td>All my quotations had been escaped to &amp;#8220;, &amp;#8221;, or &amp;quot;</td><td>
<pre class="prettyprint">
Find:&amp;(quot|#822[01]);
Replace:&quot;
</pre>
</td></tr>
<tr><td>Some apostrophes had been escaped to &amp;#8216; and &amp;#8217;</td><td>
<pre class="prettyprint">
Find:&amp;#821[67];
Replace:'
</pre>
</td></tr>
<tr><td>HTML tags in the code snippets had been escaped. &lt; to &amp;lt;, and &gt; to &amp;gt;</td><td>
Done using regular find and replace
</td></tr>
</table>

So in just a few minutes, I was able to recover the text in a usable form. 
<pre class="prettyprint">

Welcome to the first article in our IDE Friday series. Today, we'll be discussing the use of Regular Expressions in your IDE of choice. If you're unfamiliar with Regular Expressions, check out our tutorial series, beginning with the &lt;a href=&quot;http://www.vertstudios.com/blog/introduction-to-regular-expressions/&quot;&gt;Introduction to Regular Expressions&lt;/a&gt;. 
 
&lt;h2&gt;Wait, isn't RegEx just for Form Validation?&lt;/h2&gt; 

Many developers new to the world of Regular Expressions think that RegEx's sole purpose is for validating user input through a contact form. While of course RegEx is great for user input validation, it is in no way confined to that single task. 
 
&lt;h2&gt;RegEx as a Text Editing Tool&lt;/h2&gt; 

Many IDE's and programming-oriented text editors have a Find and Replace functionality. Additionally, these Find and Replaces generally have an option for Regular Expression searches. 
 

Such as Notepad++&lt;br /&gt; 
&lt;img src=&quot;http://www.vertstudios.com/blog/images/regex-ide/notepadpp.jpg&quot; alt=&quot;Notepad++&quot; /&gt;
 

And Komodo&lt;br /&gt; 
&lt;img src=&quot;http://www.vertstudios.com/blog/images/regex-ide/komodo.jpg&quot; alt=&quot;Komodo&quot; /&gt;
 
&lt;h2&gt;Conventions&lt;/h2&gt; 

In most IDEs/editors, special characters in the &quot;Find&quot; field need to be escaped. Characters in the &quot;Replace&quot; field do not need to be escaped except for the backslash '\'. This is because the backlash is used to refer to &lt;a href=&quot;http://www.vertstudios.com/blog/back-references-quantifiers-and-anchors-in-regex/&quot;&gt;back-references&lt;/a&gt;. Keep in mind the entire text file is the string being tested, so the typical anchors are not needed. 
 
&lt;h2&gt;Find/Find and Replace Snippets&lt;/h2&gt; 

The focal point of this article is providing useful snippets of find and replace code to make life easier when making large adjustments. Some snippets involve more than one step. When we cover macros, we'll show how to combine the multi-step patterns into a single executable command.
 
&lt;h3&gt;1) Clear all console.log() calls&lt;/h3&gt; 

When debugging JavaScript, you may track your variables using console.log(). This RegEx eliminates the calls from the source. 
 
<pre class="prettyprint"> 
Find:\s*console.log\([^)]+\);?
Replace:
</pre>

<h2>Use Your Judgement</h2> 
Sometimes going through and manually deleting characters may be faster. However, I encourage you to take the time and challenge yourself to use regular expressions in your find and replace operations, solely as an exercise. Like any skill, the more you do it, the better you get. But if you're under a substantial time crunch, there's no shame in editing the old-fashioned way. Enjoy the world of RegEx!
 ]]></content>
    <excerpt><![CDATA[Welcome to the first article in our IDE Friday series. Today, we'll be discussing the use of Regular Expressions in your IDE of choice. If you're unfamiliar with Regular Expressions, check out our tutorial series, beginning with the <a href="http://www.vertstudios.com/blog/introduction-to-regular-expressions/">Introduction to Regular Expressions</a>. ]]></excerpt>
  </item>
  <item>
    <title>Great Content but No Links.</title>
    <link>http://www.vertstudios.com/blog/great-content-but-no-links/</link>
    <pubdate>Sun, 16 Jan 2011 01:47:39 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2790</guid>
    <description></description>
    <content><![CDATA[The mantra of Search Engine Optimization is quality content. The quality of your content serves as a foundation for all of your other strategies. Using social media to generate traffic is useless if the traffic leaves after a few seconds because you don't use a spell checker. Same applies to press releases, direct mail, any marketing platform you can think of. However, I recently put the rally cry of SEOs and Bloggers alike to the test.

<h2>"Content is King"</h2>
There exists a notion amongst the SEO community that if you produce great content, the traffic and links will come. You don't have to do anything but sit in a text editor or illustrative tool and pound out the best content of your life. If it's unique, well written, and useful, you'll get the traffic and links you deserve.

<h2>Sorry folks, That's not true</h2>
In an ideal world with an ideal search engine, this would certainly be true. But Google is certainly not an ideal search engine. While Google has thus far been the best search engine at filtering out poor websites from the results, the SERPs(Search Engine Results Page) are still loaded with sites that use spam to rank. 
<blockquote>
"In an ideal world with an ideal search engine, this would certainly be true. But Google is certainly not an ideal search engine."
</blockquote>

<h3>It's not what you know, It's who you know.</h3>
It truly does break my heart to bring myself to concede this point, but experimentation has simply shown this principle to be true. When you're attempting to get backlinks from humans, you have to understand <a href="http://en.wikipedia.org/wiki/Ruling_class">how humans work</a>. Almost every industry leader got to where they are by being acknowledged by some other industry leader at some point in time. Some of you may wonder "If that's the case, how did the first industry leaders come about?" While a perfectly legitimate question, the answer to the question is quite irrelevant. The cycle is clearly visible, and unfortunately that's all that really matters. Industry leaders are created by the spotlight of other industry leaders. This cycle directly reflects how we function as a species. As such, I don't imagine it will ever change. Ready any <a href="http://en.wikipedia.org/wiki/Rags_to_riches">Rags-to-Riches</a> story, and you'll see a pattern in all of them: The people in quesiton were either introduced to or discovered by someone of influence. 
<blockquote>
"Almost every industry leader got to where they are by being acknowledged by some other industry leader at some point in time." 
</blockquote>

<h2>What this means for you</h2>
You can no longer hide in Wordpress. If you want the links and traffic to make a successful website, you need to engage with other people in your industry - especially the people of influence. Follow noteworthy people on <a href="http://twitter.com/vertstudios">twitter</a>, leave as many useful comments as you can on their <a href="http://www.vertstudios.com/blog/feed">articles</a>, and mention them. Content creation must be complemented by content promotion if you intend on getting the traffic you feel you deserve.

<h3>"But Joseph, that sounds a LOT like kissing ass"</h3>
You know what? You're right. Know what else? That's exactly what it is. Do I like it? Of course not. But if you want to get the attention, you have to play the game. All social endeavors are composed of a series of meaningless games, and links are by nature a social entity. 

Consider the great revolutions of History, such as the <a href="http://en.wikipedia.org/wiki/American_Revolution">American Revolution</a> and the <a href="http://en.wikipedia.org/wiki/French_Revolution">French Revolution</a>. What makes them so revolutionary? The masses joined together and overthrew the elite, and b>that doesn't happen very often</b>. 

While it's great to network with people in similar situations, the odds of you building a band of digital brothers to overthrow the Zeldman's of our era are slim. It's not the most rainbow-and-sunshine news you've heard all day, but it's the truth. 

<blockquote>"All social endeavors are composed of a series of meaningless games, and links are by nature a social entity."</blockquote>

<h3>Content is still important!</h3>
If you've accepted my ideas, you may be tempted to ditch your blog and allocate all your time to reading the articles of industry leaders. Don't get carried away! Your content is still extremely important. When you're generating traffic, people like to know that you're still in the business of having something noteworthy to say. Visitors who see that your last article was written two months ago may not interact. Visitor retention is equally important as visitor acquisition, and it's difficult to retain visitors if they perceive you as inactive. 

<h2>It's all about the optimal balance</h2>
It's up to you to experiment with your writing:networking ratio. You might network 1 hour for every 1 hour you write. You might find commenting on blogs 2 hours for every 1 hour you spend writing your own articles to be optimal. You have to experiment to find the right balance. Just remember that a blog without updates and a blog without an audience are equally worthless. ]]></content>
    <excerpt><![CDATA[There exists a notion amongst the SEO community that if you produce great content, the traffic and links will come. You don't have to do anything bit sit in a text editor or illustrative tool and pound out the best content of your life. If it's unique, well written, and useful, you'll get the traffic and links you deserve.]]></excerpt>
  </item>
  <item>
    <title>Learn Social Media by Reliving your Teenage Years</title>
    <link>http://www.vertstudios.com/blog/learn-social-media-by-reliving-your-teenage-years/</link>
    <pubdate>Mon, 17 Jan 2011 23:00:50 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2817</guid>
    <description></description>
    <content><![CDATA[Social Media is a beast yet to be fully understood. The simple explanation is that people have yet to be fully understood, and social media is simply using internet platforms to connect with people. While many companies attempt to quantify behavioral trends, generally only basic conclusions can be drawn from even the most extensive experiments. Today, I'm going to put down the clipboard, put away the calculator, and tell you something that you've known all along.

<h2>If you've gone through puberty, you can do social media</h2>
That's right. If you ever went through that period of teenage angst in your life known as puberty and survived, you have the skills necessary to run a social media campaign. All you need to do is apply the lessons you learned in your teenage years to your marketing strategy. 
<blockquote>
"If you ever went through that period of teenage angst in your life known as puberty and survived, you have the skills necessary to run a social media campaign."
</blockquote>

<h2>It's all a popularity contest</h2>
There exists one question that comes plowing through the mind of every teenager at least once in their lives: "Why don't people like me?". This question and other derivations simply boil down to the question "How can I be more popular?" It's easy to got lost in the buzzwords of <a href="http://www.vertstudios.com/blog/web-design-dictionary/#roi">ROI</a>, impressions, leads, etc. But remember, social media is simply about maximizing your popularity with people that matter. 
<blockquote>
"...social media is simply about maximizing your popularity with people that matter."
</blockquote>

<h3>Similar Experiences, Similar Questions</h3>
The questions we ask ourselves as businesses are not any more complex than the questions we asked ourselves as young adults. Additionally, the situations we experience in the business world take place in High Schools every day. The table below demonstrates a few of these.  
<table>
<tr><th>As a Teenager</th><th>As a Business</th></tr>
<tr><td>Asking a girl/guy to a dance</td><td>Pitching to a prospective client</td></tr>
<tr><td>Being the "best friend" of the girl you like</td><td>Giving free advice to a prospect in hopes they will later reciprocate with a paying project</td></tr>
<tr><td>Jealousy of the Quarterback/Cheer Captain</td><td>Jealousy of an industry-leading competitor</td></tr>
<tr><td>"How can I get more people to like me?"</td><td>"How can I get more Twitter followers?"</td></tr>
<tr><td>"No one understands me"</td><td>"No one gets why our product is better"</td></tr>
</table>

There are many more parallels you can draw. The point is, our business problems usually aren't that complex. 
<blockquote>
"The questions we ask ourselves as businesses are not any more complex than the questions we asked ourselves as young adults."
</blockquote>

<h3>How to be Popular</h3>
Since we've established that being popular in the business world is not much different than being popular in High School, why not see what the articles geared towards people seeking popularity have to say? 
From <a href="http://www.wikihow.com/Be-Popular">WikiHow</a>:
<ul>
<li>Be willing to step out of your comfort zone</li>
<li>Be friendly</li>
<li>Stop thinking about yourself</li>
<li>Give a helping hand</li>
<li>Be yourself</li>
<li>Don't try too hard</li>
<li>Dress like you mean it</li>
<li>Be confident</li>
</ul>

We can see that all these ideas applying to personal popularity apply to social media.
<table>
<tr><th>Popularity</th><th>Social Media</th></tr>
<tr><td>Be willing to step out of your comfort zone</td><td>Be willing to talk to people you don't know. You have to be the one to strike up the conversation!</td></tr>
<tr><td>Be friendly</td><td>Use social media to send positive vibes concerning your business. Be nice to the people you want attention from</td></tr>
<tr><td>Stop thinking about yourself</td><td>It's not about you, it's about them. All your status updates, tweets, etc, should provide value to the followers</td></tr>
<tr><td>Give a helping hand</td><td>If a follower on your stream has an issue you can help with, being the first one to provide useful advice will speak volumes about your company</td></tr>
<tr><td>Be yourself</td><td>Don't be who you think people want you to be. Be yourself. If you attract people that think you're something you're not, everyone will be disappointed in the end</td></tr>
<tr><td>Don't try too hard</td><td>Earning attention and begging for attention are completely different things. Don't appear desperate; appear engaged in the conversation</td></tr>
<tr><td>Dress like you mean it</td><td>Make your product sharp! If you're using social media as a means to get traffic to your website, make sure it looks good. (<a href="http://www.vertstudios.com/work.php">We can help you with that ;)</a>)
<tr><td>Be confident</td><td>If you aren't confident in your product, why should anyone else be?</td></tr>
</table>

<h3>Other articles on being popular</h3>
I encourage you to take a small break from social media blogs and focus on the fundamentals: How do you become popular? As silly as it sounds, you'll find some great quotes to apply to your business. For example, 
<blockquote>
"People say 'Don't change and just be yourself,' and this is true, but be your best self. Take it one step at a time, and build your confidence."
</blockquote>

Free Resources:
<ul>
<li><a href="http://www.wikihow.com/Be-a-Popular-Girl">How to be a popular girl</a></li>
<li><a href="http://www.ehow.com/how_2222320_become-popular-five-days.html">How to become popular in 5 days</a></li>
<li><a href="http://www.mahalo.com/how-to-become-popular">How to become popular</a></li>
</ul>
]]></content>
    <excerpt><![CDATA[That's right. If you ever went through that period of teenage angst in your life known as puberty and survived, you have the skills necessary to run a social media campaign. All you need to do is apply the lessons you learned in your teenage years to your marketing strategy. ]]></excerpt>
  </item>
  <item>
    <title>Saving States with jQuery.data()</title>
    <link>http://www.vertstudios.com/blog/saving-states-jquery-data/</link>
    <pubdate>Tue, 18 Jan 2011 19:32:23 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2859</guid>
    <description></description>
    <content><![CDATA[While browsing the jQuery forums, I came across a pretty handy technique to store the states of objects. Additionally, a Forrst member named <a href="http://twitter.com/bnschmdt">Ben Schmidt</a> requested information on using jQuery to make a div slide out when an item is clicked (and most likely make it contract when clicked again). 

<h2>Demo</h2>
As I'm not a designer by any stretch (that would be <a href="http://twitter.com/vertjustin">@vertjustin</a> of Vert Studios), my demos are always bare-bones div boxes. But hey...I like boxes, and you should too!

<a href="http://www.vertstudios.com/blog/demo/jquery-data/slideToggle.php">View the demo</a>

<h2>CSS/HTML</h2>
The CSS is easy. Just have what you want to slide out positioned absolutely underneath what's on top using z-index.
<pre class="prettyprint">
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt; 
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot; lang=&quot;en&quot;&gt;  
&lt;head&gt; 
    &lt;title&gt;Example Slider&lt;/title&gt; 
    &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js&quot;&gt;&lt;/script&gt; 
    
    &lt;style type=&quot;text/css&quot;&gt;
    #wrapper{
    position: absolute;
    top: 0px;
    left: 0px;
    }
    
    #form{
    position: absolute;
    top: 0px;
    left: 0px;
    background-color: #FF0000;
    width: 400px;
    height: 400px;
    }
    
    #trigger{
    position: absolute;
    top: 0px;
    left: 250px;
    height: 20px;
    width: 150px;
    background-color: #FFFF00;
    cursor: pointer;
    z-index: 2;
    }
        
    #sliding{
    position: absolute;
    top: 0px;
    left: 200px;
    background-color: #000000;
    width: 200px;
    height: 400px;
    z-index: -1;
    }    
    &lt;/style&gt;
        
&lt;/head&gt; 
&lt;body&gt; 
    &lt;div id=&quot;wrapper&quot;&gt;
        &lt;div id=&quot;form&quot;&gt;&lt;/div&gt;
        &lt;div id=&quot;trigger&quot;&gt;Click to expand!&lt;/div&gt;
        &lt;div id=&quot;sliding&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;    
&lt;/body&gt; 
&lt;/html&gt;
</pre>

<h2>JavaScript</h2>
This is the fun part! Using logic and <a href="http://api.jquery.com/jQuery.data/">jQuery.data()</a>, we're able to store the state of the sliding div. 
<pre class="prettyprint">
    &lt;script type=&quot;text/javascript&quot;&gt;    
    $(function()
    {
        $(&quot;#trigger&quot;).click(function()
        {
            $(this).data('contracted', !$(this).data('contracted'));
            var contracted = $(this).data('contracted');
            
            if(contracted)
            {
                $(&quot;#sliding&quot;).animate({left: '+=200px'}, 500);
                $(&quot;#trigger&quot;).html(&quot;Click to contract!&quot;);
            }
            else
            {
                $(&quot;#sliding&quot;).animate({left: '-=200px'}, 500);
                $(&quot;#trigger&quot;).html(&quot;Click to expand!&quot;);
            }            
        });
    });
    &lt;/script&gt;
</pre>
<h3>Logic Breakdown</h3>
So the item starts off in a contracted state. Thus,  'contracted' should be set to true by default. The use of logical negation helps our cause. The line
<pre class="prettyprint">
$(this).data('contracted', !$(this).data('contracted'));
</pre>

says "Store the logical negation of the 'contracted' property of $(this) into the 'contracted' property of $(this)". 
So when the DOM is loaded, $(this).data('contracted') is false since we have not assigned any value to it. Thus, by negating it through !$(this).data('contracted'), the value associated with $(this).data('contracted') is now true. It's important that we use the negation since you can't normally work with an undefined object. It's a logical game that has a wide array of uses!

So if the item is contracted, we want it to expand. If it is expanded, we want it to contract. The animate method takes care of that for us. 

<h2>Feedback</h2>
Have any questions/comments about storing states with jQuery.data()? Let us know in the comments below.
]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Hide Elements On Page Load with JavaScript</title>
    <link>http://www.vertstudios.com/blog/hide-elements-page-load-javascript/</link>
    <pubdate>Tue, 25 Jan 2011 06:28:27 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2879</guid>
    <description></description>
    <content><![CDATA[Sometimes when you're getting expressive with JavaScript, you find it necessary to hide certain elements when the page loads. An example of this would be our very own <a href="http://www.vertstudios.com/work.php">work page</a>. We ensure that the user is able to see the text whether they have JavaScript enabled or disabled; it just looks a hell of a lot cooler with JavaScript enabled. 

<h2>The Code</h2>
<a href="http://dougneiner.com/">Doug Neiner</a> describes a very painless way to hide elements using JavaScript without a flicker. Add the following right after the opening &lt;head&gt; tag:
<pre class="prettyprint">
        &lt;script type=&quot;text/javascript&quot;&gt;
            //Credit: Doug Neiner - http://dougneiner.com/
            document.documentElement.className += &quot; js&quot;
        &lt;/script&gt;
</pre>

This adds the class "js" to the HTML element. Declare the following style in your stylesheet
<pre class="prettyprint">
.js .jshidden{
display: none;
}
</pre>

Now apply the jshidden class to the items you wish to have hidden in the even the user has JavaScript enabled.
<pre class="prettyprint">
&lt;img class=&quot;jshidden&quot; src=&quot;someimg.jpg&quot; /&gt;
</pre>

If JavaScript is <em>disabled</em>, then the element will not be hidden.

<h2>Can't I just use jQuery.hide()?</h2>
jQuery's <a href="http://api.jquery.com/hide/">.hide()</a> method kicks in at the very earliest on DOM load. In the event you have a significant amount of content on your page, the content you wish to hide will be loaded and THEN disappear. This looks very, very, VERY corny. ]]></content>
    <excerpt><![CDATA[Sometimes when you're getting expressive with JavaScript, you find it necessary to hide certain elements when the page loads. An example of this would be our very own <a href="http://www.vertstudios.com/work.php">work page</a>. ]]></excerpt>
  </item>
  <item>
    <title>A Break from jQuery</title>
    <link>http://www.vertstudios.com/blog/a-break-from-jquery/</link>
    <pubdate>Sat, 29 Jan 2011 04:03:49 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2896</guid>
    <description></description>
    <content><![CDATA[It's been less than a year since I entered the beautiful world of jQuery. I've had a lot of fun interacting with the jQuery community and crafting my own plugins. However, I've come to the point where I'm acquainted enough with jQuery to explore alternatives. 

<h2>Back to Basics</h2>
jQuery does some wonderful things and makes the execution of certain ideas extremely simple. For the past several months, I've allotted time to finding answers to questions in the form of: "How do I do X with jQuery?". Thanks to the great dev community associated with jQuery, finding answers to these problems proved relatively easy. Now that my skill with jQuery has increased, there are very few problems I'm unable to solve that involve jQuery. Consequently, my curiosity is beginning to shift from "How do I do X with jQuery" to "How does jQuery do X"? I'd like to explore tweening, collision detection, and DOM manipulation using pure JavaScript. I'd like to learn the browser quirks from the ground up. While some might consider such a decision a technological "step backward", I whole-heatedly believe that the only way the JavaScript language can move forward is to have more developers appreciate how these great libraries actually work. 
<blockquote>"I whole-heatedly believe that the only way the JavaScript language can move forward is to have more developers appreciate how these great libraries actually work."</blockquote>
<h2>Alternative Libraries</h2>
There are many libraries floating around that I have never taken the time to tinker with. Some serve the purpose of animation. Some server other purposes. Either way, I'd like to learn what these alternative libraries have to offer. Here are the JS libraries I'll be experimenting with. 
<ul>
<li><a href="http://jashkenas.github.com/coffee-script/">CoffeScript</a></li>
<li><a href="http://mootools.net/">MooTools</a></li>
<li><a href="http://code.google.com/closure/">Google Closure</a></li>
<li><a href="http://www.prototypejs.org/">Prototype</a></li>
</ul>

There are many more JavaScript libraries listed on <a href="http://javascriptlibraries.com/">JavaScriptLibraries.com</a> that I may or may not get to. I hope to efficiently implement these libraries into future projects, as well as examine their source to appreciate exactly how they work. 

<h2>It's All About Self-Improvement</h2>
While I could allot more time to making even cooler things with jQuery, I feel that the next step towards improving my skill set as a JavaScript developer is to understand pure JavaScript and experiment with other libraries. A degree of pride and satisfaction goes into being able to make something yourself. I have no intentions of reinventing the wheel - I simply wish to know what makes it roll in the first place. 
<blockquote>"I have no intentions of reinventing the wheel - I simply wish to know what makes it roll in the first place."</blockquote>]]></content>
    <excerpt><![CDATA[It's been less than a year since I entered the beautiful world of jQuery. I've had a lot of fun interacting with the jQuery community and crafting my own plugins. However, I've come to the point where I'm acquainted enough with jQuery to explore alternatives. ]]></excerpt>
  </item>
  <item>
    <title>3 Quick Blogging Tips for Small Businesses</title>
    <link>http://www.vertstudios.com/blog/3-quick-blogging-tips-for-small-businesses/</link>
    <pubdate>Fri, 28 Jan 2011 08:38:15 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2898</guid>
    <description></description>
    <content><![CDATA[Company blogs used to be just for the corporate world. However, thanks to open source platforms like Wordpress, we are now experiencing a transition where more and more small businesses are maintaining company blogs. It's worth nothing, though, that many of these small businesses are not using their blogs effectively. Today, we'll share <strong>3 quick blogging tips</strong> for small businesses running a company blog. 

<h2>1) Let People Know it Exists</h2>
As previously discussed, having great content on your blog <a href="http://www.vertstudios.com/blog/great-content-but-no-links/">is not enough</a>. A blog with no audience is worthless! You have to let people know your blog exists so it will obtain the traffic it deserves. Here are a few ways to do just that:
<ul>
<li>Leave quality comments on blogs within your industry.</li>
<li>Integrate your blogging into social media tools such as <a href="http://hootsuite.com/">HootSuite</a>.</li>
<li>Communicate with local people of influence, and convince them to stop by and comment.</li>
<li>Find Guest Blogging opportunities by doing a Google search for "<a href="http://www.google.com/webhp?sourceid=chrome#sclient=psy&hl=en&site=webhp&q=food+intitle:%22write+for+us%22&aq=f&aqi=&aql=&oq=&pbx=1&fp=fca90e9507624f80">(your industry) + write for us</a>"</li>
</ul>
<blockquote>"A blog with no audience is worthless!"</blockquote>

<h2>2) Make a Blogging Calendar</h2>
At first, blogging is extremely fun and enjoyable. While this flair does not necessarily <i>die out</i>, the excitement can wither as you begin to realize how much work goes into maintaining a blog. Sometimes, having to sit down and think of a topic completely gets you out of the blogging mood. To combat this scenario, I suggest setting aside a few hours near the end of the month to generate blog posts that you will use for the entire next month. Task management applications such as <a href="http://www.vertstudios.com/blog/remember-the-milk-iphone-app-review/">Remember The Milk</a> can make this process much easier. Trust me - generating a list of blog posts for future use saves a HUGE amount of time! 
<blockquote>"...generating a list of blog posts for future use saves a HUGE amount of time!"</blockquote>

<h2>3) Keep it Short, Keep it Sweet</h2>
Contrary to some notions, blog articles do not have to be the length of small novels. When it comes to writing an article, you simply should write the exact amount of words necessary to convey your idea. With regards to web copy, people like to scan text, not read word for word. Having certain key points visually emphasized can greatly enhance user comprehension and experience. Extremely technical articles, such as my <a  href="http://www.vertstudios.com/blog/introduction-to-regular-expressions/">Introduction to Regular Expressions</a>, will require a lot of time to develop. Splitting technical articles up over a period of two days helps the task seem less daunting. 
<blockquote>With regards to web copy, people like to scan text, not read word for word."</blockquote>


<h2>Questions about Blogging?</h2>
Have any questions about blogging to market your business? Leave us a comment below, or <a href="http://www.vertstudios.com/contact.php">get in contact</a> with us!]]></content>
    <excerpt><![CDATA[Company blogs used to be just for the corporate world. However, thanks to open source platforms like Wordpress, we are now experiencing a transition where more and more small businesses are maintaining company blogs. It's worth nothing, though, that many of these small businesses are not using their blogs effectively. Today, we'll share <strong>3 quick blogging tips</strong> for small businesses running a company blog. ]]></excerpt>
  </item>
  <item>
    <title>Can&#039;t Detect Connected Canon Wireless Printer [SOLUTION]</title>
    <link>http://www.vertstudios.com/blog/cant-detect-canon-wireless-printer-solution/</link>
    <pubdate>Sat, 29 Jan 2011 22:44:40 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2938</guid>
    <description></description>
    <content><![CDATA[Over the past few weeks, the computers in my house have been unable to detect my <strong>Cannon MG5200</strong> printer. The printer itself said it successfully connected to the wireless network, which left me quite puzzled. After a while, I found the root cause, and it left me quite baffled. 

<h2>It May Be Your iPhone</h2>
If you are an iPhone user, you may have decided to try out Canon's Easy-PhotoPrint iPhone app. The app allows you to print directly from your iPhone. If you are unable to detect your wireless printer and you have used this app, check out your router settings.

Your router settings can usually be accessed by typing the address 192.168.1.1 in the address bar. The default username is usually "admin" and default password is usually "password". 

If you click on "Attached Devices" (or some variation of the phrase), you may notice that your iPhone name is listed twice. The iPhone seems to HiJack the name of your Printer, causing your computers to not be able to locate your printer. 

<h2>The Solution</h2>
You'll need to do a hard reset on your router. Generally, unplugging the router and plugging it back in does not accomplish this. There may be a "RESET" button on the back of the router, or you may need to take a paper clip and insert it into a small reset hole at the back of the router. Check with your instruction manual if you're unable to find these. 

The hard reset will cause all machines attached to the router to disconnect. This allows the proper name of the printer to come through. After this, you should be able to install your Canon printer driver normally. 

<h2>Feedback</h2>
Did this solve your problem? Let us know in the comments below! ]]></content>
    <excerpt><![CDATA[Over the past few weeks, the computers in my house have been unable to detect my <strong>Cannon MG5200</strong> printer. The printer itself said it successfully connected to the wireless network, which left me quite puzzled. After a while, I found the root cause, and it left me quite baffled. ]]></excerpt>
  </item>
  <item>
    <title>getElementById IE7 Issue</title>
    <link>http://www.vertstudios.com/blog/getelementbyid-ie7-issue/</link>
    <pubdate>Sun, 30 Jan 2011 11:00:25 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2948</guid>
    <description></description>
    <content><![CDATA[As <a href="http://www.vertstudios.com/blog/a-break-from-jquery/">previously stated</a>, I'm taking some time to learn pure JavaScript. That means I am beginning to experience the joy that is cross-browser JS quirks! 

I recently came across a simple issue: IE7 was throwing the following error for getElementById:
<h2>Object Doesn't Support this Property or Method</h2>
In my head I was thinking: "What the heck IE? getElementById is the MAIN THING you should get right!". The code was as following:
<pre class="prettyprint">

  &lt;script type=&quot;text/javascript&quot;&gt;
    window.onload = function()
    {
      var d = document;
      block = d.getElementById('block');
      var windowHeight = window.innerHeight || document.documentElement.clientHeight;

      var blockHeight = block.clientHeight;
      var offset = block.offsetTop;
      block.style.top = windowHeight - (offset + blockHeight) + 'px';
    };

  &lt;/script&gt;
</pre>

<h2>The Solution</h2>
It seems that I somehow forgot to include "var" before the assignment of "blocks" on line 5. Including "var" fixed the problem in IE7!
<pre class="prettyprint">
  &lt;script type=&quot;text/javascript&quot;&gt;
    window.onload = function()
    {
      var d = document;
      var block = d.getElementById('block');
      var windowHeight = window.innerHeight || document.documentElement.clientHeight;

      var blockHeight = block.clientHeight;
      var offset = block.offsetTop;
      block.style.top = windowHeight - (offset + blockHeight) + 'px';
    };

  &lt;/script&gt;
</pre>

Man...what have I gotten myself into? 
<pre class="prettyprint">
$(&quot;joseph&quot;).hide();
</pre> ]]></content>
    <excerpt><![CDATA[As <a href="http://www.vertstudios.com/blog/a-break-from-jquery/">previously stated</a>, I'm taking some time to learn pure JavaScript. That means I am beginning to experience the joy that is cross-browser JS quirks! ]]></excerpt>
  </item>
  <item>
    <title>Apache 301: Force www, Redirect Index to Root</title>
    <link>http://www.vertstudios.com/blog/apache-301-force-www-redirect-index-root/</link>
    <pubdate>Tue, 08 Feb 2011 04:53:43 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=2998</guid>
    <description></description>
    <content><![CDATA[Backlinks are the foundation of <a href="http://www.vertstudios.com/blog/seo/">SEO</a>. If you spent hours trying to get a particular backlink, it'd be extremely discouraging to know that you somehow lost a portion of the credibility associated with that link. This can happen when a website's URLs are not <a href="http://www.google.com/support/webmasters/bin/answer.py?hl=en&answer=139066">canonicalized/normalized</a>.

<h2>The Code</h2>
This .htaccess code redirects http://domainname.com to http://<b>www.</b>domainname.com. Additionally, it forces any call to index.php to the domain root. (This code snippet assumes you're using PHP extensions. If you're using HTML extensions, just replace each instance of PHP with HTML.)
<pre class="prettyprint">
#redirect index.php to root
Options +FollowSymLinks
DirectoryIndex index.php

# force www in url
RewriteEngine On
RewriteCond %{HTTP_HOST} !^www\.yourdomain\.com [NC]
RewriteRule ^(.*)$ http://www.yourdomain.com/$1 [R=301,L]
# END force www in url

#rewrite index.php
RewriteEngine On
RewriteBase /
RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /index\.php\ HTTP/
RewriteRule ^index\.php$ http://www.yourdomain.com/ [R=301,L]
#END rewrite index.php 
</pre>

<h2>The Concept</h2>
In my opinion, the most consistent way to normalize URLs is through Apache 301 Redirects. However, the recent advent of the <a href="http://www.seomoz.org/blog/301-redirect-or-relcanonical-which-one-should-you-use">rel=canonical</a> tag has provided an alternative to the development-heavy Apache 301s, but some <a href="http://searchengineland.com/why-i-still-hate-relcanonical-48317">remain skeptical</a> on its effectiveness.  

<h2>An Example</h2>
As an example, take <a rel="nofollow" href="http://cloud929.com/">Cloud929</a>, a company that implements <a href="http://joomla15.siteground.com/?template=siteground-j15-27">Joomla templates</a>.
Currently, the following URLs are all valid. (After clicking them, the URL doesn't change).
<ul>
<li><a rel="nofollow" href="http://www.cloud929.com/">http://www.cloud929.com/</a></li>
<li><a rel="nofollow" href="http://www.cloud929.com/index.php">http://www.cloud929.com/index.php</a></li>
<li><a rel="nofollow" href="http://cloud929.com/">http://cloud929.com/</a></li>
<li><a rel="nofollow" href="http://cloud929.com/index.php">http://cloud929.com/index.php</a></li>
</ul>
Note that both www and non-www versions as well as index.php are treated as separate web pages to the search engines. This could lead to duplicate content being indexed, potentially devaluing the significance of the content. 

Contrast this with the Vert site, which uses the Apache .htaccess 301. 
<ul>
<li><a href="http://www.vertstudios.com/">http://www.vertstudios.com/</a></li>
<li><a href="http://www.vertstudios.com/index.php">http://www.vertstudios.com/index.php</a></li>
<li><a href="http://vertstudios.com/">http://vertstudios.com/</a></li>
<li><a href="http://vertstudios.com/index.php">http://vertstudios.com/index.php</a></li>
</ul>

Notice that every link variation resolves to http://www.vertstudios.com. 

<h2>Take Care of Your Content</h2>
You work hard to create content that drives traffic to your site. Take care of your content by ensuring links to your site have their maximum effect. If you have any questions about the URL normalization process, let us know in the comments section below! ]]></content>
    <excerpt><![CDATA[This .htaccess code redirects http://domainname.com to http://<b>www.</b>domainname.com. Additionally, it forces any call to index.php to the domain root.]]></excerpt>
  </item>
  <item>
    <title>Are You a Credible Web Design Company?</title>
    <link>http://www.vertstudios.com/blog/credible-web-design-company/</link>
    <pubdate>Thu, 17 Feb 2011 18:03:48 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3028</guid>
    <description></description>
    <content><![CDATA[The web design industry is quite a marvel. Its non-existent barrier to entry and industry within the industry (template services, PSD to XHTML services, etc) mean the web design marketplace is flooded. As a web design company, it's important to <a href="http://www.vertstudios.com/blog/5-principles-of-web-marketing/">differentiate your product</a>. A large portion of differentiation is credibility. 

<h2>Why Credibility Matters</h2>
Actions speak louder than words - especially when money is involved. While great marketing can convince someone to value your services, only trust can facilitate high-risk transactions. If you work with small businesses, most likely <a href="http://www.vertstudios.com/blog/what-a-websites-price-says-about-its-design/">anything over $500</a> will be viewed as "high-risk". With <a href="http://www.revenews.com/barrysilverstein/is-consumer-trust-waning/">consumer trust wavering</a>, rampant <a href="http://gainlightstudios.com/blog/3-keys-to-avoiding-a-design-price-war/">price wars</a> undervaluing our services, negative perception caused by <a href="http://www.ripoffreport.com/directory/Web-Design.aspx">numerous scams</a>, it's no surprise the gap between "interested" and "convinced" is widening. By providing accurate information about your services, you help combat these negative consumer influences. 
<blockquote>"While great marketing can convince someone to value your services, only trust can facilitate high-risk transactions."</blockquote>

<h2>Don't Offer Services Outside Your Capabilities</h2>
Many web design companies feel pressured into offering almost any type of service related to the internet. The most common example is <a href="http://www.vertstudios.com/blog/seo/">Search Engine Optimization</a>. Many web design companies offer SEO simply because <a href="http://seobullshit.com/some-agencies-shouldnt-offer-seo/">they feel they should</a>. When you start claiming you can fulfill a need without having the capabilities, you're setting your company up for a disaster in one of two ways: First, you might try to freelance the job out and mark up the price. In the event the freelancer <a href="http://seoblackhat.com/2006/03/23/seo-scam/">can't deliver either</a>, <b>you</b> are still responsible and have to answer to the client. Second, you might give the job a whirl yourself. If you fail, that $2,000 or so you picked up won't help you recover the potentially tens of thousands of dollars in <a href="http://www.americasbestcompanies.com/magazine/articles/wanted-reputation-killer-negative-word-of-mouth.aspx">reputation damage</a> caused by negative word-of-mouth. 
<blockquote>"When you start claiming you can fulfill a need without having the capabilities, you’re setting your company up for a disaster..."</blockquote>

Basically, if you provide SEO as a service, don't let this happen to you. 
<img src="http://www.vertstudios.com/blog/images/credibility/silversoap.png" alt="Silversoap Media" />

<h2>Create Content That Sells Your Skills</h2>
So you make websites, eh? So do a lot of companies. Heck, so do we. How is a business owner supposed to choose which firm to go with? By creating quality content <a href="http://www.vertstudios.com/blog/client-resources/">related to your industry</a> geared towards prospects, you can educate them. This not only <a href="http://www.associatedcontent.com/article/573075/help_customers_get_rid_of_shopping.html?cat=3">decreases anxiety</a> (no one wants to buy something they don't understand), but educates potential clients on how the industry works (and sometimes just as importantly, <a href="http://explicitly.me/small-business-seo-search-engine-submission-scam">how it doesn't work</a>). 

Arnie Kuenn of <a href="http://www.verticalmeasures.com/blog/">Vertical Measures</a> discusses the <a href="http://www.searchenginepeople.com/blog/content-marketing-process.html">content marketing cycle</a> in an article for <a href="http://www.searchenginepeople.com/blog/content-marketing-process.html">Search Engine People</a>, emphasizing the creation of content geared towards clients for the purpose of increasing <a href="http://www.vertstudios.com/blog/web-design-dictionary/#conversion">conversions</a>. 

<blockquote>"But, then I began to reflect on my own consumer experiences:  the shoes, televisions, cameras, and cloths that I bought, or the travel and entertainment I consumed.  I realized I was buying products and service not based on price but based on how well I trusted the source.  The more information they provided, the more apt I was to buy. That is when content became the focus at our company.  Instead of cranking out content, we started following a much more deliberate process in developing content for our clients."</blockquote>

Quality content that's honest, to the point, and provides your clients with a sincerely satisfying feeling of learning something new establishes a <b>huge</b> relationship built on trust and excitement. You can, in fact, make PHP or jQuery exciting for potential clients. You just need to show why they should care. 

<h2>Cite Your Sources</h2>
I can't tell you how happy to be rid of MLA Format forever. However, even though the days of strictly formatted bibliographies are the past (High School to be exact), citing sources in the content you create is a great way to strengthen the validity of your claims. Additionally, stopping by the page you cited and informing the author about your article can create beneficial networking opportunities.

<h2>Ultimately...</h2>
Your content should function as a way to retain customers who may be browsing. When they consume your content, your competitor's probable lack of content will definitely influence their thought process. Building trust by maintaining your credibility is an intuitive, effective method for differentiating yourself in the marketplace. ]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Social Media for Small Business - An Experiment</title>
    <link>http://www.vertstudios.com/blog/social-media-small-business-experiment/</link>
    <pubdate>Tue, 22 Feb 2011 02:16:12 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3091</guid>
    <description></description>
    <content><![CDATA[<a href="http://socialmediadouchebag.net/">Social Media Guru's</a> have been relentlessly preaching the effectiveness of Twitter as a form of marketing for small businesses. Vert Studios does not offer Social Media Marketing (SMM) services. Why? Because we don't understand it. Know what else? Neither do over 95% of the companies that offer SMM services just to swindle a quick buck. Most businesses offering SMM services actually have no influence in the social media world themselves. I recently spotted a company offering social media services while they themselves had a grand total of 6 followers on Twitter. Unfortunately, this practice is becoming all too common. 
<blockquote>"Most businesses offering SMM services actually have no influence in the social media world themselves."</blockquote>

<h2>So Social Media Sucks For Small Businesses?</h2>
<a href="http://theworkathomewife.com/is-social-network-marketing-the-next-seo-strategy/">Yes</a>. <a href="http://www.searchenginepeople.com/blog/twitter-marketing-useless.html">No</a>.  <a href="http://www.businessinsider.com/5-social-media-marketing-tips-that-will-get-you-instant-results-2010-4#make-it-easy-and-non-threatening-for-your-audience-to-participate-1">Maybe</a>. But I intend to find out for myself, and I'd like to share my findings with you. 


<h3>The Current State of Vert Social Media</h3>
We know the basic premise of social media. Engage in conversation, and <a href="http://www.vertstudios.com/blog/learn-social-media-by-reliving-your-teenage-years/">live like it's high school</a>. But currently, we don't invest much time in social media. Naturally, we only get 10-20 hits from Twitter and Facebook<em>per month</em>. 

Here are our stats for the two most popular social media platforms - Facebook and Twitter.
<img src="http://www.vertstudios.com/blog/images/social-media-experiment/facebook-likes.png" alt="Facebook Likes" />

<img src="http://www.vertstudios.com/blog/images/social-media-experiment/twitter-followers.png" alt="Twitter Followers" />

That's 38 likes and 111 followers. Bear in mind some of our followers are spammers that we've been too lazy to report. I'd say the number of actual people following us is between 80-90. 

<h2>The Main Goal</h2>
The main purpose of our Twitter and Facebook marketing experiments is to objectively determine whether social media is worth pursuing for small businesses. If it works, fantastic. If not, there are always other options. Our primary success measurement will be quote requests tracked from twitter. We'll also measure secondary success, such as increase in traffic, <a href="http://www.vertstudios.com/blog/feed">RSS subscriptions</a>, and blog comments. 

<h2>A Change in Mindset</h2> 
Previously, I had published an article concerning <a href="http://www.vertstudios.com/blog/reciprocal-twitter-follows-the-new-reciprocal-links/">the number of people you follow on twitter</a>. Basically I argued that following a lot of people isn't a good idea. How did I come to that conclusion? Common sense. But the crazy thing about marketing is how counterintuitive it can be at times. Sometimes, common sense and how things work in the real world don't exactly match up. To see if that's the case here, we're going to start following more people on Twitter, and convince as many friends and family members possible to suggest our Facebook page to their friends. We'll go for quantity over quality for the sake of experimentation. Who knows, maybe blindly following anyone and everyone actually has positive results. 
<blockquote>"Sometimes, common sense and how things work in the real world don’t exactly match up."</blockquote>

<h2>Your Social Media Experience</h2>
If you're a small business and have engaged in social media or hired a social media marketer, let us know about your experiences in the comment section below!]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Lynx for Windows 7 64 Bit</title>
    <link>http://www.vertstudios.com/blog/lynx-windows-7-64-bit/</link>
    <pubdate>Tue, 22 Feb 2011 23:59:45 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3125</guid>
    <description></description>
    <content><![CDATA[<a href="http://lynx.browser.org/">Lynx</a> is a text-only  <a href="http://www.vertstudios.com/blog/web-design-dictionary/#browser">browser</a>  that's great for browsing content extremely fast. Sometimes you don't need fancy JavaScript interaction or beautiful images; you just want to view the text needed to solve your problems and move on with your life. That's what Lynx is for. Additionally, as a designer/developer, Lynx is a great way to make sure your website is adhering to <a href="http://www.vertstudios.com/blog/web-design-dictionary/#accessibility">accessibility</a> guidelines. 

Here's a snapshot of our site, viewed from Lynx.
<img src="http://www.vertstudios.com/blog/images/lynx-64/lynx-vertstudios.png" alt="Vert Studios Lynx Screenshot" />

<h2>Lynx for Windows 7</h2>
If you've tried to install Lynx from the download page while on Windows 7, you might have come across various errors preventing you from installing this great tool. While searching for a solution myself, I came across a <a href="http://www.vordweb.co.uk/standards/download_lynx.htm">Lynx Download Page</a> with instructions that work for Windows 7 64 bit. Just checkout the readme and follow the step by step guide, and you'll be browsing in no time.

<h2>What do you think of Lynx?</h2>
Ever used Lynx? Let us know what you think about it in the comments section below!
]]></content>
    <excerpt><![CDATA[If you've tried to install Lynx from the download page while on Windows 7, you might have come across various errors preventing you from installing this great tool. While searching for a solution myself, I came across a <a href="http://www.vordweb.co.uk/standards/download_lynx.htm">Lynx Download Page</a> with instructions that work for Windows 7 64 bit. Just checkout the readme and follow the step by step guide, and you'll be browsing in no time.]]></excerpt>
  </item>
  <item>
    <title>Add Nofollow to Links with PHP</title>
    <link>http://www.vertstudios.com/blog/add-nofollow-links-with-php/</link>
    <pubdate>Sat, 26 Feb 2011 19:58:17 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3146</guid>
    <description></description>
    <content><![CDATA[If you're creating your own blogging or forum platform using PHP, you'll find that search engine spammers absolutely love to exploit those means of communication by spamming links to their sites. While a spam filter is a great way to combat this problem, occasionally even the best spam filters let a few spam posts through. At that point, you don't want your site authority being imparted to a spammy site (say a Viagra or Cialis reseller!). Your best bet is <a href="http://www.google.com/support/webmasters/bin/answer.py?hl=en&answer=96569">rel=nofollow</a>. 

<h2>The Code</h2>
This code uses simple <a href="http://www.vertstudios.com/blog/introduction-to-regular-expressions/">regular expressions</a> to add the rel=nofollow attribute to the passed in anchor string.
<pre class="prettyprint">
//$str: The anchor string that will be altered
//$nofollow: The rel attribute values you wish to have attached to the anchor
function makeNoFollow(&amp;$str, $nofollow){
  //See if there is already a &quot;rel&quot; attribute
  if(strpos($str, &quot;rel&quot;)){
    $pattern = &quot;/rel=([\&quot;'])([^\\1]+?)\\1/&quot;;
    $replace = &quot;rel=\\1\\2 $nofollow\\1&quot;;
  } 
  else{
    $pattern = &quot;/&lt;a /&quot;;
    $replace = &quot;&lt;a rel=\&quot;$nofollow\&quot; &quot;;
  }
    $str = preg_replace($pattern, $replace, $str);
}
</pre>

<h2>Example</h2>
<pre class="prettyprint">
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;NoFollow Append&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;?php
$link = &quot;&lt;a rel='external' href='www.linktomyspamsite.com'&gt;I swear this isn't spam!&lt;/a&gt;&quot;;
echo &quot;Before: &quot; . $link . &quot;&lt;br /&gt;\n&quot;;

function makeNoFollow(&amp;$str, $nofollow){
  //See if there is already a &quot;rel&quot; attribute
  if(strpos($str, &quot;rel&quot;)){
    $pattern = &quot;/rel=([\&quot;'])([^\\1]+?)\\1/&quot;;
    $replace = &quot;rel=\\1\\2 $nofollow\\1&quot;;
  } 
  else{
    $pattern = &quot;/&lt;a /&quot;;
    $replace = &quot;&lt;a rel=\&quot;$nofollow\&quot; &quot;;
  }
    $str = preg_replace($pattern, $replace, $str);
}

makeNoFollow($link, &quot;nofollow&quot;);
echo &quot;After: &quot; . $link;
?&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

The code first sees if there is already a rel attribute attached to the anchor. (For example, <a href="http://snipplr.com/view/3047/open-new-window-using-rel-external-instead-of-deprecated-target-attribute/">rel="external"</a>). If so, it appends the $nofollow string to the end of the rel attribute value list before the ending quote. If not, it places rel= followed by the $nofollow string immediately after the anchor tag is opened. ]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>libmysql.dll 32 Bit Download </title>
    <link>http://www.vertstudios.com/blog/libmysqldll-32-bit-download/</link>
    <pubdate>Sat, 12 Mar 2011 10:36:32 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3264</guid>
    <description></description>
    <content><![CDATA[<a href="http://www.vertstudios.com/downloads/libmysql.zip">Download libmysql.dll</a> (ZIP File)

<h2>When Would you Need this DLL?</h2>
If you're on a 64 bit Windows machine and use 32-bit software that implements MySQL, it will most likely need the 32 bit version of libmysql.dll.

<h2>Why Bother Posting This?</h2>
The only other site I could find that hosts this individual file had so many affiliate links, I couldn't find where to download. I ended up having to install MySQL 32 bit just to snag the dll. I think people would prefer a 1MB download to a 120MB download! 

<a href="http://www.vertstudios.com/downloads/libmysql.zip">Download libmysql.dll</a> (ZIP File)
]]></content>
    <excerpt><![CDATA[<a href="http://www.vertstudios.com/downloads/libmysql.zip">Download libmysql.dll</a> (ZIP File)

The only other site I could find that hosts this individual file had so many affiliate links, I couldn't find where to download. I ended up having to install MySQL 32 bit just to snag the dll. I think people would prefer a 1MB download to a 120MB download!]]></excerpt>
  </item>
  <item>
    <title>Windows PHP Mail Server Installation Guide</title>
    <link>http://www.vertstudios.com/blog/windows-php-mail-server-installation-guide/</link>
    <pubdate>Sun, 13 Mar 2011 01:01:23 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3272</guid>
    <description></description>
    <content><![CDATA[Unless you run a local mail server, the only ways to test a PHP contact form include echo printing and testing on a remote server. Though both of these methods work, running a local mail server allows for greater accuracy in testing, and greater efficiency in debugging. This post will guide you through setting up a local mail server for PHP to use.

<h2>Step by Step Guide</h2>
We will use hMailServer to interact with PHP. This will allow local use of the <a href="http://php.net/manual/en/function.mail.php">PHP mail()</a> function, saving us time when creating/testing our forms. The installation and configuration should take between 10 to 20 minutes to complete. 

<h3>Requirements</h3>
Before we get started, we need to make sure your machine is properly configured to allow for hMailServer installation. You will need the following items installed:
  <ul>
    <li>PHP (<a href="http://www.vertstudios.com/blog/php-apache-installation-tutorial/">Installation Guide</a>)</li>
    <li>Apache (<a href="http://www.vertstudios.com/blog/php-apache-installation-tutorial/">Installation Guide</a>)</li>
    <li>MySQL (<a href="http://www.vertstudios.com/blog/mysql-installation-tutorial">Installation Guide</a>)</li>
  </ul>
You will also need a mail service of some form. A free option such as <a href="http://mail.google.com">gmail</a> will suffice.

<h2>Installing hMailServer</h2>
Follow these steps in relation to your installation directories.

Download the <a href="http://www.hmailserver.com/index.php?page=background_download_file&downloadid=207">hMailServer exe</a>. (If that download link fails, visit the hMailServer <a href="http://www.hmailserver.com/index.php?page=download">download page</a>.)
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img1.png" />

Open the installer. Accept the terms and choose your installation directory.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img2.png" />

Select both Server and Administrative Tools.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img3.png" />

Select to use external database engine
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img4.png" />

Determine if you want a Start Menu folder. I opted out, but that's your call. 
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img5.png" />

The database wizard will pop up. Press next. 
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img6.png" />

Select "Create a new hMailServer database"
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img7.png" />

Select "MySQL" as your database server type.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img8.png" />

At this point, we are brought to a form where we need to enter our database connection information.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img9.png" />

<h3>If Using 32bit MySQL</h3>
If you're on a 32bit Windows OS, open up the directory where MySQL is installed. It will usually be C:\Program Files\MySQL\MySQL Server 5.X\. Open up the lib folder, and locate libmysql.dll.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img11.png" />

<h3>If Using 64bit MySQL</h3>
If you're on a 64bit Windows OS using 64bit MySQL, it's important to note that hMailServer itself is a 32bit program, so it requires a 32bit dll from MySQL. You'll need to download <a href="http://www.vertstudios.com/blog/libmysqldll-32-bit-download/">libmysql.dll 32 bit</a> and use it in the next step.

<h3>endif;</h3>

Now that you have located your appropriate version of libmysql.dll, copy it to the "bin" folder of your hMailServer installation. 
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img12.png" />

Switch back to the database configuration form. Your "Database Server Address" and Port will be localhost and 3306 respectively unless you specified otherwise in your MySQL installation. Database Name is whatever you want the database to be called. I call mine "localmail". Your server authentication is a username/password combination that acts as the "root" account for your MySQL server. In my case, the account is the default of root.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img13.png" />

From the service drop down menu, select MySQL. Make sure the MySQL service is running in the background.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img14.png" />

If all goes well, you will get a message confirming that the database was created successfully. 

<h2>Configuring hMailServer</h2>
Now that we have hMailServer installed, we need to configure it so we can use it to send mail.

After the Database was successfully created, hMailServer will ask you to specify a main password.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img15.png" />

After you specified your main password, open hMailAdmin.exe in the Bin folder of your hMailServer installation.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img16.png" />

Select the localhost - Administrator pair and press connect. (Note: Administrator is an important keyword in hMailServer. Do NOT change the username to something else.) Your password will be what you just specified as the "main password".
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img17.png" />

From the welcome screen, select Settings -> Advanced -> IP Ranges -> My Computer. Make sure all boxes under "Require SMTP authentication" are UNchecked. Make sure to save.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img18.png" />

Now go to Settings -> Protocols -> SMTP, and then the "Delivery of e-mail" tab.Write "localhost" as your Local host name.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img19.png" />

As for the SMTP Relayer, this depends entirely on the email service you wish to use. I highly recommend creating a <a href="http://mail.google.com">free Gmail account</a> to follow along with these next few steps.

Whether you're using gmail, yahoo, a web host, or an ISP, you will need the following information:
<ul>
  <li>Host name</li>
  <li>Port Number</li>
  <li>Username/Password Authentication (if required)</li>
</ul>

Google <a href="http://mail.google.com/support/bin/answer.py?answer=13287">conveniently provides</a> this information for their Gmail service. Through some searching, you can find this information for whatever mail service you use by searching for "SMTP Client Configuration _______", where ___ is your desired email provider.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img20.png" />

Using one of my gmail accounts as an example, here is how my configuration looks.
<img alt="PHP Windows Local Mail Server" src="http://www.vertstudios.com/blog/images/php-mail-server/img21.png" />

Save the configuration, and restart your Apache webserver. Now we're finished!

<h2>Testing the Configuration</h2>
Now we need to see if our mail server actually works. Here's a simple php script that'll test our configuration. 

<pre class="prettyprint">
&lt;?php
$to      = 'youremail@yourdomain.com';
$subject = 'the subject';
$message = 'hello';
$headers = 'From: webmaster@example.com' . &quot;\r\n&quot; .
    'Reply-To: webmaster@example.com' . &quot;\r\n&quot; .
    'X-Mailer: PHP/' . phpversion();
date_default_timezone_set('America/Chicago');

$mail = mail($to, $subject, $message, $headers);
if($mail){
echo &quot;YES&quot;;
} else{
echo &quot;NO&quot;;
}
?&gt;
</pre>

The script will print "YES" if the email sent, and you should find that you have new mail in your inbox!

<h2>Feedback</h2>
Did you find this tutorial helpful? Did you come across any problems? Let us know in the comments below!
]]></content>
    <excerpt><![CDATA[Learn to to install and configure a local mail server to work with PHP, allowing you to use PHP's mail() function locally. ]]></excerpt>
  </item>
  <item>
    <title>3 Tips for Making Your Web Copy Kick-Ass</title>
    <link>http://www.vertstudios.com/blog/3-tips-making-web-copy-kick-ass/</link>
    <pubdate>Fri, 25 Mar 2011 15:00:34 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3302</guid>
    <description></description>
    <content><![CDATA[The text on your website, without question, will influence a visitor's decision to accept or ignore your message. Your message may be as simple as "this product will make you happy", or as complex as "this is why you should enable Apache's mod_rewrite." Regardless, conveying your message in a clear, appropriate, and motivating manner remains a critical component of satisfying visitor wants and needs. We'll show you three easy ways to elevate your web copy from mediocre to kick-ass. 

<h2>Use the "So What?" Test</h2>
Every paragraph of your web copy needs to have an explicit purpose. To keep yourself on track, you can abide by the "So What?" test. Essentially, after every paragraph, ask yourself "so what?" or "how does that solve my problem?" This process helps you, the writer, easily distinguish <a href="http://www.seocopywriting.com/content-marketing/shzam-transforming-ordinary-features-into-extraordinary-benefits/">features from benefits</a>. Overall, the "so what?" test alleviates potential objections the reader might have before those objections become too rooted in their subconcious. 

For example, consider this poorly crafted copy that may appear on the site of a web designer:
<blockquote>
At Web Design Solution Inc, we implement standards compliant HTML5 on all of our projects. We take pride in implementing CSS3 and jQuery, and host all of our sites using the open-sourced Apache webserver.
</blockquote>

Wow, neat, eh? But...so what? The company touts their capabilities without giving a single reason why the visitor should care enough about their jargon-filled rant to make a purchase.

An example of applying benefit-driven copy aided by the "so what?" test would be:
<blockquote>
Engagement and stimulation fuel the advancing web. We have the expertise required to deliver an engaging user experience that visitors now expect - keeping them on your site, and off your competitor's.
</blockquote>

This paragraph more effectively conveys the benefits of the web design company having jQuery and CSS3 capabilities. Let's break down each sentence with the "so what?" test:

<strong>Engagement and stimulation fuel the advancing web. So what?</strong>
The web is advancing. If you are not engaging and stimulating your visitors, you are not a part of the advancedment. Your products or services may be perceived as outdated.

<strong>We have the expertise required to deliver an engaging user experience that visitors now expect. So what?</strong>
Not only have we identified the fact that visitors now expect a superior web experience, we've assured the visitor that we can handle these demands.

<strong>...keeping them on your site, and off your competitor's. So what?</strong>
This is the bottom line. Losing a customer to a competitor is devastating. We'll help you avoid such a tragic event by making an engaging website that gives them no reason to check out the websites of your competition. 


<h2>Avoid Passive Voice Like the Plague</h2>
"To be verbs" describes usage of the words am, is, are, was, were, be, being, been. While these words find themselves used in every day dialect, they can decrease the quality of your web copy when combined with past participles such as "I had ran," and  "I have been running". How so? Passive voice leads to weak, timid, indirect phrasing. One can usually avoid passive voice by slightly altering the tence and the sentence structure. 

For example, consider the following sentence:
"Our web design has been bringing in more clients than before,"
compared to
"Our web design brings in more clients than before."

This sentence, though extremely similar, implies a stronger degree of action. When you have revised your copy to eliminate as many occurances of passive voice as possible, the subtleties accumulate, leading to a more enjoyable, descriptive read.

For further reading on passive voice, do not miss out on this <a href="http://www.unc.edu/depts/wcweb/handouts/passivevoice.html">amazing explanation</a>. 

<h2>Convince the Scanner to STOP and Read</h2>
People who frequently read online usually skim documents based on headlines. However, this places us in a bind. Headlines cannot convert visitors into customers/subscribers on their own, simply because headlines do not contain enough information to effectively pursuade. However, a kick-ass headline can easily grab the attention of someone merely skimming the surface of your content. <a href="http://www.copyblogger.com/10-sure-fire-headline-formulas-that-work/">Effective headline writing</a> greatly increases the chances your visitors will digest the valuable information you have created for them.

Creating great web copy takes time and <em>tons</em> of practice. But don't worry! By adhering to these simple principles, as well as keeping up with the copywriting blog <a href="http://www.copyblogger.com">Copyblogger</a>, you can dramatically increase the effectiveness of your content.
]]></content>
    <excerpt><![CDATA[The text on your website, without question, will influence a visitor's decision to accept or ignore your message. Your message may be as simple as "this product will make you happy", or as complex as "this is why you should enable Apache's mod_rewrite." Regardless, conveying your message in a clear, appropriate, and motivating manner remains a critical component of satisfying visitor wants and needs. We'll show you three easy ways to elevate your web copy from mediocre to kick-ass. ]]></excerpt>
  </item>
  <item>
    <title>What Is a Function</title>
    <link>http://www.vertstudios.com/blog/what-is-a-function/</link>
    <pubdate>Wed, 23 Mar 2011 15:00:39 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3304</guid>
    <description></description>
    <content><![CDATA[I believe all programmers and computer scientists should take the time to appreciate the foundations of mathematics. If you currently attend a university, I highly encourage you to take a foundations course. Learning math foundations expands your mind, and gives you a greater understanding of the concepts we programmers implement every single day. 

For those of you who do not have the ability or desire to invest in a foundations of mathematics course, but still appreciate the complexities and origins of our field of work, I will very briefly describe what a function really is. 

<h2>Set Theory</h2>
<a href="http://en.wikipedia.org/wiki/Set_theory">Set theory</a> is an extremely important branch of mathematics. Without set theory, we would not have <a href="http://en.wikipedia.org/wiki/Computability_theory">computability theory</a>. 

<h3>Definition of Set</h3>
The definition of a set is somewhat circular, namely a collection of objects that are known as <em>elements</em> of the set. Sets are denoted using curly braces, and elements of the set are separated by a comma.

Examples:
{a,b,c,...,z}
{1,3,5,7}

It's important to note that sets do not take order into account. That is,<strong> {a,b,c} = {c,b,a}</strong>. Additionally, repeated entries can be ommitted. For example, {a,b,c,c} = {a,b,c}


<h3>Complex Sets</h3>
More complex sets can be described using the "|" symbol, which is read "such that" or "with the property that"

{2x|x is an integer} (Also known as the set of even numbers)
{2x+1|x is an integer} (Also known as the set of odd numbers}

<h3>Pre-defined Sets</h3>
In mathematics, some sets are referred to so much, we have them predefined and represented by symbols. Here is a table of the most commonly used sets.
<table>
    <tr>
        <th>Set</th><th>Symbol</th>
    </tr>
    <tr>
        <td>Integers</td><td>Z</td>
    </tr>
    <tr>
        <td>Real Numbers</td><td>R</td>
    </tr>
    <tr>
        <td>Rational Numbers</td><td>Q</td>
    </tr>
</table>

<h3>Elements and Subsets</h3>
Objects that are in the set are said to be elements of the set. This relationship is denoted element&isin;Set. For example, 2&isin;{2,4,6,8}. If every element of set A is also an element of set B, it is said that A is a subset of B, denoted A&sube;B.

Examples:
{1,2,3}&sube;{1,2,3,4,5}
{2,4,6,...,8}&sube;{2x|x&isin;Z}

<h2>Cartesian Product</h2>
The Cartesian Product of two sets A and B, denoted AXB, is defined as follows:
AXB = {(a,b)|a&isin;A and b&isin;B}

So AXB yields a set of ordered pairs.

Example:
A={1,2,3}, B={a,b,c}
AXB = {(1,a),(1,b),(1,c),(2,a),(2,b),(2,c),(3,a),(3,b),(3,c)} 

<h2>Relations</h2>
A relation R from set A to set B is any subset of AxB (defined above). 

Take our previous example:
A={1,2,3}, B={a,b,c}
AXB = {(1,a),(1,b),(1,c),(2,a),(2,b),(2,c),(3,a),(3,b),(3,c)} 

The following are relations.
R1={(1,a),(3,b),(2,a)}
R2={(2,b),(2,c),(3,b)}

<h3>Domain and Range</h3>
The domain and range of a relation R from set A to set B is as follows:
Dom(R) = {a&isin;A|There exists a b&isin;B such that (a,b)&isin;R}
So for the examples above, Dom(R1) = {1,3,2}, and Dom(R2)={2,3}
Ran(R) = {b&isin;B|There exists an a&isin;A such that (a,b)&isin;R}
So for the examples above, Ran(R1) = {a,b}, and Ran(R2) = {b,c}
<h2>Functions</h2>
Now we get to the fun! As a programmer, you already know the notion of a function. When you pass a set of values to a function, you get a value back. An obvious fact that you may not have taken the time to consider is that if you pass in the same input, a function will ALWAYS give you the same result back. Thus, the formal definition of a function is as follows:
<blockquote>A function f is a relation from A to B such that for x1,x2&isin;Dom(f)=A, x1=x2 implies f(x1)=f(x2).</blockquote>

In other words, in the event two values passed to a function are equal, the corresponding function values will be equal. Essentially, every value only yields one and only one output...just like in our programming functions!

<h3>But What About Random Functions?</h3>
You might think that random functions, such as <a href="http://php.net/manual/en/function.rand.php">PHP's rand()</a>, nullify the concept of a function. It's true, calling rand() can yield multiple values. But upon examining the official documentation, we see the following:
<blockquote>"The random number generator is seeded automatically."</blockquote>

This means the rand() function is automatically passed a value, referred to here as a seed. The function returns an output based on that value. Randomness cannot simply "occur" and be "extracted by" a computer. The general solution is a <a href="http://en.wikipedia.org/wiki/Pseudorandom_number_generator">Pseudorandom number generator</a>, which is what every random function in every programming language uses. Usually the seed is some derivation of the current time, since time never remains constant. However, if your seed is based on a relatively slow unit of time, such as seconds or even minutes, the function will return the same value, <b>guaranteed</b>. This is echoed by a <a href="http://www.php.net/manual/en/function.rand.php#75325">user's comment</a> in the official rand documentation:
<blockquote>"Note that the automatic seeding seems to be done with the current number of seconds which means you can get the same results for several runs on a fast server.  Either call srand() yourself with a more frequently changing seed or use mt_rand() which doesn't appear to suffer from the problem."</blockquote>

Are random functions useless? Not at all! Random functions in programming aim to be <em>random enough</em> for general use. Check out this awesome visual example of <a href="http://www.boallen.com/random-numbers.html">True Random vs PHP rand()</a>. 


<h2>Further Reading</h2>
I hope you've enjoyed this very, VERY brief introduction to functions! Please, do not consider this summary complete in any form. I was mainly hoping to entice you to the beautiful overlap between mathematics and computer science. If you wish to further your ability to think abstractly, I highly recommend reading through <a href="http://www.brics.dk/~gwinskel/STiCS.pdf">Set Theory for Computer Science</a>, a free textbook with excellent information regarding functions and proofs, along with applications for the field of computer science.
]]></content>
    <excerpt><![CDATA[I believe all programmers and computer scientists should take the time to appreciate the foundations of mathematics. If you currently attend a university, I highly encourage you to take a foundations course. Learning math foundations expands your mind, and gives you a greater understanding of the concepts we programmers implement every single day. 

For those of you who do not have the ability or desire to invest in a foundations of mathematics course, but still appreciate the complexities and origins of our field of work, I will very briefly describe what a function really is. ]]></excerpt>
  </item>
  <item>
    <title>Test PHP Mail Function</title>
    <link>http://www.vertstudios.com/blog/test-php-mail-function/</link>
    <pubdate>Tue, 22 Mar 2011 15:00:12 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3306</guid>
    <description></description>
    <content><![CDATA[When <a href="http://www.vertstudios.com/blog/windows-php-mail-server-installation-guide/">setting up your mail server</a>, you may want to check your <strong>php mail</strong> function with a simple script. 
<h2>The PHP Code</h2>
The following script was snagged from the <a href="http://php.net/manual/en/function.mail.php">php mail()</a> documentation, with a few minor adjustments explained below.
<pre class="prettyprint">
&lt;?php
$to      = 'youremail@yourdomain.com';
$subject = 'the subject';
$message = 'hello';
$headers = 'From: webmaster@example.com' . &quot;\r\n&quot; .
        'Reply-To: webmaster@example.com' . &quot;\r\n&quot; .
          'X-Mailer: PHP/' . phpversion();
date_default_timezone_set('America/Chicago');
 
$mail = mail($to, $subject, $message, $headers);
if($mail){
    echo &quot;YES&quot;;
} else{
    echo &quot;NO&quot;;
}
?&gt;
</pre>

<h2>The Breakdown</h2>
While the code is pretty self explanatory, there are a few noteworthy items. 

<h3>Required Time Zone</h3>
If you do not specify a time zone, the mail() function will yell at you. Be sure to specify a time zone through <a href="http://php.net/manual/en/function.date-default-timezone-set.php">date_default_timezone_set()</a>

<h3>Mail Function Boolean Value</h3>
The mail() function returns true if mail was successfully sent, and false otherwise. You can use this characteristic to inform the user whether the message was successfully delivered. 
]]></content>
    <excerpt><![CDATA[When setting up your mail server, you may want to check your php mail function with a simple script.]]></excerpt>
  </item>
  <item>
    <title>Switch From Windows Command Prompt to Explorer</title>
    <link>http://www.vertstudios.com/blog/switch-windows-command-prompt-explorer/</link>
    <pubdate>Mon, 21 Mar 2011 15:00:25 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3308</guid>
    <description></description>
    <content><![CDATA[In your development workflow, you might find it more convenient to head back to the GUI interface of windows explorer while working from the command prompt. It's not uncommon for me to be 7 directories in from the root directory while working on a project. 
Thankfully, there are extremely simple ways to open your current <strong>command prompt directory</strong> in Windows Explorer, and <a href="#command">vice versa</a>. 

<h2>Switching from Command Prompt to Explorer</h2>
Take this rather long directory for example, which contains this very Wordpress theme.
<img src="http://www.vertstudios.com/blog/images/command-prompt-switch/command-prompt-switch-0.png" />
If I wanted to view the files in explorer, I'd have to double click on a pretty long series of files to get to the same directory. The quick alternative is to use
<pre class="prettyprint">start %CD%</pre>
<img src="http://www.vertstudios.com/blog/images/command-prompt-switch/command-prompt-switch-1.png" />
The command successfully opens the current directory into a new explorer window. 

<a name="command"></a>
<h2>Switching from Explorer to Command Prompt</h2>
Consider the scenario in which you're moving files around in <strong>windows explorer</strong>, and then you want to open the command prompt to edit files with VIM or commit with Git. Instead of opening your command prompt and doing a long cd command, you can perform the following simple steps:
<h3>Ensure No Items are Selected</h3>
The following key combination will not work if a file is selected. It will bring up a context menu which does not contain the item we'll be using.
<img src="http://www.vertstudios.com/blog/images/command-prompt-switch/command-prompt-switch-2.png" />
<h3>Shift + Right-Click in Open Space</h3>
While holding shift, right click in some open space. This will bring up the usual right-click menu, but with one major exception. Near the bottom, you will see "Open Command Window Here"
<img src="http://www.vertstudios.com/blog/images/command-prompt-switch/command-prompt-switch-3.png" />

This opens up a command prompt correlating to the current directory.

<h2>That's It!</h2>
That was easy! Knowing the shortcuts of your OS can save you a lot of time, regardless of what OS you use. 
]]></content>
    <excerpt><![CDATA[In your development workflow, you might find it more convenient to head back to the GUI interface of windows explorer while working from the command prompt. It's not uncommon for me to be 7 directories in from the root directory while working on a project. 
Thankfully, there are extremely simple ways to open your current <strong>command prompt directory</strong> in Windows Explorer, and vice versa.]]></excerpt>
  </item>
  <item>
    <title>Dear Smashing Magazine</title>
    <link>http://www.vertstudios.com/blog/dear-smashing-magazine/</link>
    <pubdate>Tue, 22 Mar 2011 14:11:07 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3348</guid>
    <description></description>
    <content><![CDATA[According to <a href="http://www.smashingmagazine.com/2011/03/21/dear-web-design-community-where-have-you-gone/">Smashing Magazine</a>, the sky is falling. <a href="http://www.smashingmagazine.com/2010/04/08/opinion-column-the-sad-state-of-the-web-design-community/">Again</a>. The web design community has heeled over, and is down for the count. Who's to blame? The people making a living doing what they love, of course. 

<blockquote>"The worrying part is that the number of the less experienced active contributors has increased exponentially. Due to that, I am afraid that the community is not led in the right direction. The true leaders — professional, knowledgeable designers and coders — are busy. Busy with their work or perhaps they feel that it’s no longer worthwhile for them to spend much time contributing."</blockquote>
(Read the full Smashing Magazine article <a href="http://www.smashingmagazine.com/2011/03/21/dear-web-design-community-where-have-you-gone/">here</a>)

Smashing,  this post will let you know exactly where the web design community has gone. 

<h2>Time Spent Writing is Time Spent Not Designing</h2>
Blogging about design and commenting on articles about design is, in fact, not designing. Unless you're Smashing magazine or Nettuts, blogging about design doesn't pay for groceries, kid's soccer camp, or utilities. 

But the author of the article isn't asking for much time. He's only asking for 10-15 minutes a day.
<blockquote>"Perhaps we could all dedicate 10 to 15 minutes of our time to the community every day. We could (and should) make this a firm personal commitment and encourage each other to take part."</blockquote>

Well that doesn't sound too bad. But what does Smashing Magazine want us to accomplish in these 10 to 15 minutes a day?
<ul>
<li>ask "lengthy questions" and provide "detailed answers"</li>
<li>have "in-depth discussions with hundreds of meaningful, engaged comments"</li>
<li>engage in "vivid debates spreading from one site to another"</li>
<li>to "read more than 5–7 design pieces a day"</li>
<li>create longer blog posts and comments</li>
<li>not click away and ignore a discussion</li>
<li>think about what exactly "design" is</li>
<li>study "lessons from the past"</li>
</ul>

And a hell of a lot more. The average adult can read between 250-300 <a href="http://www.education.com/definition/words-per-minute-wpm/">words per minute</a>. This Smashing article in particular has about 12,000 words between the post and the comments. It would take the average adult 40 minutes to pour over one Smashing Magazine article. 

Anyone who's ever used <a href="http://www.stackoverflow.com">StackOverflow</a> or answered questions on forums like <a href="http://www.webdeveloper.com">WebDeveloper</a> knows how long Q&A can take. Unless the question is so blatantly obvious, you'll find yourself tinkering with code or writing a response for well over 15 minutes for a single answer that you may not even get a "thank you" for. 

Writing an article worth reading takes time, effort, commitment, and a whole lot of convincing yourself that it's worth it - especially when you don't make a dime off a post. Of course when you're raking in advertising dollars you have more incentive to write articles. 

<h3>15 minutes is not enough time</h3>
To accomplish all these wonderful, community-building feats every day would take at least 5 hours a day. I haven't seen such over-optimism since Google Buzz. 

<h3>Time Sacrificed is Not Free</h3>
If the life of the community rides on our shoulders, where exactly do we fit it in? Do we say no to client work, to time with family, to time away from work? Something has to give. I love this industry, but I want to <em>keep it that way</em>. Engrossing myself in web design every minute of my life would have me going back to school to be a music major very, very quickly. 

<h2>Measuring the Health of the Community</h2>
Why judge the community by quantity of comments or twitter flame wars or the number of verbose blog posts? Why not judge the community by the overall beauty of the web. That's our goal as web designers; to make websites that look and function spectacularly. There is a web outside of our little Web 2.0 bubble, and you know what? It's starting to look pretty good. 

Do you know how you can contribute to the community of the web <em>as a whole</em>? Be good at what you do. Try your very best to make every single project you take on one you can be proud of. Make inspiring work. It's that simple.]]></content>
    <excerpt><![CDATA[According to <a href="http://www.smashingmagazine.com/2011/03/21/dear-web-design-community-where-have-you-gone/">Smashing Magazine</a>, the sky is falling. <a href="http://www.smashingmagazine.com/2010/04/08/opinion-column-the-sad-state-of-the-web-design-community/">Again</a>. The web design community has heeled over, and is down for the count.]]></excerpt>
  </item>
  <item>
    <title>Less.app for Windows (Sort of)</title>
    <link>http://www.vertstudios.com/blog/less-app-windows-sorta/</link>
    <pubdate>Sun, 27 Mar 2011 16:00:01 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3395</guid>
    <description></description>
    <content><![CDATA[After recently purchasing my first Mac, I decided I wanted to sync my Mac and Windows workflow. The <a href="http://incident57.com/less/">Less.app</a> app for Mac is amazing for compiling your Less files the instant you save them. Unfortunately, there was no Less.app equivalent for Windows...until now!...sorta. (This may have already been done before, but I seriously couldn't find anything after an hour of Googling). 

<h2>This Script is No Longer Needed!</h2>
I'm happy to announce that the web dev community has finally come together and produced GUI implementations of Less.app for Windows.

The previous version of the article follows below. Now all that's left for you to do is get your ass off Windows and start working in a unix environment ;)
<hr />

Check out <a href="http://wearekiss.com/simpless">SimpLess</a>, and <a href="http://winless.org">WinLess</a>

<strong>UPDATE:</strong>
I've verified that this actually works for Ubuntu as well! Follow <a href="http://www.codediesel.com/linux/installing-node-js-on-ubuntu-10-04/">this guide</a> to install node.js on Ubuntu

<h2>Guide Overview</h2>
<ul>
<li>Purpose: Allow Windows users to compile less files into css upon file save</li>
<li>Time Needed: 20 minutes</li>
<li>Computer Skill Level Recommended: Intermediate</li>
</ul>

<h2>Less.app for Windows Instructions</h2>
So our "less.app" will simply be a command line job that monitors your less files.

First, you'll need to snag the latest <a href="http://node-js.prcn.co.cc/">Node.js Windows binaries</a>. (If you don't have <a href="http://www.7-zip.org/">7-Zip</a>, you'll need it to extract the files). 
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-0.png" alt="Less.app for Windows" />

Next, extract the files to a location preferably close to the root directory, making sure the path ends in "node". I'll be using E:\node
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-1.png" alt="Less.app for Windows" />

Modify your <a href="http://geekswithblogs.net/renso/archive/2009/10/21/how-to-set-the-windows-path-in-windows-7.aspx">Windows PATH</a> to include the bin directory of your node download. In my case, I'll append E:\node\bin.
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-4.png" alt="Less.app for Windows" />


Now download the most recent copy of <a href="https://github.com/cloudhead/less.js/">Less.js</a> from GitHub. (The Downloads button on the right allows you to download a zipped version). 
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-2.png" alt="Less.app for Windows" />

<h2>Configuration</h2>
The rest of the tutorial <strong>and the code itself</strong> assumes you have the following file structure for your projects:
<pre class="prettyprint">
css/
less/
images/
file1.html
file2.html
</pre>

Most importantly, your less directory and your css directory should be "sibling" directories. 
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-3.png" alt="Less.app for Windows" />

Download this simple <a href="http://www.vertstudios.com/blog/images/less-app-windows/test_site.zip">project structure</a> to follow along with the rest of the guide. 

(If you need to change the directory output, you can easily alter the code we will be using soon). 

Extract the downloaded Less.js Zip to the the less directory of the project you'll be using less in. 
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-6.png" alt="Less.app for Windows" />

The folder name will be in the form "cloudhead-less.js..." followed by some numbers. Rename the folder to "lessjs". <strong>At this point, your less folder contains the lessjs folder</strong>.

Now download this JavaScript file named <a href="http://www.vertstudios.com/blog/images/less-app-windows/less.js">less.js</a>. <strong>This is the script that compiles your less into css</strong>. Move it to your less folder. Your less folder should now look like so:
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-7.png" alt="Less.app for Windows" />

<h2>Compiling Less to CSS</h2>
Now we're finally ready to compile our Less to CSS! 

Open your less directory in the command prompt. (See a shortcut <a href="http://www.vertstudios.com/blog/switch-windows-command-prompt-explorer/">HERE</a>)
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-8.png" alt="Less.app for Windows" />

Now type the following in the command prompt:
<pre class="prettyprint">node less.js</pre>

The module first compiles all .less files in the directory to css, and outputs the css file in the css directory. Next, as long as you leave the command prompt open, the module listens for any more changes to any of the .less files. Once it detects a change, it automatically compiles and updates the css file. To stop the module, use <b>CTRL + c</b>. 
<img src="http://www.vertstudios.com/blog/images/less-app-windows/less-app-windows-9.png" alt="Less.app for Windows" />

<h2>You're Done!</h2>
Now you can automatically compile and update your .less files on any of your projects, regardless of platform. If you aren't too concerned about updated versions of less, you can simply copy the lessjs file and the less.js javascript file into all your projects. 

<h2>Feedback</h2>
Was there anything unclear in this guide? Did the tutorial rock? Let us know in the comments below! ]]></content>
    <excerpt><![CDATA[After recently purchasing my first Mac, I decided I wanted to sync my Mac and Windows workflow. The <a href="http://incident57.com/less/">Less.app</a> app for Mac is amazing for compiling your Less files the instant you save them. Unfortunately, there was no Less.app equivalent for Windows...until now!...sorta. (This may have already been done before, but I seriously couldn't find anything after an hour of Googling). ]]></excerpt>
  </item>
  <item>
    <title>Physxcudart_20.dll Download</title>
    <link>http://www.vertstudios.com/blog/physxcudart20-dll-download/</link>
    <pubdate>Tue, 07 Jun 2011 05:42:01 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3462</guid>
    <description></description>
    <content><![CDATA[<a href="http://www.vertstudios.com/downloads/physxcudart_20.zip">Download physxcudart_20.dll</a> (ZIP File)

<h2>When Would you Need this DLL?</h2>
Some games, such as <strong>Borderlands</strong> require this dll file. Without it, your game might not even start.

<h2>Where to place this DLL on your system?</h2>
To keep things simple, you can just extract the dll to c:\windows\system32. 

<h2>Why Bother Posting This?</h2>
<h3>physxcudart_20.dll not found</h3>

I recently purchased Borderlands for PC, but would receive the error message "<strong>physxcudart_20.dll not found</strong>". Reinstalling the program and reinstalling the latest nVidia drivers did not correct the issue, so I sought after the dll file. After sifting through tons of sites with fake Download buttons (that were actually just ads), I finally found the file. 

<a href="http://www.vertstudios.com/downloads/physxcudart_20.zip">Download physxcudart_20.dll</a> (ZIP File)
]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Overcome Programming Apathy</title>
    <link>http://www.vertstudios.com/blog/overcome-programming-apathy/</link>
    <pubdate>Tue, 21 Jun 2011 21:58:53 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3491</guid>
    <description></description>
    <content><![CDATA[Sometimes you feel like you never have the energy to program, whether at work or for your own startup. You wish you had the energy, and you have a genuine passion for development...but you just can't seem to get started.

<h2>The Solutions</h2>
These are the strategies I use to overcome my slumps and get myself motivated to code again.

<h3>Manage Energy Sinks</h3>
As an introvert with a love for <a href="http://news.ycombinator.com/">hacker news</a> and <a href="http://us.battle.net/sc2/en/profile/2757225/1/RegEx/">starcraft</a>, spending 15+ hours a day on the computer (6-8 work + 6-8 play) does not take any effort. Many activities on the computer are what I call 'energy sinks'. Energy sinks such as gaming require energy and focus but give none back.  In contrast, activities such as exercise and socializing tend to leave me feeling as energized (or more so) than before. During my stages of programming apathy, I may pour my entire day into energy sinks, leading to the slow deterioration of my mental diligence. Common energy sinks include:

<ul>
<li>Video Games</li>
<li>Television</li>
<li>Social Media</li>
<li>Forum Trolling</li>
</ul>

Of course these activities are not inherently bad. In fact, I'd argue they help relieve stress caused by everyday life. Just make sure these activities do not begin to contribute to the stress you wish to escape by overindulging.

<h3>Brain Teasers</h3>
Sometimes in your programming career, the tasks at hand are, let's face it, <strong>boring as hell</strong>. It's difficult to maintain your perseverance and passion for development when you absolutely dread the project work has in store for you. Spending thirty minutes a day on programming brain teasers not only improves your ability as a programmer, it serves as a friendly reminder that programming can be fun. After all, that euphoria inducing "I figured it out!" moment is why many of us do what we do. 

Programming brain teaser sites include:
<ul>
<li><a href="http://projecteuler.net/">Project Euler</a></li>
<li><a href="http://puzzlenode.com/puzzles">Puzzle Node</a></li>
<li><a href="http://www.ioi2009.org/index.jsp;jsessionid=0B6696CAD77A789846D13C10D25C1CD8?ln=2&id=363">IOI</a></li>
<li><a href="http://www.olympiad.org.uk/problems.html">Computer Problems from BIO and IOI</a></li>
<li><a href="http://www.facebook.com/careers/puzzles.php">Facebook's Engineering Puzzles</a></li>
<li><a href="http://www.pythonchallenge.com/">The Python Challenge</a></li>
<li><a href="http://www.gowrikumar.com/c/index.html">C Puzzles</a></li>
<li><a href="https://sites.google.com/site/prologsite/prolog-problems">Prolog Problems</a></li>
<li><a href="http://plg1.cs.uwaterloo.ca/~acm00/">Waterloo Programming Contests</a></li>
<li><a href="http://code.google.com/codejam/contests.html">Google's Code Jam</a></li>
<li><a href="http://mathschallenge.net/search">MathChallenges.net</a></li>
<li><a href="http://codekata.pragprog.com/">Code Kata</a></li>
<li><a href="http://icpc.baylor.edu/Past/PastProblems.html">Baylor Problem Archives</a></li>
<li><a href="http://www.karrels.org/Ed/ACM/">Ed's Programming Contest Archives</a></li>
</ul>

<h3>Teach Someone</h3>
Find a niece, nephew, aunt, uncle, anyone bored enough to let you ramble on for an hour, and introduce them to programming via an easy language like python. If you like something, teaching someone else the ropes often strengthens your own enthusiasm for the subject. For example, I recently helped my cousin through a <a href="http://www.sthurlow.com/python/lesson01/">python beginner's tutorial</a>, and his enthusiasm for the content mirrored my own when I first started. His energy and amazement gave me the push I needed to get back on my feet. The power of a student's enthusiasm can not be overstated; I now see why teacher's choose such a path. 

<h2>Your Story</h2>
Have you ever faced a slump that made you dread the job you once loved? How did you handle it? Leave a comment below! 
]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>mkdir and cd at the Same Time</title>
    <link>http://www.vertstudios.com/blog/mkdir-cd-at-same-time/</link>
    <pubdate>Sat, 25 Jun 2011 22:14:39 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3559</guid>
    <description></description>
    <content><![CDATA[Fact: I'm lazy as hell. <strong>mkdir x && cd x</strong> for whatever reason just seems too long to create a directory and cd into it at the same time. 

To engage in my laziness, append the following to your ~/.bashrc

<pre class="prettyprint">
function mkcd(){
    mkdir -p $1 &amp;&amp; cd $1
}
</pre>

Now execute the command <strong>source ~/.bashrc</strong> so your session takes the edited file into account. 

Now simply executing
<pre class="prettyprint">
mkcd testFile
</pre>

will create the testFile directory and make that your working directory.

Horray for lazy!]]></content>
    <excerpt><![CDATA[Fact: I'm lazy as hell. <strong>mkdir x && cd x</strong> for whatever reason just seems too long to create a directory and cd into it at the same time. ]]></excerpt>
  </item>
  <item>
    <title>Linux Snippet: Run ~/.bash_profile on Startup (GNOME)</title>
    <link>http://www.vertstudios.com/blog/linux-snippet-run-bash-profile-start/</link>
    <pubdate>Sun, 26 Jun 2011 18:07:58 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3575</guid>
    <description></description>
    <content><![CDATA[If you've edited your ~/.bash_profile to include scripts you'd like executed on start up, you might be surprised when you open up your terminal and those scripts don't execute. By default, ~/.bashrc executes on session start, but ~/.bash_profile doesn't. 

To execute your ~/.bash_profile on startup, simply append this to your ~/.bashrc
<pre class="prettyprint">
source ~/.bash_profile
</pre>

<h2>Ta-da! </h2>

Now you can print out some cool ascii art on start up, define custom functions (such as <a href="http://www.vertstudios.com/blog/mkdir-cd-at-same-time/">mkdir and cd</a> at the same time), and other fun Linux-ey type things.]]></content>
    <excerpt><![CDATA[If you've edited your ~/.bash_profile to include scripts you'd like executed on start up, you might be surprised when you open up your terminal and those scripts don't execute. By default, ~/.bashrc executes on session start, but ~/.bash_profile doesn't. 

To execute your ~/.bash_profile on startup, simply append this to your ~/.bashrc]]></excerpt>
  </item>
  <item>
    <title>Remove All Ruby Gems (Ubuntu)</title>
    <link>http://www.vertstudios.com/blog/remove-ruby-gems-ubuntu/</link>
    <pubdate>Sun, 26 Jun 2011 18:32:05 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3580</guid>
    <description></description>
    <content><![CDATA[Recently (as in thirty seconds ago) I needed to remove all ruby gems from my system. After searching the interwebs, I came across an <a href="http://geekystuff.net/2009/01/14/remove-all-ruby-gems/">article</a> explaining how to remove all ruby gems on Fedora core linux.

The snippet adjustment for Ubuntu was easy, just involved remove some quotes and adding sudo. For a detailed explanation on how the command works, check out that article. 

<h2>Remove All Ruby Gems</h2>
<pre class="prettyprint">
gem list | cut -d&quot; &quot; -f1 | xargs sudo gem uninstall -aIx
</pre> ]]></content>
    <excerpt><![CDATA[Recently (as in thirty seconds ago) I needed to remove all ruby gems from my system. After searching the interwebs, I came across an <a href="http://geekystuff.net/2009/01/14/remove-all-ruby-gems/">article</a> explaining how to remove all ruby gems on Fedora core linux.

The snippet adjustment for Ubuntu was easy, just involved remove some quotes and adding sudo. For a detailed explanation on how the command works, check out that article. ]]></excerpt>
  </item>
  <item>
    <title>Static Classes in JavaScript with Immutable Members</title>
    <link>http://www.vertstudios.com/blog/static-classes-js-immutable-members/</link>
    <pubdate>Mon, 11 Jul 2011 19:39:48 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3587</guid>
    <description></description>
    <content><![CDATA[Okay, we know that JavaScript <a href="http://www.1stwebdesigner.com/design/object-oriented-basics-javascript/">doesn't actually have classes</a>. Prototypes, yada yada, life goes on. So while Static Classes in JavaScript don't exist, let's talk about them anyway! 

<h2>Reminder: Static Classes</h2>
Static classes are classes that are not instantiated. For example, the Math class in JavaScript. 

<pre class="prettyprint">
var number = Math.pow(2,3); // Math is a static class
var john = new Person();    // Person is not a static class
john.say_hi();              // Invoke the say_hi method
</pre>

Since the <b><i>say_hi</i></b> method is called via the Person object john, it is not static. In contrast, the <b><i>pow</i></b> method is called directly from the Math class itself. 

<h3>When to use Static Classes?</h3>
The decision to use a static class depends all on personal preference and readability. The downside to static classes is that the class name populates the global namespace. A static class can easily be converted to a non static class, so if you change your mind, it's really not a big deal.

<h3>A Sample Static Class</h3>
<pre class="prettyprint">
// Start off with an empty object
var Physics = {};

// Begin populating with attributes or methods
Physics.get_velocity = function(vi, a, t){
    return vi + a * t;
};

/* Now we can use the get_velocity method without 
 * instantiating a Physics object
 */
var velocity = Physics.get_velocity(5, 9.81, 10); 
</pre>

<h2>Creating Immutable Properties</h2>
The term "immutable" in JS must be taken with a grain of salt. Few items are truly immutable. Not even the methods of the official JS Math class are protected.

<pre class="prettyprint">
/* My plot to sabotage the data of my colleagues 
 * and win the Nobel Prize!!!
 */
Math.pow =  function(a,b){return a + b};

Math.pow(2,3)  // 5, not 8! Bwahahah!
</pre>

But hey, an extra layer of security is better than nothing, right? By using anonymous functions, we can (better) protect the values of properties that we do not want changed. 

<pre class="prettyprint">
// Create our static class, starting with an empty object
var Physics = {};

Physics.prop = function(){
    return {
        g: 9.81,
        pi: 3.14
    };
};

Physics.constant = function(val){
    return Physics.prop()[val];
};

Physics.constant(&quot;pi&quot;); // 3.14

Physics.prop()[&quot;pi&quot;] = &quot;LOL&quot;;
Physics.constant(&quot;pi&quot;); // 3.14
</pre>

This obviously is not a strong degree of protection, but I do honestly believe it's better than nothing. Suggestions and improvements are welcomed!

]]></content>
    <excerpt><![CDATA[Okay, we know that JavaScript <a href="http://www.1stwebdesigner.com/design/object-oriented-basics-javascript/">doesn't actually have classes</a>. Prototypes, yada yada, life goes on. So while Static Classes in JavaScript don't exist, let's talk about them anyway! ]]></excerpt>
  </item>
  <item>
    <title>Install PyQuery under Cygwin</title>
    <link>http://www.vertstudios.com/blog/install-pyquery-cygwin/</link>
    <pubdate>Thu, 18 Aug 2011 23:33:25 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3617</guid>
    <description></description>
    <content><![CDATA[Quick snippet for you Cygwin users out there wanting to use the awesome <a href="http://pyquery.org/">PyQuery</a> library. 

If you've tried to run a pip install pyquery or easy_install pyquery, you may have been greeted with a wall of GCC error messages. If this has happened to you, don't worry, the solution is simple!

<h2>Get lxml running</h2>
The main problem comes down to lxml not being available in your current cygwin installation. Simply follow the instructions on this <a href="http://anythingsimple.blogspot.com/2010/04/install-lxml-on-cygwin.html">life-saving article</a>, and you'll have lxml up running in no time. Don't forget to follow the instructions pertaining to debugging format.

<h2>You're Done!?!?!</h2>
That's right! Now just pip install pyquery and you should be good to go. ]]></content>
    <excerpt><![CDATA[]]></excerpt>
  </item>
  <item>
    <title>Example .screenrc - A Simple Workflow</title>
    <link>http://www.vertstudios.com/blog/screenrc-simple-workflow/</link>
    <pubdate>Sat, 20 Aug 2011 19:36:40 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3621</guid>
    <description></description>
    <content><![CDATA[<a href="http://www.gnu.org/s/screen/">GNU screen</a> is a terminal application that lets you run multiple terminals within a single terminal instance. This tool, which has been around for <i>ages</i>, can greatly improve your organization and workflow.

<h2>An Example .screenrc</h2>
The screenrc file is a file that allows for customization of GNU Screen, similar to how .vimrc helps you customize your VIM experience.  

The example .screenrc source below offers the following features:
<ul>
<li>Visual tabs for all screen instances</li>
<li>VIM-like movement through split screens</li>
<li>No more annoying startup message!</li>
<li>Default tabs that aid a rails/WSGI driven workflow</li>
</ul>
<pre class="prettyprint">
# skip the startup message
startup_message off

# Display a caption string below, appearing like tabs and
# displaying the window number and application name (by default).
caption always
caption string &quot;%{kw}%-w%{wr}%n %t%{-}%+w&quot;
#
# j to move down a window, k to move up. Like teh VIM!
bind j focus down
bind k focus up
#
# Default screens
screen -t VIM
screen -t Git
screen -t Console
screen -t Server
#
# Select first screen
select 0

</pre>

A screenshot of the implementation:
<img src="http://www.vertstudios.com/blog/images/screenrc/screenshot.png" alt="Screenshot of my GNU Screen Environment" title="Screenshot of my GNU Screen Environment" />

<h2>Workflow</h2>
Feel free to change the names of the default tabs. I personally find this tab scheme extremely helpful in keeping myself organized. For those interested in adopting this scheme, or those who just like to examine other developer's workflows, I'll explain my interaction with each tab.

<h3>VIM</h3>
The VIM tab is where I do all my text editing. All text editing should be done here! Opening a text editor in another tab can lead to overwritten files if you are careless and/or under-caffeinated. 

<h3>Git</h3>
All version control related commands should occur in the Git tab. (Feel free to rename to SVN if you're THAT type of person ;) )

<h3>Console</h3>
The console tab is the one I'm most flexible with. In a Rails/Flask environment, this would be where I run rails console/python respectively. A lot of individual function testing is done in this tab. Additionally, I use this tab for general UNIX commands such as mv, touch, and cp. 

<h3>Server</h3>
This tab is where I execute my local server commands, such as <b>rails s</b>. ]]></content>
    <excerpt><![CDATA[<a href="http://www.gnu.org/s/screen/">GNU screen</a> is a terminal application that lets you run multiple terminals within a single terminal instance. This tool, which has been around for <i>ages</i>, can greatly improve your organization and workflow.]]></excerpt>
  </item>
  <item>
    <title>GitHub API - Get Latest Commit Details (PHP)</title>
    <link>http://www.vertstudios.com/blog/github-api-latest-commit-details-php/</link>
    <pubdate>Mon, 22 Aug 2011 14:00:04 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3635</guid>
    <description></description>
    <content><![CDATA[Want to show off the cool open source project you're working on via <a href="https://github.com/joequery">GitHub</a>? This PHP code snippet will snag your most recently updated repo information and its latest commit message through the <a href="http://develop.github.com/">GitHub API</a>. All you have to do is plug in your username.

      <pre class="prettyprint">
&lt;html&gt;
  &lt;head&gt;&lt;title&gt;Test Github API with PHP&lt;/title&gt;&lt;/head&gt;

&lt;body&gt;
&lt;?php
function get_json($url){
  $base = &quot;https://api.github.com/&quot;;
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, $base . $url);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);

    //curl_setopt($curl, CONNECTTIMEOUT, 1);
  $content = curl_exec($curl);
  curl_close($curl);
  return $content;
}

function get_latest_repo($user) {
  // Get the json from github for the repos
    $json = json_decode(get_json(&quot;users/$user/repos&quot;),true);

  // Sort the array returend by pushed_at time
  function compare_pushed_at($b, $a){
    return strnatcmp($a['pushed_at'], $b['pushed_at']);
  }
  usort($json, 'compare_pushed_at');

  //Now just get the latest repo
  $json = $json[0];

  return $json;
}

function get_commits($repo, $user){
  // Get the name of the repo that we'll use in the request url
  $repoName = $repo[&quot;name&quot;];  
  return json_decode(get_json(&quot;repos/$user/$repoName/commits&quot;),true);
}


$latestRepo = get_latest_repo(&quot;joequery&quot;);
$commits = get_commits($latestRepo, &quot;joequery&quot;);
$latestCommit = $commits[0];

// Relevant information
$repoURL = $latestRepo[&quot;html_url&quot;];
$repoName = $latestRepo[&quot;name&quot;];
$repoDescription = $latestRepo[&quot;description&quot;];
$gravatar = $latestRepo[&quot;owner&quot;][&quot;avatar_url&quot;];
$author = $latestCommit[&quot;commit&quot;][&quot;author&quot;][&quot;name&quot;];
$login = $latestCommit[&quot;author&quot;][&quot;login&quot;];
$userURL = &quot;https://github.com/$login&quot;;
$commitMessage = $latestCommit[&quot;commit&quot;][&quot;message&quot;];
$commitSHA = $latestCommit[&quot;sha&quot;];
$commitURL = &quot;https://github.com/$login/$repoName/commit/$commitSHA&quot;;
?&gt;

&lt;h1&gt;Latest Github Activity&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Project: &lt;a href=&quot;&lt;?php echo $repoURL; ?&gt;&quot;&gt;&lt;?php echo $repoName; ?&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;Description: &lt;?php echo $repoDescription; ?&gt;&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;&lt;?php echo $gravatar; ?&gt;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Author: &lt;a href=&quot;&lt;?php echo $userURL; ?&gt;&quot;&gt;&lt;?php echo $author; ?&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Last Commit:  &lt;?php echo $commitMessage; ?&gt; (&lt;a href=&quot;&lt;?php echo $commitURL; ?&gt;&quot;&gt;see commit&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;/body&gt;

&lt;/html&gt;
</pre>

Simply replace my username with yours on lines 41 and 42. You get a lot of information back from the function...just use what you need! (And remember, if you're not sure what information the API/function gives you, print_r is your friend)]]></content>
    <excerpt><![CDATA[Want to show off the cool open source project you're working on via <a href="https://github.com/joequery">GitHub</a>? This PHP code snippet will snag your most recently updated repo information and its latest commit message through the <a href="http://develop.github.com/">GitHub API</a>. All you have to do is plug in your username.]]></excerpt>
  </item>
  <item>
    <title>Daily Contact Form Tests with Python and Cron</title>
    <link>http://www.vertstudios.com/blog/daily-contact-form-tests-python-cron/</link>
    <pubdate>Thu, 25 Aug 2011 19:01:20 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3648</guid>
    <description></description>
    <content><![CDATA[For most websites, the contact form is the primary means of lead generation. A contact form that fails to email you those leads can potentially devastate your business - no exaggeration. How can you tell whether business is slow or your contact form just isn't working? The answer is to simply test the form by filling it out yourself and seeing if you receive the email. This article aims to automate that process. 

<h2>Time Required</h2>
30-45 minutes

<h2>Tools You Will Need</h2>
First and foremost, you will need a UNIX server with root access. That server needs the following items installed:
<ul>
<li><a href="http://www.python.org/getit/releases/2.6/">Python 2.6</a> or greater (but still in the Python 2 family)</li>
<li><a href="http://pypi.python.org/pypi/virtualenv">virtualenv</a></li>
</ul>

<h2>Getting Everything Set Up</h2>

<h3>Move to your scripts directory</h3>
cd to the directory where you keep all your custom scripts. In case you don't have one, you can do what I did and make a scripts directory from the home folder.
<pre class="prettyprint">
sudo mkdir ~/scripts
cd ~/scripts
</pre>

<h3>Set up working environment</h3>
Now that you're in the ~/scripts directory, make another directory and call it daily_mail and cd into it.
<pre class="prettyprint">
mkdir daily_mail
cd daily_mail
</pre>
(Sidenote: <a href="http://www.vertstudios.com/blog/mkdir-cd-at-same-time/">Learn how to make a directory and cd into it in one line</a>)

Now we want to setup our virtualenv, which allows for local python packages.
<pre class="prettyprint">
virtualenv env --python=python2.6 #Put your version here
</pre>

To activate the virtual environment (and grant python access to the libraries we will be installing), execute the following from the ~/daily_mail directory:
<pre class="prettyprint">
. env/bin/activate
</pre>

If the environment activation was successful, you will see (env) somewhere in your next terminal line. (To disable the virtual environment at anytime, simply execute the command "deactivate")

We'll now install the <a href="http://wwwsearch.sourceforge.net/mechanize/">Mechanize</a> library. (<b>Note</b>: We activate the virtual environment before installing libraries to make sure that the libraries are installed only to this environment instead of across the whole system). 
<pre class="prettyprint">pip install mechanize</pre>

<h2>Coding the Contact Form Filler-Outer</h2>
Make sure your virtual environment is activated and start python (just type python in the terminal). Create and open <b>contact_form.py</b> in your favorite text editor. Paste the following in.

[python]
'''
Fill out a contact form!
'''

import mechanize

# Simulate a browser
br = mechanize.Browser()

# The URL where the contact form is located
br.open(&quot;http://www.yourdomain.com/contact&quot;)

# Choose which form on the page we're going to use, beginning
# from the 0th index. If only one form on the page, it's 0.
br.select_form(nr=0)

# Begin filling br with the name =&gt; value pairs of your form.
br[&quot;name&quot;] = &quot;Joseph McCullough&quot;
br[&quot;phone&quot;] = &quot;903 555 5555&quot;
br[&quot;email&quot;] = &quot;Joseph@vertstudios.com&quot;
br[&quot;message&quot;] = &quot;Daily test of contact form&quot;

# Submit and we're done!
response = br.submit()
[/python] 

Test by executing 
<pre class="prettyprint">python contact_form.py</pre>
You should get an email in your inbox just as if a user had filled out the form.

Due to how Cron works, we <a href="http://stackoverflow.com/questions/4150671/python-how-to-set-virtualenv-for-a-crontab">won't be able to directly call the python file</a>, or else the virtual environment won't get activated and our mechanize library won't be available to use. The solution is to create a bash script that activates the virtual environment, executes the python script, and deactivates the environment. 

Create and open <b>send_mail</b> in your favorite text editor.
<pre class="prettyprint">
#!/bin/bash
cd ~/scripts/daily_mail 
. env/bin/activate
python contact_form.py
deactivate
</pre>

To test this script, first deactivate your virtual environment. Next, make sure the file is executable.
<pre class="prettyprint">
chmod +x send_mail
</pre>

Now execute
<pre class="prettyprint">
./send_mail
</pre>

If everything goes according to plan, the python script will execute and you'll get another email in your inbox. 

<h2>The Cron Job</h2>
So our python script and bash helper script work -- great! Now we need to automate the execution of this script so it gets executed at a specified interval. This is where cron comes into play. 

First, open up the crontab file.
<pre class="prettyprint">
crontab -e
</pre>

Next, append the following line at the end of the file
<pre class="prettyprint">
0 9 * * * ~/scripts/daily_mail/send_mail
</pre>

This schedules the send_mail bash script(which executes the python script) to run at 9AM every day.

Save and exit the text editor -- you're done! You should receive an email from the form every morning at 9AM (server time). To test if the cron file is working, you can change the line we appended to
<pre class="prettyprint">
* * * * * ~/scripts/daily_mail/send_mail
</pre>

This executes the script <em>every minute</em>. Just sit by your inbox for a few minutes and see if the email comes. Be sure to change it back ASAP, or your mailbox will get flooded! Also, remember that the crontabs changes do not take effect until you exit your text editor.

If you want to use another time interval, I suggest using the <a href="http://www.openjs.com/scripts/jslibrary/demos/crontab.php">Crontab Code Generator</a>. To learn more about Cron, visit the <a href="http://adminschoice.com/crontab-quick-reference">Crontab quick reference</a>. 

<h2>Feedback</h2>
Have any questions? Get stuck somewhere in the tutorial? Let us know and we'll help you out! ]]></content>
    <excerpt><![CDATA[For most websites, the contact form is the primary means of lead generation. A contact form that fails to email you those leads can potentially devastate your business - no exaggeration. How can you tell whether business is slow or your contact form just isn't working? The answer is to simply test the form by filling it out yourself and seeing if you receive the email. This article aims to automate that process. ]]></excerpt>
  </item>
  <item>
    <title>Avoiding the AJAX New Line Pitfall</title>
    <link>http://www.vertstudios.com/blog/avoiding-ajax-newline-pitfall/</link>
    <pubdate>Wed, 31 Aug 2011 20:11:40 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3695</guid>
    <description></description>
    <content><![CDATA[Here, my friends, is a JavaScript pitfall that has plagued entire workdays. It's small and simple, but menacing ... you'd do well to heed this warning! 

<h2>Beware of Trailing New Lines!</h2>
If you're retrieving information via AJAX, you have two easy options for retaining your sanity:
<ul>
<li>Make sure the document sending a response to your AJAX request has no trailing Newline. This includes all the files that may be <i>included</i> or <i>required</i> in a php file.</li>
<li>Sanitize the server response with a <a href="http://stackoverflow.com/questions/3000649/trim-spaces-from-start-and-end-of-string">whitespace trim function</a></li>
</ul>

Why is that? Let's take a look at an example.

<h2>Example of the Pitfall</h2>
Let's execute a simple jQuery.post request to see how this can happen. 

<pre class="prettyprint">
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;jQuery AJAX Pitfall&lt;/title&gt;
  &lt;/head&gt;
  &lt;script type=&quot;text/javascript&quot; src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js&quot;&gt;&lt;/script&gt;

  &lt;script type=&quot;text/javascript&quot;&gt;
$.post(&quot;ajax.php&quot;, function(data) {
      alert(data == &quot;foo&quot;)
   });
  &lt;/script&gt;
&lt;body&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>

Now we have a file ajax.php
<pre class="prettyprint">
&lt;?php 
require(&quot;whitespacetrap.php&quot;);
echo &quot;foo&quot;;
?&gt;
</pre>

The file <b>whitespacetrap.php</b> is simply a file with a newline. (Just open up notepad and press enter once and save).

You'll see "false" as the alert when you load up the html file. Now comment out the require file in ajax.php, and reload the html file. It's now true! That new line is concatenated with the echo and returned. This will completely screw up any string comparisons with the response message. 

<h2>Moral of the Story</h2>
Use console.log or alert to echo print the value the server sends. If your string comparisons fail when you <em>KNOW</em> they shouldn't, make sure there are no stray newlines in the files associated with an AJAX request. ]]></content>
    <excerpt><![CDATA[Here, my friends, is a JavaScript pitfall that has plagued entire workdays. It's small and simple, but menacing ... you'd do well to heed this warning! ]]></excerpt>
  </item>
  <item>
    <title>Snippet: What Linux Distro is Running? </title>
    <link>http://www.vertstudios.com/blog/what-linux-distro-running/</link>
    <pubdate>Sun, 04 Sep 2011 18:26:46 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3712</guid>
    <description></description>
    <content><![CDATA[Quick snippet here for you guys!  You're a dev SSHing into various VPS's and you need to know what linux distro you're running. Simply execute

<pre class="prettyprint">
cat /etc/*release
</pre>

For example, on Media Temple (dv), the following comes up
<pre class="prettyprint">
CentOS release 5.5 (Final)
</pre> ]]></content>
    <excerpt><![CDATA[Quick snippet here for you guys!  You're a dev SSHing into various VPS's and you need to know what linux distro you're running. ]]></excerpt>
  </item>
  <item>
    <title>Rails Singular/Plural Reference Chart</title>
    <link>http://www.vertstudios.com/blog/rails-singularplural-reference-chart/</link>
    <pubdate>Thu, 08 Sep 2011 17:03:13 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3718</guid>
    <description></description>
    <content><![CDATA[I've begun my descent into pure Rails. The whole naming convention idiom is hard to remember while I'm just learning, so here's a reference chart for myself and for any other Rails noobs. 

<pre class="prettyprint">
# Routes
resources: users

# Controllers
users_controller.rb
class UsersController &lt; ApplicationController
@users = User.all

# Models
user.rb (model)
class User &lt; ActiveRecord::Base
</pre> ]]></content>
    <excerpt><![CDATA[I've begun my descent into pure Rails. The whole naming convention idiom is hard to remember while I'm just learning, so here's a reference chart for myself and for any other Rails noobs. ]]></excerpt>
  </item>
  <item>
    <title>Installing RSpec, Autotest, and Spork on Ubuntu/OS X</title>
    <link>http://www.vertstudios.com/blog/installing-rspec-autotest-spork-ubuntu-osx/</link>
    <pubdate>Tue, 13 Sep 2011 19:30:50 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3726</guid>
    <description></description>
    <content><![CDATA[I'm an Ubuntu lover in the process of learning Ruby on Rails. I've spent a good majority of my time "learning" rails trying to get Rspec, Spork, and Autotest to play nicely. Unfortunately, <a href="http://www.twitter.com/vertjustin">our designer</a> is an Apple fanboy, so my testing suite needs to perform on OS X as well. It's extremely frustrating to spend so many hours trying to get these gems to work, just so you can continue on with the tutorial! Thus, to save you all the heartache I endured, here is a definitive guide to integrating Spork and Autotest with Rspec for Ubuntu AND Mac OS X!

<h2>Time Required</h2>
15 - 30 minutes

<h2>The Main Problem: Gemfile Hacks</h2>
The main issue with most of the tutorials I've followed is that they require you to list gems such as autotest in Gemfiles, and this can cause a huge array of conflicts between the different operating systems. So our philosophy throughout this tutorial is knowing when a gem should be executed via its binary (autotest) or via bundle exec (bundle exec autotest). Most of the time executing via binary or through bundle exec doesn't make any difference. However, in this context, autotest and spork react much differently based upon which way you call them. Thus, in order to keep our project portable, we aim to eliminate any OS-specific hacks in the Gemfile. 

<h2>Get the Project Template</h2>
First, we'll pull a rails project template file that has rspec preconfigured.
<pre class="prettyprint">$ git clone git://github.com/joequery/Rails-Template.git</pre>
Now rename the app to whatever you want
<pre class="prettyprint">$ rails g rename_to YourApp</pre>

Now execute the following
<pre class="prettyprint">
$ bundle install
$ gem install ZenTest
$ gem install autotest-rails
</pre>
(You may need to use sudo for your gem install, depends on your setup)


Now we move on to OS-Specific implementations.

<h2 id="ubuntu">Ubuntu Configuration</h2>
(<a href="#osx">Skip to OS X</a>)
Credit most of the Ubuntu instructions to <a href="http://ykyuen.wordpress.com/2010/11/15/rails-integrate-autotest-and-rspec-in-linux/">Ykyuen</a>

First, execute
<pre class="prettyprint">
$ sudo apt-get install libnotify-bin
</pre>

Now create an autotest configuration file in the home directory (~/.autotest) and paste in the following:
[ruby]
#!/bin/ruby

#require 'redgreen'
require 'autotest/timestamp'

module Autotest::GnomeNotify
def self.notify title, msg, img
system &quot;notify-send '#{title}' '#{msg}' -i #{img} -t 1500&quot;
end

Autotest.add_hook :ran_command do |at|
  image_root = &quot;~/.autotest_images&quot;
  results = [at.results].flatten.join(&quot;\n&quot;)
  results.gsub!(/\\e\[\d+m/,'')
  output = results.slice(/(\d+)\sexamples?,\s(\d+)\sfailures?(,\s(\d+)\spending?|)/)
  full_sentence, green, failures, garbage, pending = $~.to_a.map(&amp;:to_i)
  if output
    if failures &gt; 0
    notify &quot;FAIL&quot;, &quot;#{output}&quot;, &quot;#{image_root}/fail.png&quot;

    elsif pending &gt; 0
    notify &quot;Pending&quot;, &quot;#{output}&quot;, &quot;#{image_root}/pending.png&quot;

    else
    notify &quot;Pass&quot;, &quot;#{output}&quot;, &quot;#{image_root}/pass.png&quot;

    end
  end
end

end
[/ruby]

Now create an ~/.autotest_images folder and extract <a href="http://www.vertstudios.com/blog/images/rspec/images.tar.gz">these images</a> to it.

Everything is now configured. Jump to <a href="#testing">Testing Your Setup</a>

<h2 id="osx">Mac OS X</h2>

First, execute 
<pre class="prettyprint">
$ gem install autotest-growl
</pre>

(You may need to use sudo, based upon your setup).

Edit the ~/.autotest file (create it if it does not exist), and paste the following in
<pre class="prettyprint">
require &quot;autotest/growl&quot;
</pre>

Everything is now configured. Jump to <a href="#testing">Testing Your Setup</a>

<h2 id="testing">Testing Your Setup</h2>
The Ubuntu Nerds and the Apple Fanboys reunite! It's time to test our installations.

First, lets generate a controller to test.
<pre class="prettyprint">
$ rails generate controller Pages home contact
</pre>

You'll see a bunch of files created. Let's get rid of some of the unnecessary files rspec made
<pre class="prettyprint">
$ rm -rf spec/helpers
$ rm -rf spec/views
</pre>

Now let's run our test without autotest. We should have 2 success and 0 failures at this point.
<pre class="prettyprint">
$ bundle exec rspec spec/
</pre>

Now open two terminal windows or tabs and cd back to your project directory in both of them.
In one tab, execute 
<pre class="prettyprint">$ bundle exec spork</pre>
You may see a bunch of warning messages. It's safe to ignore these for the time being. If everything went well, you should see
<pre class="prettyprint">
Preloading Rails environment
Loading Spork.prefork block...
Spork is ready and listening on 8989!
</pre>

In the other tab you opened, simply execute
<pre class="prettyprint">$ autotest -c</pre>


Once again, you may see a bunch of warning messages in the terminal, and these are also safe to ignore for now. More importantly, you should see a pop up notification that shows that the tests passed. You'll also see
<pre class="prettyprint">
Finished in 0.xxxx seconds
2 examples, 0 failures
</pre>
in the window/tab where you executed autotest.

Now, to see if the autotest is working properly, lets open spec/controllers/pages_controller_spec.rb. The file contains the following:

[ruby]
require 'spec_helper'

describe PagesController do

  describe &quot;GET 'home'&quot; do
    it &quot;should be successful&quot; do
      get 'home'
      response.should be_success
    end
  end

  describe &quot;GET 'contact'&quot; do
    it &quot;should be successful&quot; do
      get 'contact'
      response.should be_success
    end
  end

end
[/ruby]

Lets make the test fail by changing all occurances of "contact" in the second describe block to "about".

[ruby]
require 'spec_helper'

describe PagesController do

  describe &quot;GET 'home'&quot; do
    it &quot;should be successful&quot; do
      get 'home'
      response.should be_success
    end
  end

  describe &quot;GET 'about'&quot; do
    it &quot;should be successful&quot; do
      get 'about'
      response.should be_success
    end
  end

end
[/ruby]

We should get a pop up saying that the test failed, and you can find the details in the tab with autotest running.
<pre class="prettyprint">
Finished in 0.07293 seconds
2 examples, 1 failure

Failed examples:

rspec ./spec/controllers/pages_controller_spec.rb:13 # PagesController GET 'about' should be successful

# Waiting since 2011-09-13 14:19:31

</pre>

If this shows up along with the pop up, congratulations, you've successufully integrated Spork and Autotest into RSpec!

<strong>Note:</strong> Sometimes spork can get kind of screwy. If you're ever in a situation where you KNOW a test should pass or should fail, you should restart spork and see if that helps.

<h2>Do I have to do this EVERY TIME?!?!</h2>
Nope! For subsequent projects, your procedure should be as follows:
<pre class="prettyprint">
$ git clone git@github.com:joequery/Rails-Template.git
$ cd Rails-Template
$ rails g rename_to MyApp
$ bundle install
</pre>

In a separate window/tab
<pre class="prettyprint">
$ bundle exec spork
</pre>

In another separate window/tab
<pre class="prettyprint">
$ autotest
</pre>

And that's it!

<h2>Feedback</h2>
Did the tutorial help? Did you find parts of the tutorial unclear? Let us know in the comments below!]]></content>
    <excerpt><![CDATA[I'm an Ubuntu lover in the process of learning Ruby on Rails. I've spent a good majority of my time "learning" rails trying to get Rspec, Spork, and Autotest to play nicely. Unfortunately, <a href="http://www.twitter.com/vertjustin">our designer</a> is an Apple fanboy, so my testing suite needs to perform on OS X as well. It's extremely frustrating to spend so many hours trying to get these gems to work, just so you can continue on with the tutorial! Thus, to save you all the heartache I endured, here is a definitive guide to integrating Spork and Autotest with Rspec for Ubuntu AND Mac OS X!]]></excerpt>
  </item>
  <item>
    <title>Start VIM in File Navigation Mode</title>
    <link>http://www.vertstudios.com/blog/start-vim-file-navigation-mode/</link>
    <pubdate>Thu, 15 Sep 2011 20:31:48 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3734</guid>
    <description></description>
    <content><![CDATA[I often find myself doing the following:
<pre class="prettyprint">
vim .
</pre>
to open up VIM and then explore my files. Because I'm lazy, here's a way to open up VIM in file navigation mode if no files are specified when running VIM.

Append the following to your .bashrc
[bash]
function vim(){
    vimpath=`which vim` 
    if [ &quot;$#&quot; -gt 0 ] 
    then
        $vimpath $@
    else
        $vimpath .
    fi  
}
[/bash] ]]></content>
    <excerpt><![CDATA[A quick way to open VIM in file navigation mode when no files are passed to VIM. ]]></excerpt>
  </item>
  <item>
    <title>List of Rails Session Variables</title>
    <link>http://www.vertstudios.com/blog/list-rails-session-variables/</link>
    <pubdate>Fri, 16 Sep 2011 19:04:35 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3737</guid>
    <description></description>
    <content><![CDATA[As a rails novice, one of the more frustrating things I've encountered with rails is the inability to search for specific method names in its API. This is because a lot of these methods are dynamically generated helpers that you should know by heart once you've mastered the "Rails Way." Unfortunately for me, I'm not at the point of calling myself a Rails guru, so I still need to know what all I have available to me. In my opinion, nothing is more frustrating than not knowing what methods you have at your disposal. 

After doing quite a bit of googling, I was able to find a list of session variables by executing the following in Rails Console:
<pre class="prettyprint">
irb(main):001:0&gt; y app.methods.sort
</pre>

<h2>Rails Session Variables List</h2>
Here is my list of Rails Session Variables. These will vary across different apps based upon what gems you have installed. For example, you'll see methods with "refinery" in the list below, which refers to the <a href="http://refinerycms.com/">RefineryCMS</a> we've adopted here at Vert. I highly recommend you execute the command above for your own app.

<pre class="prettyprint">
---
- :!
- :!=
- :!~
- :&lt;=&gt;
- :==
- :===
- :=~
- :__id__
- :__send__
- :_assertions
- :_assertions=
- :_routes
- :`
- :accept
- :accept=
- :acts_like?
- :admin_dashboard_path
- :admin_dashboard_url
- :admin_dialog_path
- :admin_dialog_url
- :admin_disable_upgrade_message_path
- :admin_disable_upgrade_message_url
- :admin_image_path
- :admin_image_url
- :admin_images_path
- :admin_images_url
- :admin_memberships_path
- :admin_memberships_url
- :admin_page_part_path
- :admin_page_part_url
- :admin_page_parts_path
- :admin_page_parts_url
- :admin_page_path
- :admin_page_url
- :admin_pages_path
- :admin_pages_url
- :admin_refinery_setting_path
- :admin_refinery_setting_url
- :admin_refinery_settings_path
- :admin_refinery_settings_url
- :admin_resource_path
- :admin_resource_url
- :admin_resources_path
- :admin_resources_url
- :admin_root_path
- :admin_root_url
- :admin_user_path
- :admin_user_role_path
- :admin_user_role_url
- :admin_user_url
- :admin_users_path
- :admin_users_url
- :as_json
- :assert
- :assert_block
- :assert_dom_equal
- :assert_dom_not_equal
- :assert_empty
- :assert_equal
- :assert_generates
- :assert_in_delta
- :assert_in_epsilon
- :assert_includes
- :assert_instance_of
- :assert_kind_of
- :assert_match
- :assert_nil
- :assert_no_match
- :assert_no_tag
- :assert_not_empty
- :assert_not_equal
- :assert_not_in_delta
- :assert_not_in_epsilon
- :assert_not_includes
- :assert_not_instance_of
- :assert_not_kind_of
- :assert_not_match
- :assert_not_nil
- :assert_not_operator
- :assert_not_respond_to
- :assert_not_same
- :assert_nothing_raised
- :assert_nothing_thrown
- :assert_operator
- :assert_raise
- :assert_raises
- :assert_recognizes
- :assert_redirected_to
- :assert_respond_to
- :assert_response
- :assert_routing
- :assert_same
- :assert_select
- :assert_select_email
- :assert_select_encoded
- :assert_select_rjs
- :assert_send
- :assert_tag
- :assert_throws
- :assigns
- :blank?
- :body
- :breakpoint
- :build_message
- :cancel_user_registration_path
- :cancel_user_registration_url
- :capture_io
- :class
- :class_eval
- :clone
- :controller
- :cookies
- :copy_instance_variables_from
- :count_description
- :create_multiple_admin_page_roles_path
- :create_multiple_admin_page_roles_url
- :create_multiple_admin_user_roles_path
- :create_multiple_admin_user_roles_url
- :css_select
- :debugger
- :default_url_options
- :default_url_options=
- :default_url_options?
- :define_singleton_method
- :delete
- :delete_via_redirect
- :destroy_multiple_admin_page_roles_path
- :destroy_multiple_admin_page_roles_url
- :destroy_multiple_admin_user_roles_path
- :destroy_multiple_admin_user_roles_url
- :destroy_user_session_path
- :destroy_user_session_url
- :display
- :dup
- :duplicable?
- :edit_admin_image_path
- :edit_admin_image_url
- :edit_admin_page_path
- :edit_admin_page_url
- :edit_admin_refinery_setting_path
- :edit_admin_refinery_setting_url
- :edit_admin_resource_path
- :edit_admin_resource_url
- :edit_admin_user_path
- :edit_admin_user_url
- :edit_member_path
- :edit_member_url
- :edit_polymorphic_path
- :edit_polymorphic_url
- :edit_user_password_path
- :edit_user_password_url
- :edit_user_registration_path
- :edit_user_registration_url
- :enable_warnings
- :enum_for
- :eql?
- :equal?
- :exception_details
- :extend
- :find_all_tag
- :find_tag
- :fixture_file_upload
- :flash
- :flunk
- :follow_redirect!
- :freeze
- :friendly_id?
- :frozen?
- :gem
- :get
- :get_via_redirect
- :hash
- :hash_for_admin_dashboard_path
- :hash_for_admin_dashboard_url
- :hash_for_admin_dialog_path
- :hash_for_admin_dialog_url
- :hash_for_admin_disable_upgrade_message_path
- :hash_for_admin_disable_upgrade_message_url
- :hash_for_admin_image_path
- :hash_for_admin_image_url
- :hash_for_admin_images_path
- :hash_for_admin_images_url
- :hash_for_admin_memberships_path
- :hash_for_admin_memberships_url
- :hash_for_admin_page_part_path
- :hash_for_admin_page_part_url
- :hash_for_admin_page_parts_path
- :hash_for_admin_page_parts_url
- :hash_for_admin_page_path
- :hash_for_admin_page_url
- :hash_for_admin_pages_path
- :hash_for_admin_pages_url
- :hash_for_admin_refinery_setting_path
- :hash_for_admin_refinery_setting_url
- :hash_for_admin_refinery_settings_path
- :hash_for_admin_refinery_settings_url
- :hash_for_admin_resource_path
- :hash_for_admin_resource_url
- :hash_for_admin_resources_path
- :hash_for_admin_resources_url
- :hash_for_admin_root_path
- :hash_for_admin_root_url
- :hash_for_admin_user_path
- :hash_for_admin_user_role_path
- :hash_for_admin_user_role_url
- :hash_for_admin_user_url
- :hash_for_admin_users_path
- :hash_for_admin_users_url
- :hash_for_cancel_user_registration_path
- :hash_for_cancel_user_registration_url
- :hash_for_create_multiple_admin_page_roles_path
- :hash_for_create_multiple_admin_page_roles_url
- :hash_for_create_multiple_admin_user_roles_path
- :hash_for_create_multiple_admin_user_roles_url
- :hash_for_destroy_multiple_admin_page_roles_path
- :hash_for_destroy_multiple_admin_page_roles_url
- :hash_for_destroy_multiple_admin_user_roles_path
- :hash_for_destroy_multiple_admin_user_roles_url
- :hash_for_destroy_user_session_path
- :hash_for_destroy_user_session_url
- :hash_for_edit_admin_image_path
- :hash_for_edit_admin_image_url
- :hash_for_edit_admin_page_path
- :hash_for_edit_admin_page_url
- :hash_for_edit_admin_refinery_setting_path
- :hash_for_edit_admin_refinery_setting_url
- :hash_for_edit_admin_resource_path
- :hash_for_edit_admin_resource_url
- :hash_for_edit_admin_user_path
- :hash_for_edit_admin_user_url
- :hash_for_edit_member_path
- :hash_for_edit_member_url
- :hash_for_edit_user_password_path
- :hash_for_edit_user_password_url
- :hash_for_edit_user_registration_path
- :hash_for_edit_user_registration_url
- :hash_for_insert_admin_images_path
- :hash_for_insert_admin_images_url
- :hash_for_insert_admin_resources_path
- :hash_for_insert_admin_resources_url
- :hash_for_link_to_admin_pages_dialogs_path
- :hash_for_link_to_admin_pages_dialogs_url
- :hash_for_member_path
- :hash_for_member_url
- :hash_for_members_path
- :hash_for_members_url
- :hash_for_new_admin_image_path
- :hash_for_new_admin_image_url
- :hash_for_new_admin_page_part_path
- :hash_for_new_admin_page_part_url
- :hash_for_new_admin_page_path
- :hash_for_new_admin_page_url
- :hash_for_new_admin_refinery_setting_path
- :hash_for_new_admin_refinery_setting_url
- :hash_for_new_admin_resource_path
- :hash_for_new_admin_resource_url
- :hash_for_new_admin_user_path
- :hash_for_new_admin_user_url
- :hash_for_new_member_path
- :hash_for_new_member_url
- :hash_for_new_user_password_path
- :hash_for_new_user_password_url
- :hash_for_new_user_registration_path
- :hash_for_new_user_registration_url
- :hash_for_new_user_session_path
- :hash_for_new_user_session_url
- :hash_for_page_path
- :hash_for_page_url
- :hash_for_rails_info_properties_path
- :hash_for_rails_info_properties_url
- :hash_for_refinery_root_path
- :hash_for_refinery_root_url
- :hash_for_refinery_update_menu_positions_path
- :hash_for_refinery_update_menu_positions_url
- :hash_for_root_path
- :hash_for_root_url
- :hash_for_test_email_admin_pages_dialogs_path
- :hash_for_test_email_admin_pages_dialogs_url
- :hash_for_test_url_admin_pages_dialogs_path
- :hash_for_test_url_admin_pages_dialogs_url
- :hash_for_update_positions_admin_pages_path
- :hash_for_update_positions_admin_pages_url
- :hash_for_user_password_path
- :hash_for_user_password_url
- :hash_for_user_registration_path
- :hash_for_user_registration_url
- :hash_for_user_root_path
- :hash_for_user_root_url
- :hash_for_user_session_path
- :hash_for_user_session_url
- :hash_for_wymiframe_path
- :hash_for_wymiframe_url
- :head
- :headers
- :host
- :host!
- :host=
- :html_document
- :html_safe?
- :https!
- :https?
- :initialize_clone
- :initialize_dup
- :insert_admin_images_path
- :insert_admin_images_url
- :insert_admin_resources_path
- :insert_admin_resources_url
- :inspect
- :instance_eval
- :instance_exec
- :instance_of?
- :instance_values
- :instance_variable_defined?
- :instance_variable_get
- :instance_variable_names
- :instance_variable_set
- :instance_variables
- :is_a?
- :kind_of?
- :link_to_admin_pages_dialogs_path
- :link_to_admin_pages_dialogs_url
- :load
- :load_dependency
- :member_path
- :member_url
- :members_path
- :members_url
- :message
- :method
- :method_missing
- :methods
- :mu_pp
- :new_admin_image_path
- :new_admin_image_url
- :new_admin_page_part_path
- :new_admin_page_part_url
- :new_admin_page_path
- :new_admin_page_url
- :new_admin_refinery_setting_path
- :new_admin_refinery_setting_url
- :new_admin_resource_path
- :new_admin_resource_url
- :new_admin_user_path
- :new_admin_user_url
- :new_member_path
- :new_member_url
- :new_polymorphic_path
- :new_polymorphic_url
- :new_user_password_path
- :new_user_password_url
- :new_user_registration_path
- :new_user_registration_url
- :new_user_session_path
- :new_user_session_url
- :nil?
- :object_id
- :page_path
- :page_url
- :pass
- :path
- :polymorphic_path
- :polymorphic_url
- :post
- :post_via_redirect
- :presence
- :present?
- :pretty_inspect
- :pretty_print
- :pretty_print_cycle
- :pretty_print_inspect
- :pretty_print_instance_variables
- :private_methods
- :protected_methods
- :psych_to_yaml
- :psych_y
- :public_method
- :public_methods
- :public_send
- :put
- :put_via_redirect
- :rails_info_properties_path
- :rails_info_properties_url
- :redirect?
- :redirect_to_url
- :refinery_root_path
- :refinery_root_url
- :refinery_update_menu_positions_path
- :refinery_update_menu_positions_url
- :refute
- :refute_empty
- :refute_equal
- :refute_in_delta
- :refute_in_epsilon
- :refute_includes
- :refute_instance_of
- :refute_kind_of
- :refute_match
- :refute_nil
- :refute_operator
- :refute_respond_to
- :refute_same
- :remote_addr
- :remote_addr=
- :request
- :request_count
- :request_count=
- :request_via_redirect
- :require
- :require_association
- :require_dependency
- :require_library_or_gem
- :require_or_load
- :reset!
- :respond_to?
- :respond_to_missing?
- :response
- :response_from_page_or_rjs
- :returning
- :root_path
- :root_url
- :send
- :session
- :silence_stderr
- :silence_stream
- :silence_warnings
- :singleton_class
- :singleton_methods
- :skip
- :status
- :status_message
- :suppress
- :suppress_warnings
- :taint
- :tainted?
- :tap
- :test_email_admin_pages_dialogs_path
- :test_email_admin_pages_dialogs_url
- :test_url_admin_pages_dialogs_path
- :test_url_admin_pages_dialogs_url
- :to_dragonfly_unique_s
- :to_enum
- :to_json
- :to_param
- :to_query
- :to_s
- :to_yaml
- :to_yaml_properties
- :trust
- :try
- :unescape_rjs
- :unfriendly_id?
- :unloadable
- :untaint
- :untrust
- :untrusted?
- :update_positions_admin_pages_path
- :update_positions_admin_pages_url
- :url_for
- :url_options
- :user_password_path
- :user_password_url
- :user_registration_path
- :user_registration_url
- :user_root_path
- :user_root_url
- :user_session_path
- :user_session_url
- :with_options
- :with_routing
- :with_warnings
- :wymiframe_path
- :wymiframe_url
- :xhr
- :xml_http_request
- :y
</pre> ]]></content>
    <excerpt><![CDATA[As a rails novice, one of the more frustrating things I've encountered with rails is the inability to search for specific method names in its API. This is because a lot of these methods are dynamically generated helpers that you should know by heart once you've mastered the "Rails Way." Unfortunately for me, I'm not at the point of calling myself a Rails guru, so I still need to know what all I have available to me. In my opinion, nothing is more frustrating than not knowing what methods you have at your disposal. ]]></excerpt>
  </item>
  <item>
    <title>PyQuery Tutorial: Basic HTML Parsing with PyQuery</title>
    <link>http://www.vertstudios.com/blog/pyquery-tutorial-basic-html-parsing-pyquery/</link>
    <pubdate>Tue, 20 Sep 2011 03:29:09 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3743</guid>
    <description></description>
    <content><![CDATA[As Python is my programming language of choice when it comes to getting things done quickly, I need a dead simple XML parser that gets me the data I want and gets the hell out of the way. 

<h2>Enter PyQuery</h2>
<a href="http://pypi.python.org/pypi/pyquery">PyQuery</a>, as you may have guessed, is a Python port of the extremely popular <a href="http://jquery.com">jQuery</a> JavaScript library. Anyone even remotely experienced with jQuery know how easy it is to select any element you wish from the DOM. Once you move away from JavaScript, many XML parsers become extremely verbose. PyQuery helps us keeps things simple and extract the data we want without wasting any time. 

<h2>Using PyQuery for Basic Parsing</h2>
PyQuery includes many of the jQuery DOM <a href="http://packages.python.org/pyquery/manipulating.html">manipulation methods</a>. For this tutorial, we'll just deal with retrieving data from HTML. Once you can read the HTML to a string via PyQuery, you can instantly apply your knowledge of jQuery and append(), remove(), or whatever you need. 

<h2>The Setup</h2>
<strong>This guide uses Python 2.6.</strong> If you don't have <a href="http://pypi.python.org/pypi/virtualenv">virtualenv</a>, grab it now. We'll use it in a minute to install the PyQuery package. 
Now create a project directory for this tutorial. I'll call it pyquery_tutorial

<pre class="prettyprint">
$ mkdir pyquery_tutorial
$ cd pyquery_tutorial
</pre>

Now create the virtual environment with your Python executable version of choice (I have only tested this for 2.6 and 2.7)

<pre class="prettyprint">
$ virtualenv env --python=python2.6
Running virtualenv with interpreter /usr/bin/python2.6
New python executable in env/bin/python2.6
Also creating executable in env/bin/python
Installing distribute.................................................................................................................................................................................done.
</pre>

Now activate the virtualenv. (You should see (env) beside your prompt if done correctly)
<pre class="prettyprint">$ . env/bin/activate</pre>

Now we install the PyQuery package.
<pre class="prettyprint">(env) $ pip install pyquery
...
Successfully installed lxml pyquery
Cleaning up...
</pre>

Woohoo, PyQuery is now ready for use!

<h2>Using PyQuery</h2>
Using PyQuery for parsing will feel extremely similar to using jQuery. One of the only differences is initializing the jQuery object. 

First, create this html file called "index.html" in the project directory. 

<i>index.html</i>
<pre class="prettyprint">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;PyQuery Test!&lt;/title&gt;
  &lt;/head&gt;

&lt;body&gt;
  &lt;h1&gt;PyQuery is AWESOME!&lt;/h1&gt;
  &lt;p&gt;&lt;a href=&quot;http://pypi.python.org/pypi/pyquery&quot;&gt;PyQuery&lt;/a&gt; is a Python port of the famous &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt; JavaScript library.
  &lt;h2&gt;What is it Good For?&lt;/h2&gt;
  &lt;ul id=&quot;pitch&quot;&gt;
    &lt;li&gt;It makes parsing files a &lt;strong&gt;SNAP&lt;/strong&gt;!&lt;/li&gt;
    &lt;li&gt;DOM Manipulation is EASY!&lt;/li&gt;
    &lt;li&gt;You &lt;em&gt;never&lt;/em&gt; have to worry about confusing syntax&lt;/li&gt;
  &lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>

Now fire up Python. (Make sure your virtualenv is still activated!)
<pre class="prettyprint">$ python
Python 2.6.6 (r266:84292, Mar 25 2011, 19:36:32) 
[GCC 4.5.2] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&gt;&gt;&gt; 
</pre>

First we import PyQuery from the pyquery package. 
<pre class="prettyprint">
&gt;&gt;&gt; from pyquery import PyQuery
</pre>

Now let's read in our <i>index.html</i> file and store it to a string.
<pre class="prettyprint">
&gt;&gt;&gt; html = open(&quot;index.html&quot;, 'r').read()
</pre>

Now we instantiate a PyQuery object, passing in our html string. To keep things looking familiar, let the instantiating object be named jQuery!

<pre class="prettyprint">
&gt;&gt;&gt; jQuery = PyQuery(html)
</pre>

Now we can traverse this document using the selectors we've grown to love through CSS and jQuery. It might look strange that we're assigning jQuery to something, but at this point, we use this jQuery variable JUST like we use $ in our JavaScript. For example, let's get the title tag.

<pre class="prettyprint">
&gt;&gt;&gt; jQuery(&quot;title&quot;).text()
'PyQuery Test!'
</pre>

jQuery developers that have created their own plugin may already be comfortable using jQuery in place of $ in their JS. Let's mess around with PyQuery some more.

<pre class="prettyprint">
&gt;&gt;&gt; jQuery(&quot;li&quot;).eq(1).text()
'DOM Manipulation is EASY!'
&gt;&gt;&gt; jQuery(&quot;a&quot;) # The 'jQuery Object' we're used to is now a list
[&lt;a&gt;, &lt;a&gt;]
&gt;&gt;&gt; for x in jQuery(&quot;a&quot;): # We can do for-loops as normal in Python
... print jQuery(x).text()
...
PyQuery
jQuery
</pre>

Get the HTML of the first li element.
<pre class="prettyprint">
&gt;&gt;&gt; jQuery(&quot;ul&quot;).children().eq(0).html()
u'It makes parsing files a &lt;strong&gt;SNAP&lt;/strong&gt;!'
</pre>

<h3>Remote Files</h3>
Wanna parse a remote file? No problem!
<pre class="prettyprint">
&gt;&gt;&gt; jQuery = PyQuery(url=&quot;http://www.vertstudios.com/&quot;)
&gt;&gt;&gt; jQuery(&quot;title&quot;).text()
&quot;Web Design that Doesn't Suck | Vert Studios | Tyler, Texas&quot;
</pre>

<h2>Conclusion</h2>
Now that we've given you a nice kickstart of PyQuery, your knowledge of jQuery coupled with the <a href="http://packages.python.org/pyquery/api.html">PyQuery API</a> provides sufficient power to parse XML/HTML documents.]]></content>
    <excerpt><![CDATA[As Python is my programming language of choice when it comes to getting things done quickly, I need a dead simple XML parser that gets me the data I want and gets the hell out of the way. ]]></excerpt>
  </item>
  <item>
    <title>[SOLVED] warning: Insecure world writable dir</title>
    <link>http://www.vertstudios.com/blog/ruby-warning-insecure-world-writable-dir/</link>
    <pubdate>Wed, 21 Sep 2011 20:53:21 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3756</guid>
    <description></description>
    <content><![CDATA[I've had my face-palm moment for the day.

While searching for how to solve the annoying ruby alert of "Insecure world writable dir", the fact that I was on a FAT32 partition completely skipped my mind. The chmod/chown commands tutorials told me to execute weren't working, and my mind was blown. If you're an Ubuntu user working on a FAT32 partition, <b>you can't change file permissions</b>!

<h2>The Solution</h2>
Thanks to <a href="http://www.ruby-forum.com/topic/79565">Ruby-Forum.com</a>, I found that inserting "$VERBOSE=nil" into my bundler runtime file helped suppress this annoying message. Please be careful with this, and only do this if you work exclusively on a FAT32 partition.

Find your gem path so we can edit the bundler gem. Execute the following in your shell: (<a href="http://gilesbowkett.blogspot.com/2009/06/find-your-ruby-gems-path.html">credit</a>)
<pre class="prettyprint">$ ruby -r rubygems -e &quot;p Gem.path&quot;</pre>

Navigate to your gem path and cd into the version of bundler currently being used. Now navigate to <b>lib -&gt; bundler </b> and open <b>runtime.rb</b> in your favorite text editor. Add "$VERBOSE = nil" to line 2.

<pre class="prettyprint">
require &quot;digest/sha1&quot;
$VERBOSE = nil 

module Bundler
  class Runtime &lt; Environment
    include SharedHelpers

    def setup(*groups)
      # Has to happen first
      clean_load_path

...
[/ruby]

Now that annoying warning should leave you alone. ]]></content>
    <excerpt><![CDATA[I've had my face-palm moment for the day.

While searching for how to solve the annoying ruby alert of "Insecure world writable dir", the fact that I was on a FAT32 partition completely skipped my mind. The chmod/chown commands tutorials told me to execute weren't working, and my mind was blown. If you're an Ubuntu user working on a FAT32 partition, <b>you can't change file permissions</b>!]]></excerpt>
  </item>
  <item>
    <title>Autotest Won&#039;t Work - Just Be Ghetto!</title>
    <link>http://www.vertstudios.com/blog/autotest-work-ghetto/</link>
    <pubdate>Sun, 25 Sep 2011 14:38:54 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3769</guid>
    <description></description>
    <content><![CDATA[So I somehow managed to botch my Autotest installation I described in <a href="http://www.vertstudios.com/blog/installing-rspec-autotest-spork-ubuntu-osx/">this tutorial</a>. After spending many hours trying to get it back up and running again, I've decided it's just not worth it. Here's a ghetto bash script for semi-auto testing. You just have to press any key and it'll run the test. 

test.sh
<pre class="prettyprint">
#!/bin/bash
# Our ghetto auto-testish thing. User presses any key to test,
# Ctrl-C to get out

function hold(){
    read -n 1 -s    
}

function do_test(){
    printf &quot;\nTesting...&quot;
    bundle exec rspec spec/
    printf &quot;\nPress any key to test... \n&quot;
    hold
    do_test
}

do_test
</pre> ]]></content>
    <excerpt><![CDATA[So I somehow managed to botch my Autotest installation I described in <a href="http://www.vertstudios.com/blog/installing-rspec-autotest-spork-ubuntu-osx/">this tutorial</a>. After spending many hours trying to get it back up and running again, I've decided it's just not worth it. Here's a ghetto bash script for semi-auto testing. You just have to press any key and it'll run the test. ]]></excerpt>
  </item>
  <item>
    <title>Multiple .screenrc Configurations &#124; GNU Screen Tutorial</title>
    <link>http://www.vertstudios.com/blog/multiple-screenrc-configurations-gnu-screen-tutorial/</link>
    <pubdate>Sun, 25 Sep 2011 19:19:37 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3772</guid>
    <description></description>
    <content><![CDATA[As an extension of my <a href="http://www.vertstudios.com/blog/screenrc-simple-workflow/">example .screenrc article</a>, this article describes the why and how of multiple .screenrc configurations.

<h2>Why Do I Need Multiple .screenrc Configs?</h2>
Your workflow can vary greatly depending on the type of project. Sure, all will involve your text editor (such as VIM) as well as some type of version control, such as git. However, that leaves out quite a few requirements. A rails developer will be testing often, thus requiring tabs dedicated to spork, autotest, or other testing tools. Additionally, a screen for running the server locally will be needed. Having multiple screen configurations helps you avoid the hassle of creating new screens and naming each tab over and over again. 

<h2>How to Add Multiple .screenrc Configs</h2>
Create a directory where you plan on storing your screen configuration files. For this tutorial, I'll use <b>/usr/local/screen</b>
<pre class="prettyprint">
$ sudo mkdir /usr/local/screen
$ cd /usr/local/screen
</pre>

Now create your configuration files and name them based on your workflow, and place them in the /usr/local/screen directory. For example, "rails", "flask", or "javascript". Here's my rails screen config file.

<i>rails</i>
<pre class="prettyprint">
# Screen Configuration file for Rails!
# Skip the startup message
startup_message off 

# Display a caption string below, appearing like tabs and
# displaying the window number and application name (by default).
caption always
caption string &quot;%{kw}%-w%{wr}%n %t%{-}%+w&quot;

# j to move down a window, k to move up. Like teh VIM!
bind j focus down
bind k focus up

screen -t VIM
screen -t Test
screen -t Bash
screen -t Git
screen -t Spork
screen -t Server

# Select first screen
select 0
</pre>

Remember to make sure this file is in your /usr/local/screen directory.

Next, we have to tell screen to load these different configuration files. We'll make a simple bash function and append it to our ~/.bashrc

<pre class="prettyprint">
# Special screens
# $1 - screen config file name
function scr(){
    screen -c /usr/local/screen/$1
}
</pre>

<h2>Calling the Configurations</h2>
Now if we want to use our rails screen configuration file, we execute 
<pre class="prettyprint">$ scr rails</pre>

Note that we use "scr" instead of "screen". Executing "screen" by itself will just load the ~/.screenrc file as its configuration.

It's important to note that there isn't any configuration file inheritance going on here. The files located in /usr/local/screen need to be full fledged configuration files, as unfortunate as that is.
]]></content>
    <excerpt><![CDATA[As an extension of my <a href="http://www.vertstudios.com/blog/screenrc-simple-workflow/">example .screenrc article</a>, this article describes the why and how of multiple .screenrc configurations.]]></excerpt>
  </item>
  <item>
    <title>Nginx, PHP-FPM Installation Guide on Ubuntu 10.04</title>
    <link>http://www.vertstudios.com/blog/nginx-php-fpm-installation-guide-10-04/</link>
    <pubdate>Sun, 12 Feb 2012 22:46:47 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3814</guid>
    <description></description>
    <content><![CDATA[In my first screen cast ever, I'll guide you through setting up Nginx with php-fpm on Ubuntu 10.04. The text instructions and snippets used in the video are located below.

http://www.youtube.com/watch?v=BmF638hV-bw&amp;
<h2>Nginx/PHP package installation</h2>
<pre class="prettyprint">
cd /tmp
# Add a necessary repository.
sudo apt-get install python-software-properties
sudo add-apt-repository ppa:brianmercer/php
sudo apt-get update
# Install nginx,php5, and php5-fpm
sudo apt-get install nginx
sudo apt-get install php5-cli php5-common php5-mysql php5-suhosin php5-gd php5-dev
sudo apt-get install php5-fpm php5-cgi php-pear php5-memcache php-apc
</pre>
<h2>Testing Nginx and php-fpm installations</h2>
Verify php5-fpm can start

<pre class="prettyprint">
    $ sudo service php5-fpm start
</pre>

Create a symbolic link to the default sites-available file to test nginx.

<pre class="prettyprint">
    $ cd /etc/nginx/sites-enabled
    $ sudo ln -s ../sites-available/default default
    $ sudo service nginx start
</pre>

You should now be able to visit myvps.com (or your equivalent) and see "Welcome to Nginx!" If the installation
was successful, remove the symbolic link and stop our processes.

<pre class="prettyprint">
    $ sudo rm default
    $ sudo service nginx stop
    $ sudo service php5-fpm stop
</pre>
<h2>Nginx configuration</h2>
<a href="http://codex.wordpress.org/Nginx">Credit to Wordpress</a> for these configuration files.

Move to nginx directory

<pre class="prettyprint">
    $ cd /etc/nginx
</pre>

Edit the nginx.conf file. Replace the contents with what's below. Note that you must use sudo when editing all these nginx configuration files.

<pre class="prettyprint">
# Generic startup file.
user www-data;
worker_processes  2;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

# Keeps the logs free of messages about not being able to bind().
#daemon     off;

events {
  worker_connections  1024;
}

http {
# rewrite_log on;

  include mime.types;
  default_type       application/octet-stream;
  access_log         /var/log/nginx/access.log;
  sendfile           on;
# tcp_nopush         on;
  keepalive_timeout  3;
# tcp_nodelay        on;
# gzip               on;
  client_max_body_size 13m;
  index              index.php index.html index.htm;

  # Upstream to abstract backend connection(s) for PHP.
  upstream php {
#   server unix:/tmp/php-fpm.sock;
    server 127.0.0.1:9000;
  }

    include sites-enabled/*;
  # The default server.
    server {
  listen       80 default;
  server_name  everythingelse;

  # Everything is a 404
  location / {
    return 404;
  }
     }

}
</pre>

Move to the sites-available directory.

<pre class="prettyprint">
    $ cd sites-available
</pre>

Create a file named myvps.com and paste in the following:

<pre class="prettyprint">
# Redirect everything to the main site.
server {
  server_name myvps.com *.myvps.com;
  root /var/www/myvps.com;

  if ($http_host != &quot;myvps.com&quot;) {
    rewrite ^ http://myvps.com$request_uri permanent;
  }

  include global/restrictions.conf;
  include global/php5-fpm.conf;
}
</pre>

Create a global directory within the nginx directory.

<pre class="prettyprint">
    $ cd /etc/nginx
    $ sudo mkdir global
    $ cd global
</pre>

Create a file called restrictions.conf within the global directory and paste in the following:

<pre class="prettyprint">
# Global restrictions configuration file.
# Designed to be included in any server {} block.

location = /favicon.ico {
  log_not_found off;
  access_log off;
}

location = /robots.txt {
  allow all;
  log_not_found off;
  access_log off;
}

# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
location ~ /\. {
  deny all;
  access_log off;
  log_not_found off;
}
</pre>

Now create a php5-fpm.conf file within the global directory and paste in the following:

<pre class="prettyprint">
# Pass all .php files onto a php-fpm/php-fcgi server.
location ~ \.php$ {
  # Zero-day exploit defense.
  # http://forum.nginx.org/read.php?2,88845,page=3
  # Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
  # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
  try_files $uri =404;

  fastcgi_split_path_info ^(.+\.php)(/.+)$;
  #NOTE: You should have &quot;cgi.fix_pathinfo = 0;&quot; in php.ini

  include fastcgi_params;
  fastcgi_index index.php;
  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
# fastcgi_intercept_errors on;
  fastcgi_pass php;
}
</pre>
<h2>Setting up the site</h2>
Activate our server configuration via symbolic link in the sites-enabled directory

<pre class="prettyprint">
    $ cd /etc/nginx/sites-enabled
    $ sudo ln -s ../sites-available/myvps.com myvps.com
</pre>

Now navigate to our www directory, where we will store our sites.

<pre class="prettyprint">
    $ cd /var/www
</pre>

Create a web group

<pre class="prettyprint">
    $ sudo groupadd web
</pre>

Add your administrative user to the web group

<pre class="prettyprint">
    $ sudo usermod -a -G web YOURUSER
</pre>

If you're logged in as the administrative user (which you most likely are), log out and log back in. Verify
the user is a part of the web group

<pre class="prettyprint">
    $ groups
</pre>

Now make the web group the group of the directory

<pre class="prettyprint">
    $ sudo chgrp web /var/www
</pre>

Make the ```/var/www``` directory group writable.

<pre class="prettyprint">
    $ sudo chmod -R 775 /var/www
</pre>

Make all files subsequently created in the /var/www directory belong to the web group

<pre class="prettyprint">
    $ sudo chmod g+s /var/www
</pre>

Now we can create the myvps.com directory

<pre class="prettyprint">
    $ mkdir myvps.com
    $ cd myvps.com
</pre>

Create an index.php file and paste in the following

<pre class="prettyprint">
&lt;!--?php phpinfo(); ?--&gt;
</pre>

Now start nginx

<pre class="prettyprint">
    $ sudo service nginx start
</pre>

The web page won't display because we haven't started php5-fpm

<pre class="prettyprint">
    $ sudo service php5-fpm start
</pre>

Now we should be able to see our phpinfo in the browser!]]></content>
    <excerpt><![CDATA[In my first screen cast ever, I'll guide you through setting up Nginx with php-fpm on Ubuntu 10.04.]]></excerpt>
  </item>
  <item>
    <title>How to fix Guard events not firing on OS X</title>
    <link>http://www.vertstudios.com/blog/fix-guard-events-firing-os/</link>
    <pubdate>Mon, 20 Feb 2012 20:27:28 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3828</guid>
    <description></description>
    <content><![CDATA[I just lost an entire afternoon's worth of work because I just could NOT get Guard to make Spork reload when the spec_helper file was changed. I thought my Guardfile was wrong, I even spent 2+ hours digging around the Guard code itself. It turns out that the OS X notification system used by default by Guard, rb-fsevent, randomly decides to have a mental breakdown on your system. There's an entire <a href="https://github.com/thibaudgg/rb-fsevent/issues/10">Github Issue thread</a> spanning the duration of 10+ minutes describing the headaches caused by rb-fsevent not sending the events.

<h2>The Workaround</h2>
The workaround is to tell Guard to not look for rb-fsevent, but to instead <a href="http://en.wikipedia.org/wiki/Polling_(computer_science)"> use polling</a>. To do so, append the <strong>--no-vendor</strong> option when starting up your Guard server.

<pre class="prettyprint">
$ bundle exec guard --no-vendor
</pre>

Polling is a more expensive operation, but hey, at least it works.]]></content>
    <excerpt><![CDATA[How to fix Guard when events seem to not be firing when working on OS X. ]]></excerpt>
  </item>
  <item>
    <title>Stop Annoying your Git Collaborators</title>
    <link>http://www.vertstudios.com/blog/stop-annoying-your-git-collaborators/</link>
    <pubdate>Sat, 25 Feb 2012 01:32:59 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3832</guid>
    <description></description>
    <content><![CDATA[Over the past couple of years, Git has become the standard version control system among the Open Source community. As a consequence of Git hitting the mainstream, the number of Git novices is at an all time high. While there is absolutely no shame in being a novice, the following habits shared among many designers/junior developers should be kicked as soon as possible.


<h2>1) Committing everything to master</h2>
A significant portion of Git's acceptance by the Open Source is due to its quick branching. Creating, deleting, and switching between branches is a trivial task in Git, in contrast to centralized version control systems such as SVN. Fewer companies understand Git more than Github! Thus it is highly recommend you read an explanation of their <a href="http://scottchacon.com/2011/08/31/github-flow.html">Git workflow</a>.

<h2>2) Committing PSDs</h2>
PSDs and other large binary files have no place in a collaborative environment. Committing a single PSDs (or worse, a collection of PSDs!!!) can cause the repository to grow to an ungodly size.

Your options: 

<ul>
<li>Check out <a href="http://www.pixelapse.com/">Pixelapse</a>,  which is geared at solving the version control issues for designers.</li>
<li>Use version numbers on multiple PSD files when significant milestones are reached.</li>

<h2>3) Overuse of global .gitignore</h2>
Using a <a href="http://jqr.github.com/2009/02/03/global-git-ignore.html">global .gitignore</a> is a great way to save yourself time. However, if misused, your global .gitignore can easily become a headache for your collaborators. Let's say you've created a project with<a href="http://flask.pocoo.org/">Python Flask</a>, with SQLite as the database of choice. You decide "Hey, I never want to version .sqlite3 files. Let's just toss that in my global .gitignore!". At first glance, this mentality doesn't seem harmful at all. However, any collaborator that comes along without .sqlite3 listed in their global .gitignore can accidentally bring the generated database file into version control. Here's a small list of file extensions I find safe to place in your global .gitignore.

<pre class="prettyprint">
*.o
*.log
*.DS_Store
</pre> 

<h2>*Bonus* Lack of Bundler Use in Rails Projects</h2>
Plain and simple, use <a href="https://github.com/Hack56/Rails-Template/wiki/Configuring-Bundler">properly configured Bundler</a> for your Rails projects. Fewer things are more frustrating than tracking down Gems used throughout a Rails project that are not listed in the Gemfile. Just because a gem is installed on your system does not mean it's installed on mine! Remember to track both the Gemfile AND Gemfile.lock files. ]]></content>
    <excerpt><![CDATA[Over the past couple of years, Git has become the standard version control system among the Open Source community. As a consequence of Git hitting the mainstream, the number of Git novices is at an all time high. While there is absolutely no shame in being a novice, the following habits shared among many designers/junior developers should be kicked as soon as possible.
]]></excerpt>
  </item>
  <item>
    <title>Productivity Tip: Your Hosts file is Just Barely Annoying Enough</title>
    <link>http://www.vertstudios.com/blog/productivity-tip-hosts-file/</link>
    <pubdate>Wed, 29 Feb 2012 23:22:40 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3845</guid>
    <description></description>
    <content><![CDATA[There's absolutely nothing wrong with taking a mental break when working on software development. However, there's a small but significant difference between taking a break and randomly scouring the internet. 

<h2>Distraction is <= 6 keystrokes away</h2>
In the past, after I solved a hard problem, fixed something that annoyed me, or came across a bug, I would execute the following keystrokes: ⌘&lt;TAB&gt;⌘tn&lt;ENTER&gt;

If you frequent HN and your browser was your previously active window, those keystrokes will get you to HN in about 1 second. I get annoyed very easily (and I find a lot of bugs!), so a large chunk of my working time was me taking "quick mental breaks" that lead from Twitter to Facebook to Youtube and beyond. At those moments, I wanted to simply <b>not work</b> more than I actively wanted to browse the internet.

<h2>The Art of Doing Nothing</h2>
Each escape to the internet from my work was sort of an awkwardly long verbal pause: I had just finished "saying" a lot to my Terminal, so I was tired. Instead of just closing my eyes and quieting my mind, I would  visit sites that actually stimulate me, somehow convincing myself I was still working because it was a "quick mental break".

<h2>The Hosts File: Just Annoying Enough</h2>
Visiting a fun website when a software problem got difficult became so habitual to me that I'd execute :wq&lt;ENTER&gt;⌘&lt;TAB&gt;⌘tn&lt;ENTER&gt; from VIM without even realizing I was doing so. I didn't even want to see the top story that moment, I just wanted to not feel so bored/stressed/tired. To combat this, I simply place my favorite websites in my host file while I'm at work. When I visit those sites out of compulsion, I find the "Website Not Found" message and the idea of having to edit my host file JUST annoying enough to not do it. Because, again, I don't even want to see these sites. Unless you're cheating and have your hosts file already opened as root, you'll have to execute
<pre class="prettyprint">
sudo vim /etc/hosts
</pre>
which will require a password, and then you'll need to find the entries and comment them out. The whole process will only take about 10 seconds, which is no time at all when you want to actively want to view the sites, but just annoying enough when visiting mindlessly.

<h2>Work Hard, Break Hard</h2>
When you work, work hard. When you break, break hard. Programming can be hard, and working on a fun project can get boring at times. Push through, get the work done, and reward yourself with real breaks as needed. ]]></content>
    <excerpt><![CDATA[There's absolutely nothing wrong with taking a mental break when working on software development. However, there's a small but significant difference between taking a break and randomly scouring the internet. ]]></excerpt>
  </item>
  <item>
    <title>Dual Monitors on Kubuntu 11.10 (In Under 10 Minutes)</title>
    <link>http://www.vertstudios.com/blog/dual-monitors-kubuntu-11-10-in-10-minutes/</link>
    <pubdate>Sat, 03 Mar 2012 02:32:48 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3874</guid>
    <description></description>
    <content><![CDATA[If you're having trouble getting dual monitors to work on the latest version of Kubuntu (Currently 11.10), this guide will attempt to save your sanity!

<h2>Installing Dual Monitors on Kubuntu 11.10</h2>
Make sure you have the latest Nvidia drivers. To do this, Navigate to "Additional Drivers" via Applications => System => Additional Drivers. 

Now execute the following commands in your terminal in order to get <a href="http://willem.engen.nl/projects/disper/">disper</a>, a nice utility that saves us from the headache of configuring via Nvidia-Settings. 

<pre class="prettyprint">
$ sudo add-apt-repository ppa:disper-dev/ppa
$ sudo add-apt-repository ppa:nmellegard/disper-indicator-ppa
$ sudo apt-get update
$ sudo apt-get install disper disper-indicator
</pre>

(Credit to  <a href="http://www.joeyconway.com/blog/2011/08/13/ubuntu-how-to-extend-display-with-two-monitors/">Joey Conway</a>)

Verify that disper works by executing the following in your terminal:
<pre class="prettyprint">
$ disper -e
</pre>

This should extend your monitors, giving you the desired functionality. This is great, except for currently we'd have to do this every single time we boot up Kubuntu.

<h2>Activate Disper on Startup</h2>
My first instinct, being slightly familiar with Ubuntu, was to create a startup script in <b>/etc/init.d</b>. This, however, didn't seem to work. Instead of creating a script in the init.d directory, we'll create the script in a Kubuntu-specific directory called Autostart.

First, navigate to the Autostart directory:
<pre class="prettyprint">
$ cd ~/.kde/Autostart
</pre>

Now using your favorite text editor, create a script called <b>dual-monitors</b>

<pre class="prettyprint">
$ vim dual-monitors
</pre>

Paste in the following:

<pre class="prettyprint">
#!/bin/bash
/usr/bin/disper -e
</pre>

Save the file and quit the text editor. We now need to make the file executable or it will just be ignored by Kubuntu on startup.

<pre class="prettyprint">
$ chmod +x dual-monitors
</pre>

To verify the script works, we first need to get out of our current dual screen mode to make sure the script correctly puts us back in. Thus, we use disper to force only the primary display to appear.

<pre class="prettyprint">
$ disper -s
</pre>

Your 2nd monitor should deactivate. Now, while we're still in the ~/.kde/Autotest directory, execute the following:

<pre class="prettyprint">
$ ./dual-monitors
</pre>

If this causes the monitors to go back to dual-screen mode, then the script works! T

<h2>Now you have Dual Monitor Suuport!</h2>

Go ahead and restart your computer, and you should find that Kubuntu starts with your dual monitors functioning correctly.]]></content>
    <excerpt><![CDATA[If you're having trouble getting dual monitors to work on the latest version of Kubuntu (Currently 11.10), this guide will attempt to save your sanity!]]></excerpt>
  </item>
  <item>
    <title>K&amp;R: Error: conflicting types for &#039;getline&#039;</title>
    <link>http://www.vertstudios.com/blog/kr-error-conflicting-types-getline/</link>
    <pubdate>Sat, 10 Mar 2012 01:09:40 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3885</guid>
    <description></description>
    <content><![CDATA[So you're reading through K&R's <a href="http://www.amazon.com/C-Programming-Language-2nd-Edition/dp/0131103628/ref=sr_1_1?ie=UTF8&qid=1331341099&sr=8-1">The C Programming Language</a>, and you're on page 29 or so, section 1.9 entitled <b>Character Arrays</b>.

The beginning of the sample program is as follows:

[c]
#include &lt;stdio.h&gt;
#define MAXLINE 1000   /* maximum input line size */

int getline(char line[], int maxline);
void copy(char to[], char from[]);

/* print longest input line */
main()
...
[/c]

And, to your confusion, you receive the following error: <b>Error: conflicting types for 'getline' </b>

<h2>The Solution!</h2>

It turns out getline is included in stdio.h, similar to printf! You can complete the exercise by renaming the getline function to something different like "readline" or "get_the_line". ]]></content>
    <excerpt><![CDATA[So you're reading through K&R's <a href="http://www.amazon.com/C-Programming-Language-2nd-Edition/dp/0131103628/ref=sr_1_1?ie=UTF8&qid=1331341099&sr=8-1">The C Programming Language</a>, and you're on page 29 or so, section 1.9 entitled <b>Character Arrays</b>.]]></excerpt>
  </item>
  <item>
    <title>Introduction to Recursion - Part 1</title>
    <link>http://www.vertstudios.com/blog/introduction-recursion-part-1/</link>
    <pubdate>Sat, 31 Mar 2012 02:36:01 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3893</guid>
    <description></description>
    <content><![CDATA[Part 1 of a multipart series covering the basics of recursion. I hope you enjoy!

http://www.youtube.com/watch?v=TA_qrRZ1cpI]]></content>
    <excerpt><![CDATA[Part 1 of a multipart series covering the basics of recursion.]]></excerpt>
  </item>
  <item>
    <title>C: request for member in something not a structure or union</title>
    <link>http://www.vertstudios.com/blog/c-request-member-structure-union/</link>
    <pubdate>Tue, 03 Apr 2012 03:31:46 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3900</guid>
    <description></description>
    <content><![CDATA[If you're trying to pass a pointer to a structure to a function, you may be getting the compiler error <b>request for member ‘SOME_PROPERTY’ in something not a structure or union</b>. If you  <em>swear</em> you're passing in a pointer to the proper structure, and you're <em>certain</em>, there are no typos for the member name you're trying to access, you may just be experiencing a bit of pointer ambiguity. 

<h2> The Problem! </h2>
Consider a very simple example. 

[c]
// Example demonstrating C pointer ambiguity 
#include&lt;stdio.h&gt;

typedef struct{
  char* job;
  int age;
} Person;

void give_bob_a_job(Person*);

int main(){
  Person bob;
  give_bob_a_job(&amp;bob);
  printf(&quot;The job of bob is %s\n&quot;, bob.job);
        return 0;
}

void give_bob_a_job(Person *bob){
  *bob.job = &quot;Sysadmin&quot;;
}
[/c]

We compile the file
<pre class="prettyprint">
~$ gcc bob.c -o bob.o
bob.c: In function ‘give_bob_a_job’:
bob.c:18:6: error: request for member ‘job’ in something not a structure or union
</pre>

So we receive the error <b>error: request for member ‘job’ in something not a structure or union</b>. 

We run through a mental checklist:

<ul>
<li>Did I pass a pointer to the right structure?</li>
<li>Does that structure really have a 'job' member?</li>
<li>Did I make any typos in declaring the member or calling the member?</li>
</ul>

If all these check out, then we move on.

Let's look closer at the statement on line 18.
[c]*bob.job = &quot;Sysadmin&quot;;[/c]

This actually reads 
<blockquote>
'Assign the string "Sysadmin" to the pointer variable of bob.job'
</blockquote>

In other words, the deference operator (<b>*</b>) is dereferencing all of <b>bob.job</b> instead of dereferencing bob and accessing its job member. In this context, <b>bob</b> is just a pointer to Person, so it's a memory address. Thus the compiler error makes sense! 

Luckily, the solution is super simple.

<h2> The Solution! </h2>

We can be explicit about our dereferencing by using parenthesis. 
[c](*bob).job = &quot;Sysadmin&quot;;[/c]

This reads
<blockquote>
'Assign the string "Sysadmin" to the pointer variable of bob's job member'
</blockquote>

Replace line 18 with the correction, and the code should compile with the following output upon execution:

<pre class="prettyprint">
The job of bob is Sysadmin
</pre>

<h2>Syntax cleanup</h2>
Dereferencing a pointer to a structure is so common, we have a shorthand for doing so.

<pre class="prettyprint">(*foo).bar</pre>

is equal to

<pre class="prettyprint">foo-&gt;bar</pre>

so 

<pre class="prettyprint">bob-&gt;job = &quot;Sysadmin&quot;;</pre>

would work as well. ]]></content>
    <excerpt><![CDATA[If you're trying to pass a pointer to a structure to a function, you may be getting the compiler error <b>request for member ‘SOME_PROPERTY’ in something not a structure or union</b>. If you  <em>swear</em> you're passing in a pointer to the proper structure, and you're <em>certain</em>, there are no typos for the member name you're trying to access, you may just be experiencing a bit of pointer ambiguity. ]]></excerpt>
  </item>
  <item>
    <title>Git Workflow: Crap, I committed to master! </title>
    <link>http://www.vertstudios.com/blog/git-workflow-crap-committed-master/</link>
    <pubdate>Thu, 12 Apr 2012 05:08:21 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3911</guid>
    <description></description>
    <content><![CDATA[So you know you should pretty much <a href="http://scottchacon.com/2011/08/31/github-flow.html">never hack directly on master</a> when working with git. Instead, you should create branches and merge them later.  Beyond best practices for their own sake, some github projects really want you creating pull requests from a certain branch.   

Sometimes, however, I get in <b>the zone</b> and forget to checkout a branch because I want to get this feature DONE! In my haste, I commit to master directly. I don't want my pull request to be rejected just because I hacked on master.

<h2>What do we do now?</h2>

Luckily, recovery is extremely simple. We can fix the repo up to get back in line with branching best practices.

So say we've just committed to master and we're currently on the master branch.
<pre class="prettyprint">
$ git log
commit 9huuh23tnhubazhuxbeeashebcdjis3hl2iidu
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 22:15:10 2012 -0500

        Refactor new feature X to be more awesome

commit xotnhnt234ub23st2b323hb23tu2bh32bu23uu
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 22:05:10 2012 -0500

        New feature X

commit b232udh24xub2394d249ud394ub34bu9348ub9
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 12:05:10 2012 -0500

        Some upstream master commit
</pre>

The last two commits needed to be on their own branch, say <b>new_feature</b>. Your local master branch needs to be at "Some upstream master commit". Here's how we can accomplish this. 

<h3>Step 1) Create the new_feature branch</h3>
Since master is currently in the state we want the new_feature branch to be in (since we've just added our new feature commit), we can just branch off of master.

<pre class="prettyprint">
$ git branch new_feature
</pre>

So new_feature is just a direct copy of master at this point.

Right now, we're still on the master branch. As stated above, we want the master branch to be at "Some upstream master commit". We can accomplish this via <b>git reset --hard</b>. 

<h3>Step 2) Resetting the master branch</h3>

<b>A side note regarding git reset --hard</b>:

It's important to note that git reset --hard is NOT a safe operation. You CAN lose work if you don't use it carefully. Luckily, in this context, there's nothing to worry about since I'm guiding you through the process...but just for your toolbelt, visit this <a href="http://stackoverflow.com/a/1109433">StackOverflow</a> answer thread if you ever accidentally lose work to git reset --hard.

Anyway, to get the master branch back to "Some upstream master commit", we can copy the SHA of the commit from git log to our clipboard and execute

<pre class="prettyprint">
$ git checkout master
$ git reset --hard b232udh24xub2394d249ud394ub34bu9348ub9
HEAD is now at ... Some upstream master commit
</pre>

Also, for convenience, we can use the HEAD alias. In this example, we wanted to reference the commit that was 2 commits behind the latest commit. We could have equally executed

<pre class="prettyprint">
$ git checkout master
$ git reset --hard HEAD~2
</pre> 

The git log should now look like the following:
<pre class="prettyprint">
$ git log
commit b232udh24xub2394d249ud394ub34bu9348ub9
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 12:05:10 2012 -0500

        Some upstream master commit
</pre>


<h3>Step 3) Verification</h3>
We've verified the master branch is where it should be, so now we should checkout the new_feature branch and run a git log. 

<pre class="prettyprint">
$ git checkout new_feature
Switched to branch 'new_feature'
$ git log
commit 9huuh23tnhubazhuxbeeashebcdjis3hl2iidu
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 22:15:10 2012 -0500

        Refactor new feature X to be more awesome

commit xotnhnt234ub23st2b323hb23tu2bh32bu23uu
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 22:05:10 2012 -0500

        New feature X

commit b232udh24xub2394d249ud394ub34bu9348ub9
Author: Joseph McCullough &lt;joseph@vertstudios.com&gt;
Date:   Wed Apr 11 12:05:10 2012 -0500

        Some upstream master commit
</pre>

So we still have our work, but it's on a feature branch, as it should be! We're now free to send a pull request without any bickering from the project owner, or we can merge the new_feature branch later once it's ready for production.  ]]></content>
    <excerpt><![CDATA[So you know you should pretty much <a href="http://scottchacon.com/2011/08/31/github-flow.html">never hack directly on master</a> when working with git. Instead, you should create branches and merge them later.  Beyond best practices for their own sake, some github projects really want you creating pull requests from a certain branch.   

Sometimes, however, I get in <b>the zone</b> and forget to checkout a branch because I want to get this feature DONE! In my haste, I commit to master directly. I don't want my pull request to be rejected just because I hacked on master.]]></excerpt>
  </item>
  <item>
    <title>jQuery Table Sort Plugin &#124; Stupidly simple jQuery table sort</title>
    <link>http://www.vertstudios.com/blog/jquery-table-sort-plugin-stupidly-simple-jquery-table-sort/</link>
    <pubdate>Fri, 13 Apr 2012 21:16:44 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3926</guid>
    <description></description>
    <content><![CDATA[I needed a simple jQuery plugin to let me sort table columns. Unfortunately, I couldn't find one that captured the simplicity I was looking for. I don't need 1000+ lines of code for a simple table sort!

<h2>The Stupid Table Sort!</h2>
Consequently, I embarked on a journey to create a stupidly simple jQuery table sort plugin. Remaining true to that, I've named the plugin the <a href="http://joequery.github.com/Stupid-Table-Plugin/">Stupid jQuery Table Sort</a>. Flattering name, I know...this is why I'm not a marketer. 

<h2>Check out the demo!</h2>
<a href="http://joequery.github.com/Stupid-Table-Plugin/">View the demo</a>, and let me know what you think! ]]></content>
    <excerpt><![CDATA[I needed a simple jQuery plugin to let me sort table columns. Unfortunately, I couldn't find one that captured the simplicity I was looking for. I don't need 1000+ lines of code for a simple table sort!
]]></excerpt>
  </item>
  <item>
    <title>Introduction to Recursion – Part 2</title>
    <link>http://www.vertstudios.com/blog/introduction-recursion-part-2/</link>
    <pubdate>Mon, 16 Apr 2012 06:01:41 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3931</guid>
    <description></description>
    <content><![CDATA[Part two of the <a href="http://www.vertstudios.com/blog/introduction-recursion-part-1">Introduction to Recursion series</a>! In this video, we discuss the Factorial function and its recursive properties in depth.

http://www.youtube.com/watch?v=CboUF7gtVSo]]></content>
    <excerpt><![CDATA[Part two of the <a href="http://www.vertstudios.com/blog/introduction-recursion-part-1">Introduction to Recursion series</a>! In this video, we discuss the Factorial function and its recursive properties in depth.]]></excerpt>
  </item>
  <item>
    <title>VI Keybindings in your Shell</title>
    <link>http://www.vertstudios.com/blog/vi-keybindings-shell/</link>
    <pubdate>Wed, 25 Apr 2012 03:52:26 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3934</guid>
    <description></description>
    <content><![CDATA[There was once a very sad point in my development career where if I made a typo earlier in one of my bash statements, I would have to hold the left arrow to get my cursor over to the problem area and fix it. Then, one fateful day, I discovered VI keybindings in the shell!

<h2>Activating VI Keybindings</h2>

To get VI keybindings working in your shell, simply execute

<pre class="prettyprint">
$ set -o vi
</pre>

(If you decide you like vi keybindings in the shell and you want this mode enabled upon shell startup, append the command to your ~/.bash_profile for OS X and ~/.bashrc for linux ((<a href="http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html">Why the difference?</a>))

<h2>Using the VI Keybindings</h2>

The shell will have normal/insert mode as expected. Here are the commands I use frequently:

<pre class="prettyprint">
i - enter insert mode
esc - back to normal mode

* IN NORMAL MODE *
cc - clear the current line and enter insert mode
 C - clear from cursor until the end of the line and enter insert mode
dd - delete the current line
 D - delete from the cursor until the end of the line
 w - next word
 W - next white-space delimited word
 b - previous word
 B - previous white-space delimited word
dw - delete word
cw - change word
fx - find the next occurrence of the character 'x'
Fx - find the previous occurrence of the character 'x'
 $ - move the cursor to the end of the line
 0 - move the cursor to the beginning of the line
 ; - repeat last find command (preserves direction)
 l - move cursor right
 h - move cursor left
 k - scroll up through command history
 j - scroll down through command history
 A - move the cursor to the end of the line and enter insert mode
 I - move the cursor to the beginning of the line and enter insert mode

* Numeric modifier keys work as well! *
5W - move forward five white-space delimited words. 

</pre> ]]></content>
    <excerpt><![CDATA[There was once a very sad point in my development career where if I made a typo earlier in one of my bash statements, I would have to hold the left arrow to get my cursor over to the problem area and fix it. Then, one fateful day, I discovered VI keybindings in the shell!
]]></excerpt>
  </item>
  <item>
    <title>Ubuntu Screencast Software for 11.04+</title>
    <link>http://www.vertstudios.com/blog/ubuntu-screencast-software-11-04/</link>
    <pubdate>Wed, 25 Apr 2012 05:07:10 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3946</guid>
    <description></description>
    <content><![CDATA[I browsed Google for quite a while before I finally found a good product for recording screencasts on Ubuntu. Most software I found, no offense gtk-recordMyDesktop, was extremely outdated and hardly functional. Video quality was either terrible or video/audio was out of sync.

<h2>Enter Kazam!</h2>
Thanks to some more strict queries on Google, I found <a href="http://www.twm-kd.com/linux/kazam/kazam-1-2-0-released-as-stable/">Kazam</a> on <a href="http://www.askubuntu.com">AskUbuntu.com</a>. 

It has an extremely simple interface, as seen below.
<img src="http://i.imgur.com/WhhVN.png" alt="Kazam Ubuntu Screencast Software" />

The quality is just fine for simple screencasts, and it allows you to record audio that actually syncs with the video! 

<h2>Installation</h2>

First, we need some Python modules to be installed.
<pre class="prettyprint">
$ sudo apt-get install --reinstall gir1.2-gtk-2.0 python-software-properties software-properties-gtk
</pre>

Now we actually grab Kazam as instructed by their site.
<pre class="prettyprint">
$ sudo add-apt-repository ppa:kazam-team/stable-series
$ sudo apt-get update
$ sudo apt-get install kazam
</pre>

And you're done! You can run kazam via the command line or your distro's menu. 

<h2>Extras</h2>
If you happen to have FFMpeg installed, here's a nice 2-pass video/audio <a href="https://gist.github.com/2486369">encoder script</a> that encodes with H.264. ]]></content>
    <excerpt><![CDATA[I browsed Google for quite a while before I finally found a good product for recording screencasts on Ubuntu. Most software I found, no offense gtk-recordMyDesktop, was extremely outdated and hardly functional. Video quality was either terrible or video/audio was out of sync.]]></excerpt>
  </item>
  <item>
    <title>Markdown to PDF Utility</title>
    <link>http://www.vertstudios.com/blog/markdown-pdf-utility/</link>
    <pubdate>Thu, 03 May 2012 22:57:16 +0000</pubdate>
    <guid isPermaLink="false">http://www.vertstudios.com/blog/?p=3954</guid>
    <description></description>
    <content><![CDATA[I needed to get a Markdown document in PDF format. Unable to find a good solution, I set off to make a Markdown to PDF conversion utility. About 20 lines of Python later, here we are!

<h2>md2pdf: Markdown to PDF</h2>

You can download <a href="https://github.com/joequery/md2pdf">md2pdf</a> on Github. Installation instructions can be found in the README. Usage is extremely simple:

<pre class="prettyprint">
$ md2pdf my-markdown-document.md
</pre>

<h2>How it was made</h2>
This utility is actually pretty silly. It simply serves as a glue between
<a href="http://code.google.com/p/python-markdown2/">markdown2</a>, which takes Markdown and produces HTML, and <a href="www.xhtml2pdf.com">xhtml2pdf</a>, which takes HTML and produces PDFs. The script uses a system call because the xhtml2pdf interface is non-trivial. Consequently, you're probably better off not using this on a production server.  ]]></content>
    <excerpt><![CDATA[I needed to get a Markdown document in PDF format. Unable to find a good solution, I set off to make a Markdown to PDF conversion utility. About 20 lines of Python later, here we are!]]></excerpt>
  </item>
</channel>
</rss>
